<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amaurot Ch.</title>
  
  
  <link href="https://redbowtie.github.io/atom.xml" rel="self"/>
  
  <link href="https://redbowtie.github.io/"/>
  <updated>2023-09-25T01:27:10.770Z</updated>
  <id>https://redbowtie.github.io/</id>
  
  <author>
    <name>Estus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RecurDyn Co-simulation with SIMULINK</title>
    <link href="https://redbowtie.github.io/2023/09/19/RecurDyn/"/>
    <id>https://redbowtie.github.io/2023/09/19/RecurDyn/</id>
    <published>2023-09-19T05:32:00.000Z</published>
    <updated>2023-09-25T01:27:10.770Z</updated>
    
    <content type="html"><![CDATA[<p>Latest things always(?) brings compatibility issues. <span id="more"></span></p><!--toc--><p>I can’t remember what problem I ran into concerning the compatibility. Maybe it’s the OpenOCD debugging, but that’s the opposite case. </p><p>Since that I cannot get access to a copy of solidworks file, and my teammate used RecurDyn, so I’ll do the same. The other attempts seems meaningless without accurate simulations. If I cannot get this done this week, I think I’ll obtain a proper reason to give up.</p><p><br></p><h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><hr><p>System : <code>Win 11</code><br>RecurDyn: <code>R9V5</code><br>MATLAB: <code>2023a</code><br><br></p><h2 id="Start-with-existing-examples"><a href="#Start-with-existing-examples" class="headerlink" title="Start with existing examples"></a>Start with existing examples</h2><hr><p>The main tutorial was followed by official tutorial video(sort of).</p><p>At the first glance,  this is quite new to me. I have seen ANSYS when viewing thesis, glad that this software looks a little more modern.</p><p>So the official examples (Of R9V5) are located in <code>[RedurDyn main directory]/Help/Examples/Simulink_CoSim/</code>. It is suggested to copy the file to your workspace.</p><p>After opening the <code>rdyn</code> file, a very strange combination of objects will be showed.</p><p><img src="RDYN4.png" alt="mouse?"></p><p>By Default things could be different, and the interactions may take some time to get hands on. Note that the desk may be rendered as only wire, if it look awful, select it and right click, change the property under <code>each rendering</code>. It seems that the <code>Automatic</code> behave strangely.</p><p><br></p><h2 id="Set-Input-and-Output"><a href="#Set-Input-and-Output" class="headerlink" title="Set Input and Output"></a>Set Input and Output</h2><hr><p>In <code>Communicator</code> tab, select <code>Plant_in</code> and <code>Plant_out</code>. For input, just set the desired name first.  For the latter, you may use the internal functions (use with markers).</p><p>For example, opening the <code>Plant_in</code> you can see that <code>Control_torque</code> is already there. And in the corresponding Forces, the input is assigned to the rotational axial force.</p><p><img src="RDYN7.png" alt="Input"></p><p>As for output, you may enter <code>DX(1, 2)</code> and <code>VX(1, 2)</code> for calculating difference on displacement and velocity. In the drop-down list, left-click to use a function, and right click to see its manual, e.g.</p><p><img src="RDYN8.png" alt="Documentations"></p><p>You may also change the in/output name in the data base for better clarification.</p><p>Then, click <code>SimuLink</code> in <code>Communicator</code> Tab, check in/outputs again, select export.</p><p><img src="RDYN9.png" alt="eg"><br><br></p><h2 id="MATLAB-Side"><a href="#MATLAB-Side" class="headerlink" title="MATLAB Side"></a>MATLAB Side</h2><hr><p>In the command window, switch to the same workspace where the previous files are, run the following script one by one.<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; mouse <span class="comment">% (The name of the project)</span></span><br><span class="line">&gt;&gt; rdlib</span><br></pre></td></tr></table></figure></p><div class="alert danger no-icon"><p>Note that if the second step returns an error, maybe considering check the last part of the article.</p></div><p>If everything is OK, a block will pop up, then the rest is regular.</p><p>Can be seen from the workspace data that S-function is also involved, interesting.</p><p><img src="RDYN10.png" alt="Block"></p><p>Use the <code>*.mdl</code> that comes along in the first part, replace the block, we’ll able to see the co-simulation running.</p><div class="alert success no-icon"><p>Note that, if the RecurDyn need to be closed in order to obtain the data record. And it’s normal that the program close itself.</p></div><p><br></p><h2 id="Plot-Viewing"><a href="#Plot-Viewing" class="headerlink" title="Plot Viewing"></a>Plot Viewing</h2><hr><p>The meaning of states can be found on official <a href="https://support.functionbay.cn/cn/faq/single/889">site</a></p><p>To load the animation, you may directly drag <code>[(project name)_(number)]/*.rad</code> file into RecurDyn.</p><p>As for detailed numerical plots, select <code>plot result</code> in <code>Analysis</code>. The layouts of windows can be changed in the corresponding tab, and in tool, click <code>LoadAni</code> can provide more direct analyzing experience.</p><p><img src="RDYN11.png" alt=""><br><br></p><h2 id="Problem-Caused-by-Version-Changes"><a href="#Problem-Caused-by-Version-Changes" class="headerlink" title="Problem Caused by Version Changes"></a>Problem Caused by Version Changes</h2><hr><p>I encountered this issue while running <code>rdlib</code> to generate the RecurDyn block in SIMULINK, Got an error that shows:</p><blockquote><p>rdlib Unrecognized function or variable ‘last_Matlab_version_str’. Error in rdlib (line 56) sys=[sys,last_Matlab_version_str,’_’,last_minor_version_str];</p></blockquote><p>However, when I googled this, the only suggestion is that the newer version of interface need to be used. This is kinda strange. Until I looked inside about the detailed code. And, according to the support <a href="https://functionbay-my.sharepoint.com/:x:/p/download/EescrUy_rXtGhW6HpP2c-MEB7VhB9pLuc12MIf-8_Ib-Ew?rtime=Sm8Agry420g">webpage</a>, the specified last support was up to 2020a. </p><p>In the past few major releases, MATLAB will change its secondary version number, i.e. from <code>9.12.xxx(2022a)</code> to <code>9.14.xxx(2023a)</code>. Since it has been in this way, cannot say that it’s strange not update the major version number. However, I did noticed that the major number become <code>23</code> in <code>2023b</code>. These changes can also be validated through online documentation <a href="https://www.mathworks.com/help/releases/R2023a/matlab/ref/version.html?searchHighlight=version&amp;s_tid=doc_srchtitle">2023a</a> and <a href="https://www.mathworks.com/help/releases/R2023b/matlab/ref/version.html?searchHighlight=version&amp;s_tid=doc_srchtitle">2023b</a>.</p><p>In general, this <code>rdlib</code> and the file with same project name rely on the return value of function <code>version</code>, and get its 2nd, 3rd and other character to determine the generated interface, rather than <strong>dot</strong>. However, as the version changed so the major number become two digits, the whole thing messed up. 3 becomes the major number, naturally, the interface is not suitable for the new SIMULINK.</p><p>The gimmick is to simply change relative references of <code>version</code> into the version number of 2023a and things will be fine. Like this.</p><p><img src="RDYN5.png" alt="mouse.m"></p><p><img src="RDYN6.png" alt="rdlib"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Latest things always(?) brings compatibility issues.</summary>
    
    
    
    <category term="Dynamcis" scheme="https://redbowtie.github.io/categories/Dynamcis/"/>
    
    
    <category term="Simulation" scheme="https://redbowtie.github.io/tags/Simulation/"/>
    
    <category term="Dynamics" scheme="https://redbowtie.github.io/tags/Dynamics/"/>
    
    <category term="RecurDyn" scheme="https://redbowtie.github.io/tags/RecurDyn/"/>
    
    <category term="SIMULINK" scheme="https://redbowtie.github.io/tags/SIMULINK/"/>
    
  </entry>
  
  <entry>
    <title>Dynamics Review and Simscape Multibody</title>
    <link href="https://redbowtie.github.io/2023/09/14/Dynamics/"/>
    <id>https://redbowtie.github.io/2023/09/14/Dynamics/</id>
    <published>2023-09-14T09:32:00.000Z</published>
    <updated>2023-09-19T05:37:32.459Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><!--toc--><p><br></p><h2 id="Where-it-started"><a href="#Where-it-started" class="headerlink" title="Where it started"></a>Where it started</h2><hr><p>At the start I was assigned with an mission to, eventually, realise a inverted-pendulum-ish object (after many simplification with certain constraints). It was a good chance that to get more familiar with SIMSCAPE. At least, the idea sounds good.</p><p>In the past simscape simulations, robots were fixed onto a axis (prismatic joint), which prevent from dropping. As by default, if you directly put something in it, then run. Things just falls. For many ideal objects, this method suits fine. It is suitable for investigating 2D movement, and no need to care for the wheels, and easy to damping coefficients.</p><p><img src="DYN_1.png" alt="Properties of prismatic joint"></p><h2 id="Spatial-Contact-Force-and-Rectangular-Joint"><a href="#Spatial-Contact-Force-and-Rectangular-Joint" class="headerlink" title="Spatial Contact Force and Rectangular Joint"></a>Spatial Contact Force and Rectangular Joint</h2><hr><p>However, in a more realistic sense, things could get off from the ground. Or, it could fall from certain height, and it could have friction force. I had a little research on this, and for the ground, it can be regular solid blocks, if surface with different height is required, then use <code>Grid surface</code> suits best. But how to make objects interactive with each other? Answer is on the title. Thanks to a project that I recently discovered, it is the very example I need. And rectangular joint also suits for bi-directional movement. If the torque suits, training for jump is also possible</p><p><img src="DYN_2.png" alt="SCF Block"></p><h2 id="Modelling-Problems"><a href="#Modelling-Problems" class="headerlink" title="Modelling Problems"></a>Modelling Problems</h2><hr><p>Seeing two different object collide in simscape is satisfying, as it is what I wanted to do. The object after simplification looks just like a RoboMaster <a href="https://zhuanlan.zhihu.com/p/563048952">Robot</a>, but obviously I didn’t take this article as an example. Just like Regular Lagrange method, I calculate <strong>Kinematics and Dynamics</strong> for the robot, get <strong>Lagrangian</strong>, and then solve the equation. Everything was good before that I saw my object took off in simscape simulation. That was hilarious, but also terrible.</p><p><img src="DYN_3.png" alt="Not this one, but similar results"></p><p>An idea came to me that, did I just messed up in modelling process? Indeed, because I’m not quite good at theoretical mechanics. It always confuse me that how to calculate the rotational energy of a object with aggregate translational and rotational velocities, especially the moment of inertia, the axis for analysis etc. Or maybe it’s the introduction of friction force would change the model greatly, which differs from my intuitive sense.</p><h2 id="Lagrange-Method"><a href="#Lagrange-Method" class="headerlink" title="Lagrange Method"></a>Lagrange Method</h2><hr><p>Anyway, I have to find a way to find out the exact problems. So starting from the simplest model I cold think of, a two-wheel self-balance vehicle, which also could use the <code>spatial contact block</code>. </p><p><img src="DYN_4.png" alt="Coordinates"></p><p>Analyse the systems by parts, but before that, list the positions for centers of mass, it helps to write derivatives.</p><h3 id="Centers-of-Mass"><a href="#Centers-of-Mass" class="headerlink" title="Centers of Mass"></a>Centers of Mass</h3><p>Wheel:</p><script type="math/tex; mode=display">[x_w,\, y_w]= [x,\,0]</script><p>Pendulum:</p><script type="math/tex; mode=display">[x_p,\, y_p]=[x+l\,\sin\theta,\, l\,\cos\theta]</script><h3 id="Translational-Velocity-and-Energy"><a href="#Translational-Velocity-and-Energy" class="headerlink" title="Translational Velocity and Energy"></a>Translational Velocity and Energy</h3><p>Wheel:</p><script type="math/tex; mode=display">\mathrm{V_w}=\left[\begin{array}{cc}\dot x&0\end{array}\right]^\intercal</script><script type="math/tex; mode=display">T_w = \frac{1}{2}m_w\dot x^2</script><p>Pendulum:</p><script type="math/tex; mode=display">\mathrm{V_p}=\left[\begin{array}{cc}\dot x+\dot\theta\,l\,\cos\theta & -\dot\theta\,l\,\sin\theta\end{array}\right]^\intercal</script><script type="math/tex; mode=display">T_p = \frac{1}{2}m_p[(\dot x+\dot\theta\,l\,\cos\theta)^2+(-\dot\theta\,l\,\sin\theta)^2]</script><h3 id="Rotational-Velocity-Moment-of-inertia-and-Energy"><a href="#Rotational-Velocity-Moment-of-inertia-and-Energy" class="headerlink" title="Rotational Velocity, Moment of inertia and Energy"></a>Rotational Velocity, Moment of inertia and Energy</h3><p>Wheel</p><script type="math/tex; mode=display">\omega_w=\frac{\dot x}{R},\,\,I_w=\frac{1}{2}m_wR^2</script><script type="math/tex; mode=display">P_w = \frac{1}{2}I_w\cdot\frac{\dot x^2}{R^2}</script><p>Pendulum</p><div class="alert success no-icon"><p>Note that, according to the <strong>König’s theorem</strong>, the following moment of inertia is with respect to the original center of mass. <strong>Do not</strong> apply <strong>Parallel axis theorem</strong> unless you’re sure it’s the case. I used to use the latter so the calculations always went wrong.</p></div><script type="math/tex; mode=display">\omega_p = \dot\theta,\,\,I_p = \frac{1}{12}(4\,l^2+b^2)</script><script type="math/tex; mode=display">P_p=\frac{1}{2}I_p\cdot\dot\theta^2</script><h3 id="Lagrangian"><a href="#Lagrangian" class="headerlink" title="Lagrangian"></a>Lagrangian</h3><p>As for the potential energy, the zero-potential surface crosses the center of the wheel, so only counts pendulum’s potential energy.</p><script type="math/tex; mode=display">\begin{array}{rcl}L&=&T\,-\,V\\&=&T_w\,+\,T_p\,+\,P_w\,+\,P_p-m_p\,g\,l\,\cos\theta\end{array}</script><p>Then list the generalized force to the corresponding generalized coordinate, list the equation.</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}\frac{d}{d\,t}\frac{\partial\,L}{\partial\,\dot x}-\frac{\partial\,L}{\partial\, x} &=& \frac{1}{R}\tau\\\frac{d}{d\,t}\frac{\partial\,L}{\partial\,\dot\theta} - \frac{\partial\,L}{\partial\,\theta} &=& -\tau\end{array}\right.</script><div class="alert danger no-icon"><p>Note that, <strong>generalized force</strong> is not limited to force, but all sort of input, however, <strong>the properties</strong> of the input and the coordinate <strong>should be aligned</strong>, e.g., force corresponds to the linear displacement, and torque corresponds to the angular one.</p></div><p>The rest is to use matrix product to get a nonlinear equation, after simple linearization, the model is obtained.</p><h2 id="Newton’s-method"><a href="#Newton’s-method" class="headerlink" title="Newton’s method"></a>Newton’s method</h2><hr><p>If getting used to it,  the pre-calculation part is quite simple. The analysis is also conducted in parts.</p><p>For the actuation wheel:</p><script type="math/tex; mode=display">\begin{array}{rcl}m_w\ddot x&=& N_f - N'\\I_w\frac{\ddot x}{R} &=& \tau - N_f\cdot R\\\\\textrm{where}\\N_f&&\textrm{Static friction applied on wheel}\\N,\,N'&& \textrm{Force applied from wheel to pendulum, and its reaction force}\\x&& \textrm{Linear displacement of the wheel}\end{array}</script><p>For the pendulum, we have:</p><script type="math/tex; mode=display">\begin{array}{rcl}N &=& m_p \frac{\partial^2}{\partial t^2}(x\,+\,L\,\sin\theta)\\P\,-\,m_p\,g &=& m_p \frac{\partial^2}{\partial t^2}(L\,\cos\theta)\\I_p\,\ddot\theta &=& P\,L\,\sin\theta\, -\,N\,L,\cos\theta\,-\tau\end{array}</script><p>When I completely figured it out, its quite straightforward.</p><p>However, the following solve systems of equations is way more complicated than the prior method. It is recommended to use MATLAB solve the equation and obtain its <code>Jacobian</code> at the equilibrium position.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><hr><p>Two methods should give the identical numerical result, otherwise maybe check somewhere that could go wrong. However, I’m not sure if I could figure out the solutions when some constraint is applied. At least in the simplified model, it worked, which encouraged me.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;It regularly makes me headache.</summary>
    
    
    
    <category term="Dynamics" scheme="https://redbowtie.github.io/categories/Dynamics/"/>
    
    
    <category term="Control" scheme="https://redbowtie.github.io/tags/Control/"/>
    
    <category term="MATLAB" scheme="https://redbowtie.github.io/tags/MATLAB/"/>
    
    <category term="Dynamics" scheme="https://redbowtie.github.io/tags/Dynamics/"/>
    
  </entry>
  
  <entry>
    <title>Storage Goes Boom</title>
    <link href="https://redbowtie.github.io/2023/08/10/Raid15/"/>
    <id>https://redbowtie.github.io/2023/08/10/Raid15/</id>
    <published>2023-08-10T06:32:00.000Z</published>
    <updated>2023-08-10T14:00:03.907Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><h2 id="Episode-2-IO-ERROR-ERROR-and-ERRORS"><a href="#Episode-2-IO-ERROR-ERROR-and-ERRORS" class="headerlink" title="[Episode 2] IO ERROR, ERROR and ERRORS"></a>[Episode 2] IO ERROR, ERROR and ERRORS</h2><p>As Qbittorrent downloads more and more contents, IO error tends to be more frequent. Initially thought it was just the error on LSI or something else, nothing relavant, as everything seems to be fine after resume the process. So one day, the system suddenly failed to recognize the corresponding drive. Then I got. like 60+ IO errors.</p><p>Considering this could be the second time. At that moment I nearly got frozen. Damn. I SWEAR that I would never try to save bucks on my storage devices.</p><p>On the one hand, I recently have had this urge to purchase a new laptop, but not sure if I should choose 4050 or 4060. Naturally on that night, the answer came. let it be 4050 and the remaining money could be used to buy disks.</p><p>This time I went HC320, which should be arrived by tomorrow, will add some pics.</p><p>Then, another difficulty. A hard drive bay. ORICO has been notorious, so definitely no. But what are the differences between those models? There are so many of them. I spent hours and it really made me headache. So there’re mainly two brand, JMS and ASM, and the tech behind designs and manufacturing should be pretty mature. Then comes the problem: Some brands uses components with lower quality, and many models somes with 2A power supply, which is not enough for enterprise level disks. The latter one is relatively easy to handle, just buy 12V 3A supply from trusted ones, like MEAN WELL. But the former, collecting and analyzing information are really painful. Practical info are limited in Tieba, but also the availability is time limited, the overall quality of the product will not be the same all the time. Like MAIWO, it used to be the enthusiasts’ choice, but the QA grow worse; as for ULIKE, it was fine, until recently it degraded 5V chip and circuit peripheral designs, so no. It was the most surprising that, Ugreen, a brand I hated and in my impression is close to ORICO, provides fair products.</p><p>Double check my conclusions, I purchased CM588. To be honest, the quality is really good, heavy metal which helps to cool faster, worth the extra cost comparing with plastic model.</p><p><img src="1.jpg" alt="CM588"></p><p>And the next, is about hibenation strategy. Unlike mount in chasis, if auto hibernation is enabled, constant start-ups and turning off rises great current, which, after multiple times, cause damage to the disk. Unless that the drive is used as the cold spare. So according to my usage, I’ll need to get rid of that limitation.</p><p>The controller of this model is JMS578, though I previouly confirmed that with the support, the tech support asked me to show hardware id to double check. I get it, it makes sense, not all customers would remember what they’ve bought. It’s just, to let the bay to be recognized in the system, a drive must be inserted. This is not good. Glad that I have a spare 2.5inch drive that fits, otherwise I wouldn’t use the HC320 to do this.</p><p>According to the tutorials, it is weird that flash hardware still require a drive inside. As this is the first time, it did cause me concerns. But it turns out to be fine, guees it’s the price of the extra protection.</p><p>The provided software is just like regular EEPROM flash program, so the steps are really simple, not like early years, you have to short-wire some of the pins on the chip, yikes.<br><img src="2.png" alt="Flash"></p><p>Press start, if everythings correct, the <code>F/W</code> and <code>EEPROM</code> should have two green <strong>PASS</strong>. That’s all I can do today.</p><hr><h2 id="Episode-1-DO-NOT-FORGET-ABOUT-3-2-1-RULE"><a href="#Episode-1-DO-NOT-FORGET-ABOUT-3-2-1-RULE" class="headerlink" title="[Episode 1] DO NOT FORGET ABOUT 3-2-1 RULE."></a>[Episode 1] DO NOT FORGET ABOUT 3-2-1 RULE.</h2><p>Obviously, I didn’t, so… I lost almost all previous data in the last three years about my past courses. Though, for those I needed frequently to check, I got backups on my own laptop, so things aren’t that bad..</p><p>And I have been quite a while for me to use the  raid card.</p><p>In a nutshell, I think I’ve found what is the real criminal after all those data loss. <strong>THAT IS THE RAID CARD!!!</strong> To be unpartially, indeed, my drives are all cheap retired disks from servers, which, they are more likely to encouter problems. But the error rate is unusual and extremely unstable, even if I swapped a newer drive.</p><p>Well, I know I’d better to check this everyday for at least two or three weeks to make sure that it is really working correctly right now. I want no longer suffer such data loss. It’s terrible.</p><p>And in the future, I plan to expand the NAS, though the detailed scheme is not decided yet. Because there’re just too many things to bother right now.</p><p>And I haven’t tell my stories yet.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Now comes the second episode.</summary>
    
    
    
    <category term="Tweak" scheme="https://redbowtie.github.io/categories/Tweak/"/>
    
    
    <category term="NAS" scheme="https://redbowtie.github.io/tags/NAS/"/>
    
    <category term="Storage" scheme="https://redbowtie.github.io/tags/Storage/"/>
    
    <category term="Raid" scheme="https://redbowtie.github.io/tags/Raid/"/>
    
  </entry>
  
  <entry>
    <title>Blog update logs</title>
    <link href="https://redbowtie.github.io/2023/08/03/Log/"/>
    <id>https://redbowtie.github.io/2023/08/03/Log/</id>
    <published>2023-08-03T13:32:00.000Z</published>
    <updated>2023-08-11T17:19:58.490Z</updated>
    
    <content type="html"><![CDATA[<p>Time to make a separate article for this matter.<span id="more"></span></p><hr><p>Today I finally re-installed my system. Hate migration the most. It is worth noting that, compiled node modules can be reused and the compatible node version is <strong>16</strong>, at least not the latest LTS. and there’s no need to install hexo globally, just in the folder is enough. while using add <code>npx</code> at front works fine.</p><hr><p>Every time I try to add some features and the blog will malfunction due to some dependency errors and what so ever, which takes a lot of extra time to do some update or check verions..etc.</p><p>When migrating I always forget what extensions I added in previous one.<br>Maybe just add here for reference.</p><p>[Sat Mar 11 2023, 15:42] Fix: Equation rendering on site<br>Rendering at <code>localhost</code> works fine, but unable to see them at remote site.<br>Chrome error:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mixed Content: The page at &#x27;xxx&#x27; was loaded over HTTPS, but requested an insecure script &#x27;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#x27;. This request has been blocked; the content must be served over HTTPS.</span><br></pre></td></tr></table></figure><br>Change <code>url</code> in <code>node_modules/hexo-renderer-mathjax/mathjax.html</code></p><div class="alert danger no-icon"><p>Mathjax CDN shutting down</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Using alternatives, like: &#x27;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?...&#x27;</span><br></pre></td></tr></table></figure><hr><p>[Tue Mar 22 2022, 11:59] Index Improvement<br>Feed:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm i hexo-generator-feed</span> </span><br></pre></td></tr></table></figure><br>Pin-top:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm un hexo-generator-index</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm i hexo-generator-index-pin-top</span> </span><br></pre></td></tr></table></figure></p><hr><p>[Tue Mar 22 2022, 14:25] Latex support<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm Un hero-renderer-marked</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm i hexo-renderer-kramed</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm i hexo-renderer-mathjax</span></span><br></pre></td></tr></table></figure><br>with <a href="https://blog.csdn.net/qq_44766883/article/details/107103668">modification</a> of<br><code>node_modules/hexo-renderer-kramed/lib/renderer.js</code><br><code>node_modules/kramed/lib/rules/inline.js</code><br><code>node_modules/hexo-renderer-mathjax/mathjax.html</code></p><p>But maybe there’s a more elegant way to render latex, the website itself is static, so there’s not too much to worry about even using some deprecated components. But there exists some extensions like <strong><em>hexo-math</em></strong>, which I don’t know how it works and why it didn’t work, but one day I should swtich to it.</p><p>Well and plus, kramed <strong>does</strong> render quick. A lot faster than pandoc.</p><p>BTW, because render for LaTeX wasn’t available, so many equations were typed in different ways, which I suppose, I could have little time to fix.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Time to make a separate article for this matter.</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Create Personal Network with Tailscale</title>
    <link href="https://redbowtie.github.io/2023/08/03/tailscale/"/>
    <id>https://redbowtie.github.io/2023/08/03/tailscale/</id>
    <published>2023-08-03T12:10:00.000Z</published>
    <updated>2023-08-16T16:17:54.268Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><!--toc--><h2 id="Why-I-do-this"><a href="#Why-I-do-this" class="headerlink" title="Why I do this"></a>Why I do this</h2><p>Cannot sure since when have I had this idea of connecting all my personal computers together. Maybe it’s because I wanna remote my comupter, or pass through resources on my NAS, etc. The demand is there, but not quite strong.</p><p>In the past the most stable way was to ask for a public IP from ISP, or, some solution as <code>zerotier</code>, then rent a server as bridge to . However, these two method have some security issues, or potential ones. I had limited attention on this and I don’t wanna change some settings then jsut got hacked. That would be bad.</p><p>And one day I asked two of my friends who are acquainted with networks, they suggested <code>innernet</code>, <code>tailscale</code>, <code>netmaker</code> and <code>wireguard</code>. Among them, <code>tailscale</code> is the most convenient solution and works fine even without bridge server.</p><p>And, official guides are very helpful, which can be seen <a href="https://tailscale.com/kb/start/">here</a></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>As <code>tailscale</code> based on open source <code>WireGuard</code> protocal, and even has GUI, supports variety of environment, installation may be simple as you want, download packages or using command line. both are OK.</p><p>links are <a href="https://tailscale.com/download/">here</a> </p><p><img src="tail2.png" alt="LINKS"></p><h2 id="Binding-Machines"><a href="#Binding-Machines" class="headerlink" title="Binding Machines"></a>Binding Machines</h2><p>Take GUI as example. When you login, the next step would be asking you if you need to add it into your network. And for CLI version, it needs to set keys, but no loigin required.</p><div class="alert success no-icon"><p>By default, the authorization cycle of each machine is set to 180 days, which can be changed in the settings device management, also, you can turn on device approval for futher protection.</p></div><p><img src="3.png" alt="demo"></p><p>Maybe you would think that 180 is still to short, then for any individual machine, you can disable expiry in <code>Machines</code> tab. Then you can see <code>Expiry disabled</code><br><img src="4.png" alt="show"></p><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>As all similar services do, any joined machine would be assigned with a unique IP address (not only v4, but also v6). That’s how you could access other devices in your personal network. Considering my experience, using v6 when available is the best choice.</p><p>The simplest way to test is to use <code>ping</code></p><p>As exposing  IP add. is not safe, so jump to the conclusion.</p><p>Under exact same LAN, the average latency would be <code>30ms</code>. The numbers increase and then reverse to small ones like 2ms. Which looks really strange, this could be my router behavior.</p><p>Onto a more practical approach, two of the devices are ipad/Mac using China Unicom cell data, and one is my NAS using wired network from the same ISP.  Ipad used Microsoft RDP to control my NAS, when connection stablized, the lag was incredibly acceptable. On the Mac side, avg. ping requires <code>200ms</code>. </p><p><strong>Astonishing!</strong></p><h2 id="Subnet-Routers"><a href="#Subnet-Routers" class="headerlink" title="Subnet Routers"></a>Subnet Routers</h2><p>TBC..</p><h2 id="Potential-Problems"><a href="#Potential-Problems" class="headerlink" title="Potential Problems"></a>Potential Problems</h2><div class="alert success no-icon"><p>GUI version of Tailscale uses VPN approach and which, surely conflicts with my regular proxy.</p></div><p>OK that is a mistake that I forget to turn off the enhanced mode of <code>Surge</code>.</p><p>I tried a lot using go-compiled extension, and not sure if I really messed up with my utun configurations, and the documentation of the third way is really poor, never mind.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Emm, simple but enough.</summary>
    
    
    
    <category term="Tweak" scheme="https://redbowtie.github.io/categories/Tweak/"/>
    
    
    <category term="Networks" scheme="https://redbowtie.github.io/tags/Networks/"/>
    
  </entry>
  
  <entry>
    <title>Begin, again</title>
    <link href="https://redbowtie.github.io/2023/06/28/beginAgain/"/>
    <id>https://redbowtie.github.io/2023/06/28/beginAgain/</id>
    <published>2023-06-28T15:41:18.000Z</published>
    <updated>2023-06-29T02:37:22.660Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><p>Hard to say that if I’ve already predicted this, or at least I realized this could happen.</p><p>There were a lot to say. I’m not keen on taking photos with others. While indeed, that’s something. But I didn’t get any sense of relief. I did not expected that talking with my counsellor would bring me sadness of some sort. Maybe it’s because she’s the one who knows me longest during these years. Meanwhile, she became unsatisfied with the current status of insitute. Her tone was different from ever. Just like I was. Probably those feelings resonoted.</p><p>Regardless of the extent that I accepted my result, I’ll eventually do. Wish that I could see some words earlier. On the other hand, at least to my knowledge, some things are inevitable. So consider this a lesson.</p><p>Life is hard, especially harder when similar things went to bad ends. Courages were exhausted, and the leftovers was smashed into grounds, teared apart.</p><p>Things get a little better after I made a newer CV, feels like getting woven threads straight. I got a lot, a lot to do. But I cannot do things like reviewing. Project-based study would be more appropriate.</p><p>The next two months are for the wheeled bipedal, time is limited, if only using LQR would make it work then that would be great. The robot serves as a platform for the upcoming research, pity that I cannot continue. So the main part here was to practice the actual implementation of STM32 and prototyping abilities. As well as the skills that I was not familiar with, like multibody, motor control (if not DC motor), and gazebo.</p><p>As for the rest? Time would tell.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Finally I wrote this.</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Double Inverted Pendulum on Two-wheeled Self-balancing Vehicle</title>
    <link href="https://redbowtie.github.io/2023/05/15/GradThesis/"/>
    <id>https://redbowtie.github.io/2023/05/15/GradThesis/</id>
    <published>2023-05-15T06:32:00.000Z</published>
    <updated>2023-06-28T13:49:24.527Z</updated>
    
    <content type="html"><![CDATA[<p>Next time I could do better. <span id="more"></span></p><p>To view the topic part, click <a href = "#start">here</a>, for some substantiation, I’ve skipped them, as they’re not presented clearly from the beginning.</p><p>To view the problems encoutered during implementation, click <a href = "#Exp">here</a>.</p><hr><!--toc--><hr><h2 id="N-Prologue"><a href="#N-Prologue" class="headerlink" title="N. Prologue"></a>N. Prologue</h2><p>I didn’t expect this to begin so early. <del>So I’ll try to make this a combination of <strong>paper writing</strong> and the <strong>project designing.</strong></del> Instead, the paper writing technique will be separated to <a href="../PaperWriting/">here</a>.</p><p><del>Oh, and mabe if the article is too long, I’ll consider to make it two.</del></p><hr><h1 id="I-Previously-on-inverted-pendulum"><a href="#I-Previously-on-inverted-pendulum" class="headerlink" title="I. Previously on  inverted pendulum"></a>I. Previously on  inverted pendulum</h1><p>Some priorities:</p><ul><li>Remodelling the invert pendulum due to the conflict between two models.</li></ul><h2 id="Construct-mathematical-model"><a href="#Construct-mathematical-model" class="headerlink" title="Construct mathematical model"></a>Construct mathematical model</h2><p>Well there are many ways to make such model such as from</p><ul><li>Lagrange equation</li><li>Force analysis</li></ul><p>So maybe I can go through most of them.</p><h3 id="Lagrange-equation"><a href="#Lagrange-equation" class="headerlink" title="Lagrange equation"></a>Lagrange equation</h3><script type="math/tex; mode=display">\frac{d}{dt}(\frac{\partial L}{\partial \dot{q_i}})-\frac{\partial L}{\partial q_i}=Q_i\tag{1.1}</script><script type="math/tex; mode=display">L = T-V \tag{1.2}</script><p>For cart:</p><script type="math/tex; mode=display">M,\ x_c,\ \dot{x_c},\ F</script><p>For the pole:</p><script type="math/tex; mode=display">m,\ l,\ J_c,\ \theta,\ \dot{\theta}</script><p>Note that $l$ is the total length of the pole.</p><p>The moment of inertia to center of mass:</p><script type="math/tex; mode=display">J_c = \frac{1}{12}ml^2</script><p>The moment of intertia to one end of the pole, perpendicular</p><script type="math/tex; mode=display">J=J_c+\frac{1}{4}ml^2=\frac{1}{3}ml^2 \tag{1.3}</script><p>The kinematic and potential energy for cart:</p><script type="math/tex; mode=display">T_c=\frac{1}{2}M\dot{x_c}^2,\ \ V_c=0 \tag{1.4}</script><p>The position of the pole:</p><script type="math/tex; mode=display">x_p=x_c+\frac{1}{2}l\sin\theta,\ \ y_p=\frac{1}{2}l\cos\theta \tag{1.5}</script><p>From <em>Eq. 5</em>, derive the pole’s kinematic and potential energy:</p><script type="math/tex; mode=display">T_p=\frac{1}{2}J_c\dot{\theta}^2+\frac{1}{2}m(\dot{x}_p^2+\dot{y}_p^2),\ \ V_p=\frac{1}{2}mgl\cos\theta \tag{1.6}</script><p>where</p><script type="math/tex; mode=display">\dot{x}_p=\dot{x_c}+\frac{1}{2}l\cos\theta\dot{\theta}, \ \ \dot{y}_p=-\frac{1}{2}l\sin\theta\dot{\theta} \tag{1.7}</script><p>Substitute <em>Eq. 4, 6, 7</em> into <em>Eq. 2</em></p><script type="math/tex; mode=display">L=T_c+T_p-V_p\\=\frac{1}{2}M\dot{x_c}^2+\frac{1}{2}J_c\dot{\theta}^2+\frac{1}{2}m((\dot{x_c}+\frac{1}{2}l\cos\theta\dot{\theta})^2+(-\frac{1}{2}l\sin\theta\dot{\theta})^2)-\frac{1}{2}mgl\cos\theta</script><script type="math/tex; mode=display">=\frac{1}{2}M\dot{x_c}^2+\frac{1}{2}J_c\dot{\theta}^2+\frac{1}{2}m(\dot{x}_c^2+\dot{x}_cl\cos(\theta)\dot{\theta}+\frac{1}{4}l^2\cos^2(\theta)\dot{\theta}^2+\frac{1}{4}l^2\sin^2(\theta)\dot{\theta}^2)\\-\frac{1}{2}mgl\cos\theta</script><script type="math/tex; mode=display">=\frac{1}{2}M\dot{x_c}^2+\frac{1}{2}J_c\dot{\theta}^2+\frac{1}{2}m(\dot{x}_c^2+\dot{x}_cl\cos(\theta)\dot{\theta}+\frac{1}{4}l^2\dot{\theta}^2)-\frac{1}{2}mgl\cos\theta</script><script type="math/tex; mode=display">=\frac{1}{2}(M+m)\dot{x}_c^2+\frac{1}{2}(J_c+\frac{1}{4}ml^2)\dot{\theta}^2+\frac{1}{2}ml\cos(\theta)\dot{\theta}\dot{x}_c-\frac{1}{2}mgl\cos\theta\tag{1.8}</script><p>Using <em>Eq. 1</em> for displacement:</p><script type="math/tex; mode=display">x_c:\frac{d}{dt}(\frac{\partial L}{\partial\dot{x}_c})-\frac{\partial L}{\partial x_c}=F \tag{1.9}</script><script type="math/tex; mode=display">\frac{\partial L}{\partial\dot{x_c}}=(M+m)\dot{x}_c+\frac{1}{2}ml\cos(\theta)\dot{\theta}</script><script type="math/tex; mode=display">\frac{\partial L}{\partial x_c}=0</script><p>Substitute:</p><script type="math/tex; mode=display">\frac{d}{dt}(\frac{\partial L}{\partial\dot{x_c}})=(M+m)\ddot{x}_c+\frac{1}{2}ml(-\sin(\theta)\dot{\theta}^2+cos(\theta)\ddot{\theta})=F\tag{1.10}</script><p>Using <em>Eq. 1</em> for angle: </p><script type="math/tex; mode=display">\theta:\frac{d}{dt}(\frac{\partial L}{\partial\dot{\theta}})-\frac{\partial L}{\partial \theta}=0\tag{1.11}</script><script type="math/tex; mode=display">\frac{\partial L}{\partial\dot{\theta}}=(J_c+\frac{1}{4}ml^2)\dot{\theta}+\frac{1}{2}ml\cos(\theta)\dot{x}_c</script><script type="math/tex; mode=display">\frac{\partial L}{\partial \theta}=-\frac{1}{2}ml\sin(\theta)\dot{\theta}\dot{x}_c+\frac{1}{2}mgl\sin(\theta)</script><script type="math/tex; mode=display">\frac{d}{dt}(\frac{\partial L}{\partial\dot{\theta}})=(J_c+\frac{1}{4}ml^2)\ddot{\theta}-\frac{1}{2}ml\sin(\theta)\dot{\theta}\dot{x}_c+\frac{1}{2}mgl\cos(\theta)\ddot{x}_c</script><p>Substuting:</p><script type="math/tex; mode=display">(J_c+\frac{1}{4}ml^2)\ddot{\theta}-\frac{1}{2}ml\sin(\theta)\dot{\theta}\dot{x}_c+\frac{1}{2}mgl\cos(\theta)\ddot{x}_c\\ +\frac{1}{2}ml\sin(\theta)\dot{\theta}\dot{x}_c-\frac{1}{2}mgl\sin(\theta)</script><script type="math/tex; mode=display">= (J_c+\frac{1}{4}ml^2)\ddot{\theta}+\frac{1}{2}mgl\cos(\theta)\ddot{x}_c-\frac{1}{2}mgl\sin(\theta)=0\tag{1.12}</script><p>Now we have the following relation:</p><script type="math/tex; mode=display">\left\{\begin{array}{l}(M+m)\ddot{x}_c+\frac{1}{2}ml(-\sin(\theta)\dot{\theta}^2+cos(\theta)\ddot{\theta})=F,\\(J_c+\frac{1}{4}ml^2)\ddot{\theta}+\frac{1}{2}mgl\cos(\theta)\ddot{x}_c-\frac{1}{2}mgl\sin(\theta)=0\end{array}\right.\tag{1.13}</script><p>Rewrite the system into matrix form:</p><script type="math/tex; mode=display">\left[\begin{array}{cc}M+m & \frac{1}{2}ml\cos(\theta)\\\frac{1}{2}ml\cos(\theta) & J_c+\frac{1}{4}ml^2\end{array}\right]\left[\begin{array}{c}\ddot{x}_c \\\ddot{\theta}\end{array}\right]+\left[\begin{array}{cc}0 & -\frac{1}{2}ml\sin(\theta)\dot{\theta}\\0 & 0\end{array}\right]\left[\begin{array}{c}\dot{x}_c \\\dot{\theta}\end{array}\right]=\left[\begin{array}{c}F \\\frac{1}{2}mgl\sin(\theta)\end{array}\right]</script><p>Introduce</p><script type="math/tex; mode=display">Q=\left[\begin{array}{cc}M+m & \frac{1}{2}ml\cos(\theta)\\\frac{1}{2}ml\cos(\theta) & J_c+\frac{1}{4}ml^2\end{array}\right]</script><p>and whose inverse matrix:</p><script type="math/tex; mode=display">Q^{-1}=\left[\begin{array}{cc}\frac{4J}{\sigma} & -\frac{2ml\cos(\theta)}{\sigma}\\-\frac{2ml\cos(\theta)}{\sigma} & \frac{4(M+m)}{\sigma}\end{array}\right],\ \  \sigma=-m^2l^2\cos^2\theta+4J(M+m)</script><p>under the condition  $\theta\ll 1$</p><script type="math/tex; mode=display">cos\theta\approx 1,\ \ \sin\theta\approx\theta,\ \ \\sin(\theta)\dot{\theta}\approx0</script><script type="math/tex; mode=display">Q_l^{-1}=\left[\begin{array}{cc}\frac{4J}{\sigma} & -\frac{2ml}{\sigma}\\-\frac{2ml}{\sigma} & \frac{4(M+m)}{\sigma}\end{array}\right],\ \  \sigma=-m^2l^2+4J(M+m)</script><script type="math/tex; mode=display">\left[\begin{array}{c}\ddot{x}_c \\\ddot{\theta}\end{array}\right]=Q_l^{-1}\left[\begin{array}{c}F \\\frac{1}{2}mgl\theta\end{array}\right]</script><script type="math/tex; mode=display">\left[\begin{array}{c}\ddot{x}_c \\\ddot{\theta}\end{array}\right]=\left[\begin{array}{c}\frac{4FJ-gl^2m^2\theta}{\sigma}\\\frac{2ml((M+m)g\theta-F)}{\sigma}\end{array}\right],\ \ \sigma=-m^2l^2+4J(M+m)\tag{1.14}</script><p>Expand states, perform linearlization,</p><script type="math/tex; mode=display">\dot{x}=\left[\begin{array}{c}\dot{x}_c \\\ddot{x}_c \\\dot{\theta} \\\ddot{\theta}\end{array}\right], \ \ y=\left[\begin{array}{c}x_c \\\theta \\\end{array}\right]</script><p>In state-space representation</p><script type="math/tex; mode=display">\left[\begin{array}{c}\dot{x}_c \\\ddot{x}_c \\\dot{\theta} \\\ddot{\theta}\end{array}\right]=\left[\begin{array}{cccc}0 & 1 & 0 & 0 \\0 & 0 & \frac{-gm^2l^2}{\sigma}&0\\0 & 0 & 0 & 1\\0 & 0 & \frac{2ml(M+m)}{\sigma} & 0\end{array}\right]\left[\begin{array}{c}x_c \\\dot{x}_c \\\theta \\\dot{\theta}\end{array}\right]+\left[\begin{array}{c}\frac{4J}{\sigma}\\0\\\frac{-ml}{\sigma} \\0\end{array}\right]F\tag{1.15}</script><script type="math/tex; mode=display">\left[\begin{array}{c}x_c \\\theta \\\end{array}\right]=\left[\begin{array}{cccc}1&0&0&0\\0&0&1&0\\\end{array}\right]\left[\begin{array}{c}x_c \\\dot{x}_c \\\theta \\\dot{\theta}\end{array}\right]\tag{1.16}</script><hr><h3 id="Force-analysis"><a href="#Force-analysis" class="headerlink" title="Force analysis"></a>Force analysis</h3><p>As there are some notation error in the reference document, I assume I shouold do the process once again to ensure this is the right thing. </p><p>For the torque of pole with respect to one end:</p><script type="math/tex; mode=display">J\ddot{\theta} = F_y\cdot\frac{1}{2}l\sin(\theta)-F_x\cdot\frac{1}{2}l\cos(\theta)\tag{2.1}</script><p>(note that the sign for couter-clockwise torque is negative, while the positive direction of $F_y$ is downward)</p><p>Some process is eliminated to cut redundant part.</p><p>Newton’s third law on the pole’s center of mass (refer to <em>Eq 1.5</em>):</p><script type="math/tex; mode=display">F_x = m\frac{d^2}{d^2t}(x+\frac{1}{2}l\sin(\theta))\tag{2.2}</script><script type="math/tex; mode=display">F_y=mg-\frac{1}{2}ml\frac{d^2}{d^2t}(\cos(\theta))\tag{2.3}</script><p>And the motion of cart:</p><script type="math/tex; mode=display">F-F_x=M(\frac{d^2 x}{d^2t})\tag{2.4}</script><p>Considering the formulas above Eq 2.1, 2, 3, 4, obtain the mathematical model:</p><script type="math/tex; mode=display">\left\{\begin{array}{l}\ddot{x}=\frac{}{},\\\ddot{\theta}=\frac{}{}\end{array}\right.</script><p><strong>Currently, this part will be suspended until the main thesis is complete.</strong></p><hr><p><div id ="start"></div></p><h1 id="II-Thesis-Topic"><a href="#II-Thesis-Topic" class="headerlink" title="II. Thesis Topic"></a>II. Thesis Topic</h1><h3 id="The-Design-of-Controllers-for-Two-wheeled-Self-balancing-Robot"><a href="#The-Design-of-Controllers-for-Two-wheeled-Self-balancing-Robot" class="headerlink" title="The Design of Controllers for Two-wheeled Self-balancing Robot"></a>The Design of Controllers for Two-wheeled Self-balancing Robot</h3><p><img src="https://i.imgur.com/FdfgmHT.png" alt="Structure"></p><p>As the robot itself, the <strong>double-pendulum</strong> structure is selected.</p><p>Notations for parameters of the robot are as follows:</p><div class="table-container"><table><thead><tr><th style="text-align:center">Parameter Name</th><th style="text-align:center">Symbol</th><th style="text-align:center">Unit</th></tr></thead><tbody><tr><td style="text-align:center">Mass of First pendulum</td><td style="text-align:center">$M_1$</td><td style="text-align:center">$kg$</td></tr><tr><td style="text-align:center">Mass of Second Pendulum</td><td style="text-align:center">$M_2$</td><td style="text-align:center">$kg$</td></tr><tr><td style="text-align:center">Length to the CoM the First pendulum</td><td style="text-align:center">$L_1$</td><td style="text-align:center">$m$</td></tr><tr><td style="text-align:center">Length to the CoM the Second pendulum</td><td style="text-align:center">$L_2$</td><td style="text-align:center">$m$</td></tr><tr><td style="text-align:center">Length between center of wheels</td><td style="text-align:center">$D_m$</td><td style="text-align:center">$m$</td></tr><tr><td style="text-align:center">Radius of wheels</td><td style="text-align:center">$R_w$</td><td style="text-align:center">$m$</td></tr><tr><td style="text-align:center">Mass of the wheels</td><td style="text-align:center">$M_L=M_R=M_w$</td><td style="text-align:center">$kg$</td></tr><tr><td style="text-align:center">Inertia of the wheels</td><td style="text-align:center">$J_L=J_R=J_w$</td><td style="text-align:center">$N\cdot m/rad$</td></tr></tbody></table></div><p>Notations for variables of the robot are as follows</p><div class="table-container"><table><thead><tr><th style="text-align:center">Parameter Name</th><th style="text-align:center">Symbol</th><th style="text-align:center">Unit</th></tr></thead><tbody><tr><td style="text-align:center">Pitch angle of lower pendulum</td><td style="text-align:center">$\theta_1$</td><td style="text-align:center">$rad$</td></tr><tr><td style="text-align:center">Pitch angle of upper pendulum</td><td style="text-align:center">$\theta_2$</td><td style="text-align:center">$rad$</td></tr><tr><td style="text-align:center">Yaw angle</td><td style="text-align:center">$\psi$</td><td style="text-align:center">$rad$</td></tr><tr><td style="text-align:center">Angular Displacement of wheels</td><td style="text-align:center">$\theta_L, \theta_R$</td><td style="text-align:center">$rad/s$</td></tr><tr><td style="text-align:center">Linear speed of the wheels</td><td style="text-align:center">$x_L, x_R$</td><td style="text-align:center">$m/s$</td></tr><tr><td style="text-align:center">System forward speed</td><td style="text-align:center">$x =(x_L+x_R)/2$</td><td style="text-align:center">$m/s$</td></tr></tbody></table></div><h2 id="1-Kinematics-Modelling"><a href="#1-Kinematics-Modelling" class="headerlink" title="1. Kinematics Modelling"></a>1. Kinematics Modelling</h2><p>Describing its relation without considering internal effects.</p><h3 id="Velocity-Analysis"><a href="#Velocity-Analysis" class="headerlink" title="Velocity Analysis"></a>Velocity Analysis</h3><h4 id="1-1-The-velocity-of-the-CoM-Center-of-Mass-for-lower-body"><a href="#1-1-The-velocity-of-the-CoM-Center-of-Mass-for-lower-body" class="headerlink" title="1.1 The velocity of the CoM (Center of Mass) for lower body:"></a>1.1 The velocity of the CoM (Center of Mass) for lower body:</h4><p>Yaw angle is not considered in the reasearch.</p><script type="math/tex; mode=display">V_{C1}=\left[\begin{array}{ccc}vX_{C1} & vY_{C1} & vZ_{C1}\end{array}\right]^\intercal = \left[\begin{array}{c}\dot{x}+l_1\dot{\theta}_1\cos\theta_1\\0\\-l_1\dot\theta_1\sin\theta_1\end{array}\right]\tag{1-1}</script><h4 id="1-2-The-speed-of-the-CoM-for-Upper-rod"><a href="#1-2-The-speed-of-the-CoM-for-Upper-rod" class="headerlink" title="1.2 The speed of the CoM for Upper rod:"></a>1.2 The speed of the CoM for Upper rod:</h4><script type="math/tex; mode=display">V_{C2}=\left[\begin{array}{ccc}vX_{C2} & vY_{C2} & vZ_{C2}\end{array}\right]^\intercal = \left[\begin{array}{c}\dot{x}+l_2\dot{\theta}_2\cos\theta_2+2l_1\dot\theta_1\cos\theta_1\\0\\-l_2\dot\theta_2\sin\theta_2-2l_1\dot\theta_1\sin\theta_1\end{array}\right]\tag{1-2}</script><h4 id="1-3-The-horizontal-linear-velocity-of-wheels-CoM"><a href="#1-3-The-horizontal-linear-velocity-of-wheels-CoM" class="headerlink" title="1.3 The horizontal linear velocity of wheels (CoM):"></a>1.3 The horizontal linear velocity of wheels (CoM):</h4><script type="math/tex; mode=display">\left\{\begin{array}{rcl}\dot x_L &=& R_w\dot\theta_L\\\dot x_R &=& R_w\dot\theta_R\\\dot x &=& \frac{1}{2}\cdot(\dot x_L + \dot x_R)\end{array}\right.</script><h4 id="1-4-The-velocity-for-B-1-B-2-in-angle-coordinates-deprecated"><a href="#1-4-The-velocity-for-B-1-B-2-in-angle-coordinates-deprecated" class="headerlink" title="1.4 The velocity for $B_1,\  B_2$ in angle coordinates. (deprecated)"></a>1.4 The velocity for $B_1,\  B_2$ in angle coordinates. (deprecated)</h4><script type="math/tex; mode=display">\Omega_i=\left[\begin{array}{ccc}\omega X_i & \omega Y_i & \omega Z_i\end{array}\right]^\intercal = \left[\begin{array}{ccc}\dot\phi\sin\theta_i & \dot\theta_i & \dot\phi\cos\theta_i\end{array}\right]^\intercal, (i=1,2)\tag{1-4}</script><h4 id="1-5-The-velocity-for-wheels-in-angle-coordinates-deprecated"><a href="#1-5-The-velocity-for-wheels-in-angle-coordinates-deprecated" class="headerlink" title="1.5 The velocity for wheels in angle coordinates: (deprecated)"></a>1.5 The velocity for wheels in angle coordinates: (deprecated)</h4><script type="math/tex; mode=display">\Omega_{w_k}=\left[\begin{array}{ccc}\omega X_k & \omega Y_k & \omega Z_k\end{array}\right]^\intercal = \left[\begin{array}{ccc}\dot\phi\sin\varphi_k & \dot\varphi_k & \dot\phi\cos\varphi_k\end{array}\right]^\intercal, (k=L, R)\tag{1-5}</script><h4 id="1-6-Plane-motion"><a href="#1-6-Plane-motion" class="headerlink" title="1.6 Plane motion"></a>1.6 Plane motion</h4><script type="math/tex; mode=display">\left\{\begin{array}{l}\dot x =\frac{R_w}{2}(\dot\theta_L+\dot\theta_R)\\\dot\psi= \frac{R_w}{D_m}(\dot\theta_R-\dot\theta_L)\end{array}\right.\tag{1-6}</script><script type="math/tex; mode=display">\left[\begin{array}{c}\dot\theta_L\\\dot\theta_R\end{array}\right]=\frac{1}{R_w}\left[\begin{array}{cc}-D_m/2 & 1\\D_m/2 & 1\end{array}\right]\left[\begin{array}{c}\dot x\\\dot\psi\end{array}\right]\tag{1-7}</script><hr><h2 id="2-Dynamics-Modelling"><a href="#2-Dynamics-Modelling" class="headerlink" title="2. Dynamics Modelling"></a>2. Dynamics Modelling</h2><h4 id="2-1-Select-3-DoF-of-the-robots-as-general-coordinates"><a href="#2-1-Select-3-DoF-of-the-robots-as-general-coordinates" class="headerlink" title="2.1 Select 3 DoF of the robots as general coordinates."></a>2.1 Select 3 DoF of the robots as general coordinates.</h4><script type="math/tex; mode=display">q=\left[\begin{array}{cccc}x & \theta_1 & \theta_2\end{array}\right]\tag{2-1}</script><h4 id="2-2-The-kinematic-engergy-for-the-system"><a href="#2-2-The-kinematic-engergy-for-the-system" class="headerlink" title="2.2 The kinematic engergy for the system"></a>2.2 The kinematic engergy for the system</h4><h5 id="Wheel"><a href="#Wheel" class="headerlink" title="Wheel:"></a>Wheel:</h5><p>The kinetic engergy include the translational kinetic engergy  $T_L$ and $T_R$, and the rotational kinetic engergy when wheels rotates around the shaft.</p><script type="math/tex; mode=display">T_L=\frac{1}{2}m_w\dot x_L^2=\frac{1}{2}m_wR_w^2\dot\theta_L^2</script><p>Similarly</p><script type="math/tex; mode=display">T_R=\frac{1}{2}m_w\dot x_R^2=\frac{1}{2}m_wR_w^2\dot\theta_R^2</script><p>As for ratational kinetic engery:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}P_L &=& \frac{1}{2}J_w\dot\theta_L^2\\P_R &=& \frac{1}{2}J_w\dot\theta_R^2\end{array}\right.</script><script type="math/tex; mode=display">\begin{array}{rcl}T_1&=&T_L+T_R+P_L+P_R\\&=& \frac{1}{2}m_w(\dot x_L^2+\dot x_R^2)+\frac{1}{2}J_w(\dot\theta_L^2+\dot\theta_R^2)\\&=& \frac{1}{2}(m_wR_w^2+J_w)(\dot\theta_L^2+\dot\theta_R^2)\end{array}</script><p>As the turning is not considered, $\dot\theta_L=\dot\theta_R$</p><script type="math/tex; mode=display">\begin{array}{rcl}T_1&=&\frac{1}{2}(m_wR_w^2+J_w)\frac{2\dot x^2}{R_w^2}\\&=&\frac{(mR^2+J_w)}{R^2}\dot x^2\end{array}</script><h5 id="Cart"><a href="#Cart" class="headerlink" title="Cart:"></a>Cart:</h5><p>Cart - Translational</p><script type="math/tex; mode=display">\begin{array}{rcl}T_{c} &=& \frac{1}{2}m_1V_{C1}^\intercal V_{C1}\\&=& \frac{1}{2}m_1[(\dot{x}+l_1\dot{\theta}_1\cos\theta_1)^2+(-l_1\dot\theta_1\sin\theta_1)^2]\\&=&\frac{1}{2}m_1[l_1^2\dot\theta_1^2+2l_1\dot\theta_1\dot x\cos\theta_1+\dot x^2]\end{array}</script><p>Cart - Rotational</p><script type="math/tex; mode=display">P_{Yc}=\frac{1}{2}J_{\theta_1} \dot\theta_1^2</script><p>Cart - whole</p><script type="math/tex; mode=display">\begin{array}{rcl}T_2 &=& T_{c}+P_{Yc}\\&=& \frac{1}{2}m_1[l_1^2\dot\theta_1^2+2l_1\dot\theta_1\dot x\cos\theta_1+\dot x^2]+\frac{1}{2}J_{\theta_1} \dot\theta_1^2\\&=& \frac{1}{2}(m_1l_1^2+J_{\theta_1})\dot\theta_1^2+ m_1l_1\dot x\dot\theta_1\cos\theta_1+ \frac{1}{2}m_1\dot x^2\end{array}</script><h5 id="Pendulum"><a href="#Pendulum" class="headerlink" title="Pendulum:"></a>Pendulum:</h5><p>Pendulum - Translational</p><script type="math/tex; mode=display">\begin{array}{rcl}T_{p} &=& \frac{1}{2}m_2V_{C2}^\intercal V_{C2}\\&=& \frac{1}{2}m_2[(\dot{x}+l_2\dot{\theta}_2\cos\theta_2+2l_1\dot\theta_1\cos\theta_1)^2+ (-l_2\dot\theta_2\sin\theta_2-2l_1\dot\theta_1\sin\theta_1)^2]\\&=& \frac{1}{2}m_2[l_2^2\dot\theta_2^2+4l_1^2\dot\theta_1^2+(2l_2\dot\theta_2\cos\theta_2+4l_1\dot\theta_1\cos\theta_1)\dot x+4l_1l_2\dot\theta_1\dot\theta_2(\sin\theta_1\sin\theta_2+\cos\theta_1\cos\theta_2)+\dot x^2]\end{array}</script><p>Pendulum - Rotational</p><script type="math/tex; mode=display">P_{Yp}=\frac{1}{2}J_{\theta_2}\dot\theta_2^2</script><p>Pendulum - Whole</p><script type="math/tex; mode=display">\begin{array}{rcl}T_3  &=& T_p+P_{Yp}\\&=& \frac{1}{2}m_2[l_2^2\dot\theta_2^2+4l_1^2\dot\theta_1^2+(2l_2\dot\theta_2\cos\theta_2+4l_1\dot\theta_1\cos\theta_1)\dot x+4l_1l_2\dot\theta_1\dot\theta_2(\sin\theta_1\sin\theta_2+\cos\theta_1\cos\theta_2)+\dot x^2]+ \frac{1}{2}J_{\theta_2}\dot\theta_2^2\\&=& \frac{1}{2}(m_2l_2^2+J_{\theta_2})\dot\theta_2^2+2m_2l_1^2\dot\theta_1^2\\&&+m_2(l_2\dot\theta_2\cos\theta_2+2l_1\dot\theta_1\cos\theta_1)\dot x\\&&+2m_2l_1l_2\dot\theta_1\dot\theta_2(\sin\theta_1\sin\theta_2+\cos\theta_1\cos\theta_2)\\&&+\frac{1}{2}m_2\dot x^2\end{array}</script><p>Thus the whole kinetic engergy for the system:</p><script type="math/tex; mode=display">\begin{array}{rcl}T &=& T_1+T_2+T_3\\&=& [\frac{1}{2}(m_1+m_2)+\frac{(mR^2+J_w)}{R^2}]\dot x^2\\&& +\frac{1}{2}(m_1l_1^2+J_{\theta_1}+4m_2l_1^2)\dot\theta_1^2+\frac{1}{2}(m_2l_2^2+J_{\theta_2})\dot\theta_2^2\\&& +((m_1l_1+2m_2l_1)\dot\theta_1\cos\theta_1+m_2l_2\dot\theta_2\cos\theta_2)\dot x\\&& +2m_2l_1l_2\dot\theta_1\dot\theta_2\cos(\theta_1-\theta_2)\end{array}</script><p><strong>Potential engergy:</strong><br>The potential engergy for the sysstem equals:</p><script type="math/tex; mode=display">\begin{array}{rcl}V &=& m_1gl_1\cos\theta_1+m_2g(2l_1\cos\theta_1+l_2\cos\theta_2)\\&=& (m_1+2m_2)gl_1\cos\theta_1 + m_2gl_2\cos\theta_2\end{array}</script><h3 id="2-3-Lagrangian"><a href="#2-3-Lagrangian" class="headerlink" title="2.3 Lagrangian"></a>2.3 Lagrangian</h3><p>Now we have the <strong>Lagrangian</strong>:</p><script type="math/tex; mode=display">\begin{array}{rcl}L &=& T-V\\&=& [\frac{1}{2}(m_1+m_2)+\frac{(mR^2+J_w)}{R^2}]\dot x^2\\&&+\frac{1}{2}(m_1l_1^2+J_{\theta_1}+4m_2l_1^2)\dot\theta_1^2+\frac{1}{2}(m_2l_2^2+J_{\theta_2})\dot\theta_2^2\\&&+((m_1l_1+2m_2l_1)\dot\theta_1\cos\theta_1+m_2l_2\dot\theta_2\cos\theta_2)\dot x\\&&+2m_2l_1l_2\dot\theta_1\dot\theta_2(\sin\theta_1\sin\theta_2+\cos\theta_1\cos\theta_2)\\&&- (m_1+2m_2)gl_1\cos\theta_1 - m_2gl_2\cos\theta_2\end{array}</script><p>To simplify the lagrangian, using $M_{ij}$ to replace constant coefficients:</p><script type="math/tex; mode=display">\begin{array}{rcl}L&=& T-V\\&=& M_{11}\dot x^2\\&&+M_{21}\dot\theta_1^2+M_{22}\dot\theta_2^2\\&&+(M_{31}\dot\theta_1\cos\theta_1+M_{32}\dot\theta_2\cos\theta_2)\dot x\\&&+M_{41}\dot\theta_1\dot\theta_2(\sin\theta_1\sin\theta_2+\cos\theta_1\cos\theta_2)\\&&-M_{51}\cos\theta_1 - M_{52}\cos\theta_2\end{array}</script><p>where, </p><script type="math/tex; mode=display">\left[\begin{array}{c}M_{11}\\M_{21}\\M_{22}\\M_{31}\\M_{32}\\M_{41}\\M_{51}\\M_{52}\end{array}\right]=\left[\begin{array}{c}\frac{1}{2}(m_1+m_2)+\frac{(mR^2+J_w)}{R^2}\\\frac{1}{2}(m_1l_1^2+J_{\theta_1}+4m_2l_1^2)\\\frac{1}{2}(m_2l_2^2+J_{\theta_2})\\m_1l_1+2m_2l_1\\m_2l_2\\2m_2l_1l_2\\(m_1+2m_2)gl_1\\m_2gl_2\end{array}\right]</script><p><strong>Lagrangian equation:</strong><br>Generalized coordinates: $[x\ \theta_1\ \theta_2]$</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}\frac{d}{dt}(\frac{\partial L}{\partial\dot x})-\frac{\partial L}{\partial x}&=&\tau\\\frac{d}{dt}(\frac{\partial L}{\partial\dot \theta_1})-\frac{\partial L}{\partial \theta_1}&=&-2\tau\\\frac{d}{dt}(\frac{\partial L}{\partial\dot \theta_2})-\frac{\partial L}{\partial \theta_2}&=&0\\\end{array}\right.</script><p>Simplified equation:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}2M_{11}\ddot x - M_{31}\dot\theta_1^2\sin\theta_1 - M_{32}\dot\theta_2^2\sin\theta_2 + M_{31}\ddot\theta_1\cos\theta_1 + M_{32}\ddot\theta_2\cos\theta_2 &=& \tau\\2M_{21}\ddot\theta_1 - M_{51}\sin\theta_1 + M_{31}\ddot x\cos\theta_1 - M_{41}\dot\theta_2^2\cos\theta_1\sin\theta_2  + M_{41}\dot\theta_2^2\cos\theta_2\sin\theta_1 +M_{41}\ddot\theta_2\cos\theta_1\cos\theta_2 +M_{41}\ddot\theta_2\sin\theta_1\sin\theta_2 &=& -2\tau \\2M_{22}\ddot\theta_2 - M_{52}\sin\theta_2 + M_{32}\ddot x\cos\theta_2 + M_{41}\dot\theta_1^2\cos\theta_1\sin\theta_2 - M_{41}\dot\theta_1^2\cos\theta_2\sin\theta_1 +M_{41}\ddot\theta_1\cos\theta_1\cos\theta_2 +M_{41}\ddot\theta_1\sin\theta_1\sin\theta_2 &=& 0\end{array}\right.</script><h3 id="2-4-Linearization"><a href="#2-4-Linearization" class="headerlink" title="2.4 Linearization"></a>2.4 Linearization</h3><p>Perform linearization around $[x, 0, 0]$, thus that $\cos\theta=1,\ \sin\theta=\theta,\ \dot\theta^2=0$,  so that:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}2M_{11}\ddot x + M_{31}\ddot\theta_1+ M_{32}\ddot\theta_2&=& \tau\\2M_{21}\ddot\theta_1 - M_{51}\theta_1 + M_{31}\ddot x+M_{41}\ddot\theta_2+M_{41}\ddot\theta_2\theta_1\theta_2 &=& -2\tau \\2M_{22}\ddot\theta_2 - M_{52}\theta_2 + M_{32}\ddot x +M_{41}\ddot\theta_1+M_{41}\ddot\theta_1\theta_1\theta_2 &=& 0\end{array}\right.</script><p>Also treat $\theta_1\theta_2=0$, we have </p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}2M_{11}\ddot x + M_{31}\ddot\theta_1+ M_{32}\ddot\theta_2&=& \tau\\M_{31}\ddot x+2M_{21}\ddot\theta_1 + M_{41}\ddot\theta_2 - M_{51}\theta_1 &=& -2\tau \\M_{32}\ddot x + M_{41}\ddot\theta_1+ 2M_{22}\ddot\theta_2 - M_{52}\theta_2 &=& 0\end{array}\right.</script><p>Transform into matrix form:</p><script type="math/tex; mode=display">\left[\begin{array}{ccc}2M_{11} & M_{31} & M_{32}\\M_{31} & 2M_{21} & M_{41}\\M_{32}  & M_{41} & 2M_{22}\end{array}\right]\cdot\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]+\left[\begin{array}{ccc}0 & 0 & 0\\0 & -M_{51} & 0\\0 & 0 & -M_{52}\end{array}\right]\cdot\left[\begin{array}{c}x\\\theta_1\\\theta_2\end{array}\right]=\left[\begin{array}{c}\tau\\-2\tau\\0\end{array}\right]</script><p>Set $M=\left[\begin{array}{ccc}2M_{11} &amp; M_{31} &amp; M_{32}\\M_{31} &amp; 2M_{21} &amp; M_{41}\\M_{32}  &amp; M_{41} &amp; 2M_{22}\end{array}\right],\ M_{aux}=\left[\begin{array}{ccc}0 &amp; 0 &amp; 0\\0 &amp; -M_{51} &amp; 0\\0 &amp; 0 &amp; -M_{52}\end{array}\right]$</p><script type="math/tex; mode=display">M\cdot\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]=-M_{aux}\cdot\left[\begin{array}{c}x\\\theta_1\\\theta_2\end{array}\right]+\left[\begin{array}{c}\tau\\-2\tau\\0\end{array}\right]</script><p>Then multiply its inverse on both side (if inverse exist)</p><script type="math/tex; mode=display">\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]=M^{-1}\cdot(-M_{aux})\cdot\left[\begin{array}{c}x\\\theta_1\\\theta_2\end{array}\right]+M^{-1}\cdot\left[\begin{array}{c}\tau\\-2\tau\\0\end{array}\right]</script><p>Regard $M_f=M^{-1}\cdot(-M_{aux}),\ \ M_b=M^{-1}\cdot[\begin{array}{ccc}1&amp; -2&amp; 0\end{array}]^\intercal$ </p><script type="math/tex; mode=display">\left[\begin{array}{l}\dot x\\\dot \theta_1\\\dot \theta_2\\\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]=\left[\begin{array}{cc}0_{3\times3} & I_{3\times3}\\M_f & 0_{3\times 3}\end{array}\right]\cdot\left[\begin{array}{l}x\\\theta_1\\\theta_2\\\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]+\left[\begin{array}{c}0_{3\times 1}\\M_b\end{array}\right]\cdot\tau</script><p>Thus we have</p><script type="math/tex; mode=display">\dot q = Aq+B\tau</script><p>where </p><script type="math/tex; mode=display">A=\left[\begin{array}{cc}0_{3\times3} & eye(3)\\M_f & 0_{3\times 3}\end{array}\right],\ \ B = \left[\begin{array}{c}0_{3\times 1}\\M_b\end{array}\right]</script><p>This is an implementation of the simplest expansion, other possible methods are: Tylor expansion (Maclaurin expansion), these two are more accurate, meanwhile it takes time to derive the corresponding  </p><hr><h3 id="2-5-Nonlinear-model"><a href="#2-5-Nonlinear-model" class="headerlink" title="2.5 Nonlinear model"></a>2.5 Nonlinear model</h3><p>For original relation:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}2M_{11}\ddot x - M_{31}\dot\theta_1^2\sin\theta_1 - M_{32}\dot\theta_2^2\sin\theta_2 + M_{31}\ddot\theta_1\cos\theta_1 + M_{32}\ddot\theta_2\cos\theta_2 &=& \tau\\2M_{21}\ddot\theta_1 - M_{51}\sin\theta_1 + M_{31}\ddot x\cos\theta_1 - M_{41}\dot\theta_2^2\cos\theta_1\sin\theta_2  + M_{41}\dot\theta_2^2\cos\theta_2\sin\theta_1 +M_{41}\ddot\theta_2\cos\theta_1\cos\theta_2 +M_{41}\ddot\theta_2\sin\theta_1\sin\theta_2 &=& -2\tau \\2M_{22}\ddot\theta_2 - M_{52}\sin\theta_2 + M_{32}\ddot x\cos\theta_2 + M_{41}\dot\theta_1^2\cos\theta_1\sin\theta_2 - M_{41}\dot\theta_1^2\cos\theta_2\sin\theta_1 +M_{41}\ddot\theta_1\cos\theta_1\cos\theta_2 +M_{41}\ddot\theta_1\sin\theta_1\sin\theta_2 &=& 0\end{array}\right.</script><p>Apply transform:</p><script type="math/tex; mode=display">\left[\begin{array}{ccc}2M_{11} & M_{31}\cos\theta_1 & M_{32}\cos\theta_2\\M_{31}\cos\theta_1 & 2M_{21}  & M_{41}\cdot(\cos\theta_1\cos\theta_2+\sin\theta_1\sin\theta_2)\\M_{32}\cos\theta_2  & M_{41}\cdot(\cos\theta_1\cos\theta_2+\sin\theta_1\sin\theta_2) & 2M_{22}\end{array}\right]\cdot\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]+\left[\begin{array}{ccc}0 & -M_{31}\dot\theta_1\sin\theta_1 & -M_{32}\dot\theta_2\sin\theta_2\\0 & 0 & -M_{41}\dot\theta_2(\cos\theta_1\sin\theta_2-\cos\theta_2\sin\theta_1)\\0 & M_{41}\dot\theta_1(\cos\theta_1\sin\theta_2-\cos\theta_2\sin\theta_1) & 0\end{array}\right]\cdot\left[\begin{array}{c}\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]=\left[\begin{array}{c}\tau\\-2\tau+M_{51}\sin\theta_1\\M_{52}\sin\theta_2\end{array}\right]</script><p>Using trigonometric function to simplify:</p><script type="math/tex; mode=display">\left[\begin{array}{ccc}2M_{11} & M_{31}\cos\theta_1 & M_{32}\cos\theta_2\\M_{31}\cos\theta_1 & 2M_{21}  & M_{41}\cdot\cos(\theta_1-\theta_2)\\M_{32}\cos\theta_2  & M_{41}\cdot\cos(\theta_1-\theta_2) & 2M_{22}\end{array}\right]\cdot\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]+\left[\begin{array}{ccc}0 & -M_{31}\dot\theta_1\sin\theta_1 & -M_{32}\dot\theta_2\sin\theta_2\\0 & 0 & -M_{41}\dot\theta_2\sin(\theta_1-\theta_2)\\0 & M_{41}\dot\theta_1\sin(\theta_1-\theta_2) & 0\end{array}\right]\cdot\left[\begin{array}{c}\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]+\left[\begin{array}{c}0\\-M_{51}\sin\theta_1\\-M_{52}\sin\theta_2\end{array}\right]=\left[\begin{array}{c}\tau\\-2\tau\\0\end{array}\right]</script><p>Correspondingly:</p><script type="math/tex; mode=display">M_n\cdot\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]+M_{naux1}\cdot\left[\begin{array}{c}\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]+M_{naux2}=\left[\begin{array}{c}\tau\\-2\tau\\0\end{array}\right]</script><p>where, </p><script type="math/tex; mode=display">M_n=\left[\begin{array}{ccc}2M_{11} & M_{31}\cos\theta_1 & M_{32}\cos\theta_2\\M_{31}\cos\theta_1 & 2M_{21}  & M_{41}\cdot\cos(\theta_1-\theta_2)\\M_{32}\cos\theta_2  & M_{41}\cdot\cos(\theta_1-\theta_2) & 2M_{22}\end{array}\right]</script><script type="math/tex; mode=display">M_{naux1}=\left[\begin{array}{ccc}0 & -M_{31}\dot\theta_1\sin\theta_1 & -M_{32}\dot\theta_2\sin\theta_2\\0 & 0 & -M_{41}\dot\theta_2\sin(\theta_1-\theta_2)\\0 & M_{41}\dot\theta_1\sin(\theta_1-\theta_2) & 0\end{array}\right],\ \M_{naux2}=\left[\begin{array}{c}0\\-M_{51}\sin\theta_1\\-M_{52}\sin\theta_2\end{array}\right]</script><p>Transform</p><script type="math/tex; mode=display">\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]=M_n^{-1}\cdot(-M_{naux1})\cdot\left[\begin{array}{c}\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]+M_n^{-1}\cdot(-M_{naux2})+M_n^{-1}\left[\begin{array}{c}1\\-2\\0\end{array}\right]\cdot\tau</script><script type="math/tex; mode=display">\left[\begin{array}{c}\ddot x\\\ddot\theta_1\\\ddot\theta_2\end{array}\right]=f_q(q)+b_q(q)\tau\\</script><p>where,</p><script type="math/tex; mode=display">\begin{array}{rcl}f_q(q)&=&M_n^{-1}\cdot(-M_{naux1})\cdot\left[\begin{array}{c}\dot x\\\dot\theta_1\\\dot\theta_2\end{array}\right]+M_n^{-1}\cdot(-M_{naux2})\end{array}</script><script type="math/tex; mode=display">\begin{array}{rcl}b_q(q) &=&M_n^{-1}\left[\begin{array}{c}1\\-2\\0\end{array}\right]\end{array}</script><hr><h2 id="3-Algorithms"><a href="#3-Algorithms" class="headerlink" title="3. Algorithms"></a>3. Algorithms</h2><h3 id="SMC"><a href="#SMC" class="headerlink" title="SMC"></a>SMC</h3><script type="math/tex; mode=display">\left\{\begin{array}{rcl}x_1 &=& x\\\dot x_1 &=& x_2\\\dot x_2 &=& f_1(x)+b_1(x)u+d_1\end{array}\right.</script><script type="math/tex; mode=display">e = x-x_d</script><script type="math/tex; mode=display">s = ce+\dot e,\ c>0</script><p>target:</p><script type="math/tex; mode=display">\left\{\begin{array}{c}s \rightarrow 0\\\dot s \rightarrow 0\end{array}\right.\Rightarrowc\dot{e}+\ddot{e}=0</script><script type="math/tex; mode=display">c(\dot x_1 - \dot x_d)+(\ddot x_1 - \ddot x_d)=0</script><p>When $x_d$ is constant</p><script type="math/tex; mode=display">c\cdot x_2+f_1(x)+b_1(x)\cdot u+d_1=0</script><p>We have </p><script type="math/tex; mode=display">u_{eq1}=-\frac{f_1(x)+cx_2+d_1}{b_1(x)}</script><p>Set</p><script type="math/tex; mode=display">u = u_{eq}+u_{sw}</script><p>Select Lynapnov function</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}V(t) &=& \frac{1}{2}s^2\\\dot V &=& s\cdot \dot s\le 0\end{array}\right.</script><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &=& s(cx_2+\dot x_2)\\&=& s(cx_2+f_1+b_1(u_{eq}+u_{sw})+d_1)\\&=& s(cx_2+f_1+b_1u_{eq}+b_1u_{sw}+d_1)\\&=& s(b_1u_{sw}+d_1)\end{array}</script><p>and to do so, using exponential reaching law, let:</p><script type="math/tex; mode=display">\begin{array}{c}b_1u_{sw} = -\eta\ sgn(s)-k\cdot s\end{array}</script><p>Then the equation becomes:</p><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &=& s(-\eta sgn(s)-ks+d_1)\\&=& -\eta|s|-ks^2+sd_1\\&\le & -\eta|s|-ks^2+|s|\cdot|d_1|\end{array}</script><p>As $d_1$ is bounded and $|d_1|\le d_M$</p><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &\le & -\eta|s|-ks^2+|s|\cdot d_M\\&\le & -ks^2 -|s|\cdot(\eta-d_M)\end{array}</script><p>Its easy to find that when $\eta&gt;d_M$</p><script type="math/tex; mode=display">\dot V\le 0</script><p>The sliding surface is stable.</p><hr><h3 id="HSMC"><a href="#HSMC" class="headerlink" title="HSMC"></a>HSMC</h3><script type="math/tex; mode=display">\left\{\begin{array}{rcl}\dot x_{2n-1} &=& x_{2n}\\\dot x_{2n} &=& f_n(x)+b_n(x)u\end{array}\right.</script><p>Set Sliding Surface</p><script type="math/tex; mode=display">s_n = c_n\cdot e_n + \dot e_n</script><p>Correspondingly we will have $n$ equivalent control</p><script type="math/tex; mode=display">u_{eq_n}=-\frac{f_n(x)+c_n\cdot x_{2n}}{b_n(x)}</script><p>Set larger level of sliding surface:</p><script type="math/tex; mode=display">S = \alpha s_1 + \beta s_2 + \gamma s_3+\dots</script><script type="math/tex; mode=display">u=\sum_1^n u_{eq_i}+u_{sw}</script><p>To satisfy the Lyapunov function</p><script type="math/tex; mode=display">u_{sw}=-\frac{\alpha b_1(x)u_{eq_1}+\beta b_2(x)u_{eq_2}+\gamma b_3(x)u_{eq_3}+\dots+\eta\ sgn(S)+k(S)}{\alpha b_1(x)+\beta b_2(x)+\gamma b_3(x)+\dots}</script><p>Take 3-layer as an example</p><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &=& S \dot S\\&=& S(\alpha\dot s_1+\beta\dot s_2+\gamma\dot s_3)\\&=& S[\alpha(c_1x_2+\dot x_2)+\beta(c_2x_4+\dot x_4)+\gamma(c_3x_6+\dot x_6)]\\&=& S[\alpha(c_1x_2+f_1+b_1(u_{eq1}+u_{eq2}+u_{eq3}+u_{sw})+d_1)\\&&+\beta(c_2x_4+f_2+b_2(u_{eq1}+u_{eq2}+u_{eq3}+u_{sw})+d_2)\\&&+\gamma(c_3x_6+f_3+b_3(u_{eq1}+u_{eq2}+u_{eq3}+u_{sw})+d_3)]\\&=&S[\alpha b_1(u_{eq2}+u_{eq3}+u_{sw})+\beta b_2(u_{eq1}+u_{eq3}+u_{sw})+\gamma b_3(u_{eq1}+u_{eq2}+u_{sw})+(\alpha d_1+\beta d_2+\gamma d_3)]\\&=& S[(\alpha b_1+\beta b_2+\gamma b_3)u_{sw}+(\alpha d_1+\beta d_2+\gamma d_3)\\&&+[(\beta b_2+\gamma b_3)u_{eq1}+(\alpha b_1+\gamma b_3)u_{eq2}+(\alpha b_1+\beta b_2)u_{eq3}]]\end{array}</script><p>Let $(\alpha b_1+\beta b_2+\gamma b_3)u_{sw}+[(\beta b_2+\gamma b_3)u_{eq1}+(\alpha b_1+\gamma b_3)u_{eq2}+(\alpha b_1+\beta b_2)u_{eq3}]=-\eta sgn(S)-kS$</p><script type="math/tex; mode=display">\begin{array}{rcl}u_{sw} &=& (\alpha b_1+\beta b_2+\gamma b_3)^{-1}\{-[(\beta b_2+\gamma b_3)u_{eq1}+(\alpha b_1+\gamma b_3)u_{eq2}+(\alpha b_1+\beta b_2)u_{eq3}]-\eta\cdot sgn(S)-kS\}\\&=& -(\alpha b_1+\beta b_2+\gamma b_3)^{-1}[(\beta b_2+\gamma b_3)u_{eq1}+(\alpha b_1+\gamma b_3)u_{eq2}+(\alpha b_1+\beta b_2)u_{eq3}+\eta\cdot sgn(S)+kS]\end{array}</script><p>he remaining Lyapunov function proof is similar</p><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &=& S[-\eta\cdot sgn(S)-kS+(\alpha d_1+\beta d_2+\gamma d_3)]\\&=& -\eta|S|-kS^2+S(\alpha d_1+\beta d_2+\gamma d_3)\\&\le&  -\eta|S|-kS^2+|S|\cdot|(\alpha d_1+\beta d_2+\gamma d_3)|\end{array}</script><p>As $d_i$ is bounded, assume that $|(\alpha d_1+\beta d_2+\gamma d_3)|\le D_M$ so if $\eta &gt;D_M$</p><script type="math/tex; mode=display">\begin{array}{rcl}\dot V &\le&  -\eta|S|-kS^2+|S|\cdot|(\alpha d_1+\beta d_2+\gamma d_3)|\\&\le& -kS^2-|S|\cdot(\eta-|(\alpha d_1+\beta d_2+\gamma d_3)|)\\&\le& -kS^2-(\eta-D_M)|S|\le0\end{array}</script><p>And hence,</p><script type="math/tex; mode=display">\begin{array}{rcl}u &=& u_{eq1}+u_{eq2}+u_{eq3}+u_{sw}\\&=& (\alpha b_1+\beta b_2+\gamma b_3)^{-1}[\alpha b_1u_{eq1}+\beta b_2u_{eq2}+\gamma b_3 u_{eq3}-\eta\cdot sgn(S)-kS]\end{array}</script><hr><h2 id="4-Controller-Design"><a href="#4-Controller-Design" class="headerlink" title="4. Controller Design"></a>4. Controller Design</h2><p>For linearized model:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}\ddot \theta_1 &=& M_f(2,2)\theta_1+M_f(2,3)\theta_2+B(2,1)\tau\\\ddot \theta_2 &=& M_f(3,2)\theta_1+M_f(3,3)\theta_2+B(3,1)\tau\\\ddot x &=& M_f(1,2)\theta_1+M_f(1,3)\theta_2+B(1,1)\tau\end{array}\right.</script><script type="math/tex; mode=display">\left\{\begin{array}{rcl}e_1 &=& \theta_1-\theta_{1d},\ \ \dot e_1=\dot\theta_1\\e_2 &=& \theta_2-\theta_{2d},\ \ \dot e_2=\dot\theta_2\\e_3 &=& x-x_d,\ \ \dot e_3=\dot x\end{array}\right.</script><p>Set first-level sliding surface:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}s_1 &=& c_1e_1+\dot e_1\\s_2 &=& c_2e_2+\dot e_2\\s_3 &=& c_3e_3+\dot e_3\end{array}\right.</script><p>Thus we have equivalent control law:</p><script type="math/tex; mode=display">\left\{\begin{array}{rcl}u_{eq1} &=& -\frac{(M_f(2,2)\theta_1+M_f(2,3)\theta_2)+c_1\dot\theta_1}{B(2,1)}\\u_{eq2} &=& -\frac{(M_f(3,2)\theta_1+M_f(3,3)\theta_2)+c_2\dot\theta_2}{B(3,1)}\\u_{eq3} &=& -\frac{(M_f(1,2)\theta_1+M_f(1,3)\theta_2)+c_3\dot x}{B(1,1)}\\\end{array}\right.</script><p>Set second level sliding surface:</p><script type="math/tex; mode=display">S=\alpha s_1+\beta s_2+\gamma s_3</script><p>We have switching control law:</p><script type="math/tex; mode=display">u_{sw}=-(\alpha b_1+\beta b_2+\gamma b_3)^{-1}[\gamma b_1 u_{eq3}+\beta b_2 u_{eq2}+\alpha b_1u_{eq1}+\eta sgn(S)+kS]</script><p>Combining two terms:</p><script type="math/tex; mode=display">u=u_{eq}+u_{sw}=(\alpha b_1+\beta b_2)^{-1}[\alpha b_1u_{eq1}+\beta b_2u_{eq2}-\eta sgn(S)-kS]</script><hr><p><div id ="Exp"></div></p><h1 id="Problems-encountered"><a href="#Problems-encountered" class="headerlink" title="Problems encountered"></a>Problems encountered</h1><h2 id="1-Modelling"><a href="#1-Modelling" class="headerlink" title="1. Modelling"></a>1. Modelling</h2><p>In system modeling, for the convenience of theoretical research, factors such as internal mechanical friction and external disturbances are ignored, and the changes in the z-axis position of the robot are not considered, making the model less accurate and affecting the design of the controller. Therefore, in subsequent research, these factors need to be taken into account.</p><hr><h2 id="2-Linearization"><a href="#2-Linearization" class="headerlink" title="2. Linearization"></a>2. Linearization</h2><p>In linearizing the model near the balance point, the method used is too crude. In subsequent research, the Maclaurin expansion method can be used and the high-order terms can be discarded to make the linearized model more accurate. Fortunately, MALTAB provides function for the Taylor series, see <a href = "https://www.mathworks.com/help/symbolic/sym.taylor.html">here</a></p><hr><h2 id="3-S-function"><a href="#3-S-function" class="headerlink" title="3. S-function"></a>3. S-function</h2><p>In Version 2023a, level-1 s-function template in MATLAB language (sfunctmpl.m) is removed, and existing template in the cooresponding files are for level-2. The description web pages are <a href = "https://www.mathworks.com/help/simulink/sfg/s-function-concepts.html">link1</a>, <a href = "https://www.mathworks.com/help/simulink/sfg/maintaining-level-1-matlab-s-functions.html?searchHighlight=maintaining%20level-1%20s%20function&s_tid=srchtitle_maintaining%20level-1%20s%20function_1">link2</a>. Gladly the function is maintained, so the previous template can be used, as long as you can find it. According to the documentation, the storage of variables are indeed much safer, inspite that it could take some time convert a level-1 code into level-2. It is said that level-1 s-function runs faster than level-2, I’m not sure. At first I intended to use template in C, and only discovered that I did not have any embedded  C coding experience of any sort. So lastly I stick to the matlab language for consistency. In future, I would like to try it.</p><hr><h2 id="4-Tuning"><a href="#4-Tuning" class="headerlink" title="4. Tuning"></a>4. Tuning</h2><p>In the HSMC controller, due to the large number of adjustable parameters, trial and error method is finally used to determine the parameters, resulting in the performance of LQR and HSMC controllers not being optimized. Therefore, in future research, methods such as genetic algorithms can be considered to determine the parameters.</p><hr><h2 id="5-Switching-Law-Controller-Order"><a href="#5-Switching-Law-Controller-Order" class="headerlink" title="5. Switching Law, Controller Order"></a>5. Switching Law, Controller Order</h2><p>In the HSMC controller used in this paper, only the most basic exponential reaching law is used, which involves the sign function $sgn()$, leading to the emergence of chattering phenomenon, and it is impossible to achieve such a high switching frequency in reality. Therefore, in subsequent research, the saturation function can be considered, or higher-order sliding mode can be applied.</p><hr><h2 id="6-Intelligent-Control"><a href="#6-Intelligent-Control" class="headerlink" title="6. Intelligent Control"></a>6. Intelligent Control</h2><p>From the simulation results of controllers designed based on linear and nonlinear models, the HSMC controller based on nonlinear models cannot stabilize the system, which is due to the lack of handling coupling problems in the nonlinear model. The decoupling method in this paper only involves linearization, but this makes the model less accurate. Therefore, in subsequent research, more complex controllers can be considered, such as recursive LQR controllers, PSO optimized LQR controllers or fuzzy controllers, etc.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Next time I could do better.</summary>
    
    
    
    <category term="Robotics" scheme="https://redbowtie.github.io/categories/Robotics/"/>
    
    
    <category term="Control" scheme="https://redbowtie.github.io/tags/Control/"/>
    
    <category term="MATLAB" scheme="https://redbowtie.github.io/tags/MATLAB/"/>
    
    <category term="Paper" scheme="https://redbowtie.github.io/tags/Paper/"/>
    
  </entry>
  
  <entry>
    <title>Experience with LaTex</title>
    <link href="https://redbowtie.github.io/2023/04/21/LaTexTechnique/"/>
    <id>https://redbowtie.github.io/2023/04/21/LaTexTechnique/</id>
    <published>2023-04-21T12:32:00.000Z</published>
    <updated>2023-05-15T07:19:11.424Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><p>This mainly records some of  the errors I encoutered when using LaTex.</p><h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><ol><li><a href = "#1">inkscape</a></li><li><a href = "#2">graphicx package option clash</a></li><li><a href = "#3">Subfigure and Subfloat</a></li></ol><hr><p><div id="1"></div></p><h2 id="1-inkscape"><a href="#1-inkscape" class="headerlink" title="1. inkscape"></a>1. inkscape</h2><p>According to the example file of ITMO template, to import the vector graphics, this tool must be installed. I’ve never insert any figure of this kind before.</p><p>As many other tools are installed along with TeX itself, so I searched in TeX Live Utility first. There’s a package called <code>svg-inkscape</code>.  On that moment I didn’t reailize that the name of a certain package will not have any other prefix on it.</p><p>I checked its description, seems alright: <strong>How to include an SVG image in LaTeX using Inkscape</strong>. Though in the documentation, the date is a little suspicious. I was 2013. And of course, when I tried to call it, errors emerged.</p><p>Through searching, so the tool works like this: it convert the <code>svg</code> file into a pdf file with same name and insert it into the position.</p><p>So skipping those trials and errors, I belive this <a href = "https://www.baeldung.com/cs/latex-svg-images">site</a> also gives a clear tutorial.</p><p>For installing <code>Inkscape</code>, I used <code>brew</code>.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew install --cask inkscape</span></span><br></pre></td></tr></table></figure></p><p>By default, the shell won’t call a external program, so options must be added when compiling.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pdflatex --shell-escape file.tex</span></span><br></pre></td></tr></table></figure><br>This is a direct execution, as I used <code>LaTeX workshop</code> in VSCode, so settings should be changed.</p><p>Search the keyword <code>recipe</code> in settings, select <code>edit in settings.json</code>, with the preset, copy and modify new tools first, like this (note the comma):<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex-escape&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;-shell-escpae&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;%DOC%&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><br>Then adda a new recipe (just example, use what you need instead):<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex (escape)&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;pdflatex-escape&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></p><hr><p><div id="2"></div></p><h2 id="2-Option-clash-for-package-graphicx"><a href="#2-Option-clash-for-package-graphicx" class="headerlink" title="2. Option clash for package graphicx"></a>2. Option clash for package graphicx</h2><p>Directly starts with error:<br><div class="alert danger no-icon"><p>The package graphicx has already been loaded with options []<br>There has nowbeen an attempt to load it with options [pdftex]</p></div><br>The error message is stright forward,  you may look for the exact position where include this package, and change the include order, as the options have set relations. And sometimes it could be hard, as some packages will include packages that you may already defined. In my case the real package conflict are between <code>svg</code> and <code>graphicx</code>.</p><hr><p><div id="3"></div></p><h2 id="3-Subfigure-and-Subfloat"><a href="#3-Subfigure-and-Subfloat" class="headerlink" title="3. Subfigure and Subfloat"></a>3. Subfigure and Subfloat</h2><p><code>Subfigure</code> is sort of deprecated package. As I found it first and in the first template I used, there was no conflict, so I kept using it for some semesters. Till recently in the ITMO template, it clashed. So I went for other ways around.</p><p>Forgot to mention that, subfigure has two way of implementation, the first one, as documented on over leaf, also failed in my first template. And another way, the syntax is similar to that of <code>subfloat</code>, which is:<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[!htb]</span><br><span class="line"><span class="keyword">\hfill</span></span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\subfloat</span>[sub label]&#123;</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.45<span class="keyword">\textwidth</span>]&#123;pic1&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">\hfill</span></span><br><span class="line"><span class="keyword">\subfloat</span>[sub label]&#123;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.45<span class="keyword">\textwidth</span>]&#123;pic2&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">\hfill</span><span class="keyword">\null</span></span><br><span class="line"><span class="keyword">\caption</span>&#123; &#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure></p><p>And another thing is that engine automatically ingore the spaces at the end, so only adding <code>\hfill</code> will not make a difference, <code>\null</code> must be added behind it.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;I remember I used to write a similar article.</summary>
    
    
    
    <category term="Trick" scheme="https://redbowtie.github.io/categories/Trick/"/>
    
    
    <category term="LaTex" scheme="https://redbowtie.github.io/tags/LaTex/"/>
    
  </entry>
  
  <entry>
    <title>Tips on Paper Writing</title>
    <link href="https://redbowtie.github.io/2023/03/16/PaperWriting/"/>
    <id>https://redbowtie.github.io/2023/03/16/PaperWriting/</id>
    <published>2023-03-16T06:32:00.000Z</published>
    <updated>2023-08-28T17:06:34.918Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><p>So, as for paper writing, unfortunately, I’ve lost the data.  Well, I suppose I still had chance to re-download it from the awful website, but with this chance, I gotta say that maybe I can review the instruction from <a href="https://space.bilibili.com/230105574/channel/seriesdetail?sid=1569600">Dr. Can</a>.</p><hr><h1 id="Paper-writing"><a href="#Paper-writing" class="headerlink" title="Paper writing"></a>Paper writing</h1><h2 id="I-Facts"><a href="#I-Facts" class="headerlink" title="I. Facts"></a>I. Facts</h2><p>Generally, there are 7 parts in a paper.</p><blockquote><ul><li>Title</li><li>Abstract</li><li>Introduction / Literature Review (Backgraound)</li><li>Method</li><li>Result / Discussion</li><li>Conclusion</li><li>Reference</li></ul></blockquote><p>Within which, the <code>method</code>, <code>result</code>, and <code>conclusion</code> is the most important.</p><p>Thus, it is recommend that to write in the following order</p><div class="alert success no-icon"><ol><li>Method</li><li>Result / Discussion</li><li>Conclusion</li><li>Introduction / Literature Review</li><li>Abstract &amp; Title</li><li>Reference.</li></ol></div><p>It’s clear that the most important thing is to confirm the method.</p><p><strong>To note</strong>, for a reviewer / editor, your <strong><em>figures and charts</em></strong> should be appealing.</p><hr><h2 id="II-Introduction"><a href="#II-Introduction" class="headerlink" title="II. Introduction"></a>II. Introduction</h2><p>I found this irritating to write one. Not sure if it’s due to the requirements or it’s just that I’m not good at this.</p><p>Introduction answers two problems. One is “What is the research”, and the other is Motivation. It has to be within logic. Contribution is the key.</p><ul><li>Background information<ul><li>Data</li><li>Statement</li><li>Phenomenon</li><li>It gets smaller</li></ul></li><li>Literature review<ul><li>Other results </li><li>Potential blanks</li></ul></li><li>Thesis statement</li></ul><p>Well, the more you read, the better you write.<br>Some tips are:</p><ol><li>Choose some recent paper to cite</li><li>Proper citation</li><li>A good graph (maybe)</li><li>It should be like 10%.</li></ol><hr><h2 id="III-Methodology"><a href="#III-Methodology" class="headerlink" title="III. Methodology"></a>III. Methodology</h2><p>When it comes with  paper, method is the first thing that one should confirm. It is hard to write exact contribution in it.</p><p>A theoretical one should obtain procedures and a proof should contain investigation method, or data processing.</p><p>For application, one should specify how writer get the results, that is, the results can be re-produced. e.g. mathematical modelling, simulation results.</p><p>In order to achieve this, you should provide ample and accurate technical details, including hypothesis, solving, verification, and equipment. Words should be simple and explicit. Orders are not identical to the real thinking process.</p><p>For typical controller design, it could be:</p><ul><li>Mathematical model</li><li>Controller design</li><li>Stability analysis</li><li>Equipment</li></ul><p>The notations should be consistent. You may introduce NOMENCLATURE at the beginning. When they’re first introduced, make sure descriptions are added.</p><hr><h2 id="IV-Result-amp-Discussion"><a href="#IV-Result-amp-Discussion" class="headerlink" title="IV. Result &amp; Discussion"></a>IV. Result &amp; Discussion</h2><p>Express things properly makes huge difference. Things takes time. You need more reading  and writing, and practicing. </p><p>A valid template could be </p><ul><li>Describe results<ul><li>Charts</li><li>Language</li><li>Quantities</li><li>Judgements</li></ul></li><li>Analysis<ul><li>Demonstrate</li><li>Comparison</li></ul></li><li>Discussion<ul><li>Critical thinking<ul><li>Meaning</li><li>Future</li><li>Guesses</li></ul></li></ul></li></ul><hr><h2 id="V-Figure-amp-Table"><a href="#V-Figure-amp-Table" class="headerlink" title="V. Figure &amp; Table"></a>V. Figure &amp; Table</h2><p>This could be the first thing that a reviewer may check.</p><ol><li>Author’s Guide, check template, figure number, Caption positions, <strong>abbr. or not.</strong></li><li>Every one of them should be cited.</li><li>Refer to number, not position.</li><li>Consistency</li><li>Chart should be self-explanatory</li><li>Multiple data should add legends( And words if grey)</li><li>Sub-captions explained in main caption</li><li>Preserve original data</li></ol><hr><h2 id="VI-Conclusion-abstract-and-title"><a href="#VI-Conclusion-abstract-and-title" class="headerlink" title="VI. Conclusion, abstract and title"></a>VI. Conclusion, abstract and title</h2><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><ul><li>1-2 paragraph, but do not repeat results.</li><li>Discover, Extension and future plan (a summary to the discussion)</li><li>Consider Thesaurus</li><li>Emphasis contribution, and corresponds with introduction</li></ul><h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><ul><li>Key points selected from intro.</li><li>1-2 sentence about method</li><li>The most important results.</li><li>Rewrite contribution.</li></ul><h3 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h3><ul><li>Topic</li><li>Method</li><li>Result (improve/reduce)</li></ul><hr><h2 id="VII-Communication-with-reviewers"><a href="#VII-Communication-with-reviewers" class="headerlink" title="VII. Communication with reviewers"></a>VII. Communication with reviewers</h2><ul><li>Keep a good mind (rest one day)</li><li>They’re not your enemies</li><li>Respond To each comment</li><li>Explicitly demonstrate modifications</li><li>Show gratitude, do not directly deny their suggestions.</li><li></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Trying to write one is better than just looking.</summary>
    
    
    
    
    <category term="Paper" scheme="https://redbowtie.github.io/tags/Paper/"/>
    
  </entry>
  
  <entry>
    <title>A weird IoT coursework, document for code</title>
    <link href="https://redbowtie.github.io/2022/10/10/IoTCoursework/"/>
    <id>https://redbowtie.github.io/2022/10/10/IoTCoursework/</id>
    <published>2022-10-10T12:32:00.000Z</published>
    <updated>2022-10-10T01:10:08.544Z</updated>
    
    <content type="html"><![CDATA[<p>It sucks. (Not IoT, but the instructor and the company) <span id="more"></span></p><p>So, this is kinda like the document of that <a href="https://github.com/RedBowtie/iot_prj_0">IoT project</a>, but just don’t have too much expectation on this article.</p><hr><h2 id="I-Env-and-tools"><a href="#I-Env-and-tools" class="headerlink" title="I. Env and tools"></a>I. Env and tools</h2><h4 id="Env"><a href="#Env" class="headerlink" title="Env:"></a>Env:</h4><ul><li>Linux (should be OK with most of distributions)</li><li>WINDOWS (optinal, because my instance of IoT application is forced to use a simulation app)</li></ul><h4 id="Packages"><a href="#Packages" class="headerlink" title="Packages:"></a>Packages:</h4><ul><li>paho.mqtt.c-1.3.0</li><li>gcc</li><li>arbitrary text editor or IDE</li><li><del>I forget the rest, but if the compile goes wrong, google it then install the corresponding package works fine</del></li></ul><h4 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h4><ul><li>Cannot remember anything that is important.</li><li>maybe open the simulation sofware and the project file to make it easier for test part</li></ul><hr><h2 id="II-Configuration"><a href="#II-Configuration" class="headerlink" title="II. Configuration"></a>II. Configuration</h2><ol><li><h4 id="Open-editor-and-goto-smartHome-conf"><a href="#Open-editor-and-goto-smartHome-conf" class="headerlink" title="Open editor and goto smartHome.conf"></a>Open editor and goto <code>smartHome.conf</code></h4><p> Change the <code>uri</code> (and maybe as well as <code>port</code>) term into the correspoding <code>ip address</code> where the mqtt server holds.</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span>mqtt<span class="punctuation">]</span></span><br><span class="line">uri=tcp<span class="punctuation">:</span><span class="comment">//192.168.114.107:1883</span></span><br><span class="line"><span class="punctuation">[</span>server<span class="punctuation">]</span></span><br><span class="line">port=<span class="number">8888</span></span><br></pre></td></tr></table></figure><blockquote><p>As I used virtual platform, so the whole thing runs locally. It <strong>should</strong> work fine with regular network, but the <strong>proper configuration of the firewall</strong> settings is required, otherwise the connection will be refused.</p></blockquote></li><li><h4 id="In-mqtt-c"><a href="#In-mqtt-c" class="headerlink" title="In mqtt.c"></a>In <code>mqtt.c</code></h4><p> Change the following terms in <code>preprocessing derivatives</code></p><ul><li><code>ADDRESS</code></li><li><code>MQTT_SUB_TOPIC</code><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ADDRESS <span class="string">&quot;tcp://192.168.114.107:1883&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MQTT_SUB_TOPIC <span class="string">&quot;1663401252952/AIOTSIM2APP&quot;</span></span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="In-main-c"><a href="#In-main-c" class="headerlink" title="In main.c"></a>In <code>main.c</code></h4><p> Change the following terms in <code>preprocessing derivatives</code></p><ul><li><code>CTRL_PUB_TOPIC</code></li><li><code>SUB_TOPIC</code>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CTRL_PUB_TOPIC <span class="string">&quot;1663401252952/APP2AIOTSIM&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUB_TOPIC <span class="string">&quot;1663401252952/AIOTSIM2APP&quot;</span></span></span><br></pre></td></tr></table></figure></li></ul></li></ol><p>This should be the <strong>least change</strong> to make the code running.</p><hr><h2 id="III-Compile-and-run"><a href="#III-Compile-and-run" class="headerlink" title="III. Compile and run"></a>III. Compile and run</h2><p>To compile the files</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br></pre></td></tr></table></figure><p>Run the executable</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./smart_home</span></span><br></pre></td></tr></table></figure><hr><h2 id="IV-Customization"><a href="#IV-Customization" class="headerlink" title="IV.  Customization"></a>IV.  Customization</h2><h2 id="Some-comments"><a href="#Some-comments" class="headerlink" title="Some comments"></a>Some comments</h2><ol><li><h4 id="Estabilish-Connection"><a href="#Estabilish-Connection" class="headerlink" title="Estabilish Connection"></a>Estabilish Connection</h4> In <code>main.c</code> mqtt funcions are called to <strong>connect to the server</strong> and <strong>subscribe the topic</strong>. <blockquote><p>The process is mainly done with official means, while in <code>Callback</code> function, the original <code> publication topic</code> is set to default, and is not used since. Thus I highly doubt this is the right way.<br><br></p></blockquote></li><li><h4 id="Data-Collection"><a href="#Data-Collection" class="headerlink" title="Data Collection"></a>Data Collection</h4><p> The time interval can be changed as you like, however, the shorter the interval, the more likely some value cannot be updated.</p><blockquote><p>It should be noted that due to some <a href="https://github.com/RedBowtie/iot_prj_0/issues?q=is%3Aissue+is%3Aclosed">issue</a>, the shorter the interval is, the more likely you’re going to miss data from the very beginning.</p></blockquote><p> <br><br> In <code>mqtt.c</code>, when the function <code>get_virtual_env()</code> is not called, every(most) <code>JSON</code> msg will be captured, and then handled separately with many IFs to store the value into corresponding term in a <strong>dedicate structure</strong>.<br> <div class="alert warning no-icon"><p>The value handling for number types is simple, however  if string (char array) is involved, it should be consider whether the comparison should be handled instantly, or assign new memory for it.<br><br><br>As both comparison are <strong>fulltext</strong>, thus the time complexity are both <code>O(N)</code> to either <strong>assign and copy the string</strong> content, or make a <strong>instant comparison</strong>. The latter only need to store a single digit to represent the result. And remember to deal with <em>fallback situations</em>, especially for certain kind of msg that will not constantly update its value.</p></div><br></p></li><li><h4 id="Data-Handling"><a href="#Data-Handling" class="headerlink" title="Data Handling"></a>Data Handling</h4><p> After the data is retrieved into <code>main</code>, again accessing the elements one by one to decide corresponding measures, again here, the command can be also preset in preprocessing derivatives for a straight forward code reading experience.</p><p> Due to the need of showing status and detailed problem, there should be flags to indicate the condition of each sensor values, however, that will be a lot more extra code, so I use a single variable to store the status in sum of powers of 2. To me this is clearer.</p></li><li><h3 id="Report"><a href="#Report" class="headerlink" title="Report"></a>Report</h3><p> I think there’s no need for explaination on this on.</p></li></ol><h3 id="Modification-suggestions"><a href="#Modification-suggestions" class="headerlink" title="Modification suggestions"></a>Modification suggestions</h3><ol><li><h4 id="Change-Structure-definition-in-mqtt-h"><a href="#Change-Structure-definition-in-mqtt-h" class="headerlink" title="Change Structure definition in mqtt.h."></a>Change Structure definition in <code>mqtt.h</code>.</h4></li><li><h4 id="Add-Data-handdling-in-transfer-virtual-data"><a href="#Add-Data-handdling-in-transfer-virtual-data" class="headerlink" title="Add Data handdling in transfer_virtual_data()"></a>Add Data handdling in <code>transfer_virtual_data()</code></h4></li><li><h4 id="Add-preset-behavior-in-main-c"><a href="#Add-preset-behavior-in-main-c" class="headerlink" title="Add preset behavior in main.c"></a>Add preset behavior in <code>main.c</code></h4></li><li><h4 id="Change-conditions-and-exception-handling-in-main"><a href="#Change-conditions-and-exception-handling-in-main" class="headerlink" title="Change conditions and exception handling in main()"></a>Change conditions and exception handling in <code>main()</code></h4></li><li><h4 id="Fix-bad-posix-Don’t-waste-time-on-it"><a href="#Fix-bad-posix-Don’t-waste-time-on-it" class="headerlink" title="Fix bad posix Don’t waste time on it"></a><del>Fix bad posix</del> Don’t waste time on it</h4></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;It sucks. (Not IoT, but the instructor and the company)</summary>
    
    
    
    <category term="Term7" scheme="https://redbowtie.github.io/categories/Term7/"/>
    
    
    <category term="IoT" scheme="https://redbowtie.github.io/tags/IoT/"/>
    
    <category term="C" scheme="https://redbowtie.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Discrete Control - Practical assignments</title>
    <link href="https://redbowtie.github.io/2022/09/28/DiscreteCtrl/"/>
    <id>https://redbowtie.github.io/2022/09/28/DiscreteCtrl/</id>
    <published>2022-09-28T11:32:00.000Z</published>
    <updated>2022-11-15T08:14:35.187Z</updated>
    
    <content type="html"><![CDATA[<p>Comparing with merely repeat the textbook or slides, record the ideas to the problems could be more helpful. <span id="more"></span></p><hr><h2 id="Practice-1-Modeling-of-the-linear-discrete-systems"><a href="#Practice-1-Modeling-of-the-linear-discrete-systems" class="headerlink" title="Practice 1. Modeling of the linear discrete systems"></a>Practice 1. Modeling of the linear discrete systems</h2><p>It mainly involves the idea of a <strong>zero-order extrapolator</strong>.</p><p>A linear pulse system is such an automatic control system (ACS), which, in addition to the links described by lin- ear differential equations, includes a pulse element (PE), which converts a continuous input into a sequence of pulses.</p><p>The continuous part of the system is a set of elementary continuous links which usually describe the operation of the control object (CO). PE is a device that is part of a digital-to-analog converter.</p><p>This practice is mainly focused on tuning coefficient, the scheme is given.</p><p><img src="/images/DiscreteCtrl/pr1-scheme.png" alt="ZOH"></p><p>In terms of stability border, at first I thought the neutral and oscillatory represent different situations, while it turns out both two terms refer to the marginal stability, that can be regard as Lyapunov stability.</p><script type="math/tex; mode=display">|z|<1</script><script type="math/tex; mode=display">|1-K_{FB}K_{CO}T|<1</script><script type="math/tex; mode=display">|K_{FB}K_{CO}T-1|<1</script><ul><li>stability border<script type="math/tex; mode=display">0<K_{FB}<\frac{2}{K_{CO}\cdot T}</script>When<script type="math/tex; mode=display">\frac{1}{K_{CO}\cdot T}\le K_{FB}\le\frac{2}{K_{CO}\cdot T}</script>system has oscillations .</li></ul><p>In the oscillation process, the larger the $K_{FB}$ is, the larger the amplitude, the slower the attenuation, the longer the transient time, before finally reach the stability boundry.</p><p><strong>As for time optimal, and I still have problem</strong>, when determine the value, </p><script type="math/tex; mode=display">t^*\le-\frac{3T}{\ln\eta}</script><script type="math/tex; mode=display">(1-K_{FB}K_{CO}T)\rightarrow0</script><script type="math/tex; mode=display">K_{FB}\rightarrow\frac{1}{K_{CO}\cdot T}</script><hr><h2 id="Practice-2-Second-order-linear-discrete-systems-dynamic-properties"><a href="#Practice-2-Second-order-linear-discrete-systems-dynamic-properties" class="headerlink" title="Practice 2 Second order linear discrete systems dynamic properties"></a>Practice 2 Second order linear discrete systems dynamic properties</h2><p>This part mainly involves the discrete process of a state space model, derive corresponding feedback coefficient from given roots of character polymonial, and the plot of discrete phase portrait, other than time-consuming, there seems to be not much problem.</p><p><img src="/images/DiscreteCtrl/pr2-scheme.png" alt="ZOH"></p><hr><h2 id="Practice-3-Reference-signals-discrete-generators"><a href="#Practice-3-Reference-signals-discrete-generators" class="headerlink" title="Practice 3 Reference signals discrete generators"></a>Practice 3 Reference signals discrete generators</h2><p>If I gotta say, the idea would be like what I learned in the modelling of nonlinear systems, but slightly different. Well, after all such representation is general. However, the idea of such <strong>generator</strong> is really smart.</p><h4 id="Discrete-Generator"><a href="#Discrete-Generator" class="headerlink" title="Discrete Generator"></a>Discrete Generator</h4><script type="math/tex; mode=display">\xi_1(k+1)=\xi_2(k)</script><script type="math/tex; mode=display">\xi_2(k+1)=2\cdot \xi_2(k)\cos(\omega T)-\xi_1(k)</script><script type="math/tex; mode=display">g(k)=\xi_1(k)=A\sin(\omega kT)</script><p>In my case $T=0.2,\ A=1,\ \omega=0.08$</p><script type="math/tex; mode=display">\xi(0)=\left[\begin{array}{c}0\\0.016\end{array}\right]</script><script type="math/tex; mode=display">\xi_2(k+1)=-\xi_1(k)+1.9997\cdot \xi_2(k)</script><p>thus</p><script type="math/tex; mode=display">\xi(k+1)=\left[\begin{array}{cc}0&1\\-1&1.9997\end{array}\right]\xi(k)</script><p><img src="/images/DiscreteCtrl/scheme1_f.png" alt="Generator"></p><p><img src="/images/DiscreteCtrl/gen1-1.png" alt="transient"> </p><p><img src="/images/DiscreteCtrl/gen1-2.png" alt="transient"></p><h4 id="External-disturbance"><a href="#External-disturbance" class="headerlink" title="External disturbance"></a>External disturbance</h4><p>Given</p><script type="math/tex; mode=display">g(k)=2e^{-kT}\sin(3kT)+0.1(kT)^2</script><p><strong>The Idea is to create three generators</strong></p><script type="math/tex; mode=display">g_1(k)=2e^{-kT}</script><script type="math/tex; mode=display">g_2(k)=\sin(3kT)</script><script type="math/tex; mode=display">g_3(k)=0.1(kT)^2</script><script type="math/tex; mode=display">g(k)=g_1(k)g_2(k)+g_3(k)</script><h5 id="First-generator"><a href="#First-generator" class="headerlink" title="First generator"></a>First generator</h5><script type="math/tex; mode=display">a_1(k)=g_1</script><script type="math/tex; mode=display">a_2(k)=a_1(k+1)=2\cdot e^{-kT}\cdot e^{-T}=a_1(k)\cdot e^{-T}</script><script type="math/tex; mode=display">a(k+1)=\left[\begin{array}{cc}0&1\\e^{-T}&0\end{array}\right]a(k)</script><h5 id="Second-generator"><a href="#Second-generator" class="headerlink" title="Second generator"></a>Second generator</h5><script type="math/tex; mode=display">b_1(k)=g_2(k)</script><script type="math/tex; mode=display">b_2(k)=b_1(k+1)=\cos(3T)\cdot\sin(3kT)+sin(3T)\cdot \cos(3kT)</script><script type="math/tex; mode=display">b_3(k)=b_2(k+1)=2\cdot b_2(k)\cdot\cos(3T)-b_1(k)</script><script type="math/tex; mode=display">b(k+1)=\left[\begin{array}{cc}0&1\\-1&2\cos(3T)\end{array}\right]b(k)</script><ul><li><h5 id="Third-generator"><a href="#Third-generator" class="headerlink" title="Third generator"></a>Third generator</h5><script type="math/tex; mode=display">c_1=g_3(k)</script><script type="math/tex; mode=display">c_2(k)=c_1(k+1)=0.1((k+1)T)^2=0.1((kT)^2+2kT^2+T^2)=\\c_1(k)+0.2kT^2+0.1T^2</script><script type="math/tex; mode=display">c_2(k)-c_1(k)=0.2kT^2+0.1T^2</script><script type="math/tex; mode=display">c_3(k)=c_2(k+1)=c_1(k+1)+0.2(k+1)T^2+0.1T^2\\=c_2(k)+0.2kT^2+0.3T^2</script><script type="math/tex; mode=display">c_3(k)-c_2(k)=c_2(k)-c_1(k)+0.2T^2</script><script type="math/tex; mode=display">c_4(k)=c_3(k+1)=c_3(k)+c_2(k)-c_1(k) +2（c_3(k)-2c_2(k)+c_1(k)）\\=3c_3(k)-3c2(k)+c_1(k)</script><script type="math/tex; mode=display">c(k+1)=\left[\begin{array}{ccc}0&1&0\\0&0&1\\1&-3&3\end{array}\right]c(k)</script><p>Then the left synthesis would be easy.<br><img src="/images/DiscreteCtrl/scheme2_f.png" alt="scheme"> </p><p><img src="/images/DiscreteCtrl/dis1.png" alt="transient"></p></li></ul><hr><h2 id="Practice-4-Synthesis-of-the-discrete-stabilizing-control-algorithms"><a href="#Practice-4-Synthesis-of-the-discrete-stabilizing-control-algorithms" class="headerlink" title="Practice 4. Synthesis of the discrete stabilizing control algorithms"></a>Practice 4. Synthesis of the discrete stabilizing control algorithms</h2><hr><h2 id="Course-Work"><a href="#Course-Work" class="headerlink" title="Course Work"></a>Course Work</h2><h3 id="State-space-representation"><a href="#State-space-representation" class="headerlink" title="State-space representation"></a>State-space representation</h3><script type="math/tex; mode=display">K_2 = 425.00\ \\ T_2 = 0.12\ \\ K_3 = 0.25</script><script type="math/tex; mode=display">W_2 = \frac{K_2}{T_2 p+1}\ \\W_3 = \frac{K_3}{p}</script><script type="math/tex; mode=display">\left\{\begin{array}{l}\dot{x}_1=K_3 \cdot x_2\\\dot{x}_2=\frac{1}{T_2}(-x_2+K_2)\end{array}\right.</script><p>Transform to state-space form</p><script type="math/tex; mode=display">\dot{X}=A_HX+B_HU,\\Y=CX</script><p>where</p><script type="math/tex; mode=display">X=\left[\begin{array}{c}x_1\\x_2\end{array}\right],\ A_H=\left[\begin{array}{cc}0&K_3\\0&-\frac{1}{T_2}\end{array}\right],\ B_H=\left[\begin{array}{c}0\\\frac{K_2}{T_2}\end{array}\right],\ C=\left[\begin{array}{cc}1&0\end{array}\right]</script><p>Skip the <strong>discretization</strong> process and the representation (for convenience), to note $T=0.003$</p><script type="math/tex; mode=display">A_d=e^{A_H\cdot T},\ B_d=(\sum_{i=1}^\infty\frac{T^i A_H^{i-1}}{i!})B_H</script><h3 id="Systhesis-PI-controller"><a href="#Systhesis-PI-controller" class="headerlink" title="Systhesis PI controller"></a>Systhesis PI controller</h3><p>Old fashioned modal control (which again, I didn’t find any relavent info online, maybe Russians prefer to call it in this way)</p><p>First construct <strong>augmented matrix</strong>, as there’s no disturbance, the term is not written.</p><p>$v(k)$ is the integral term, and $g(k)$ represents reference signal</p><script type="math/tex; mode=display">u(k)=K_{FB}\cdot e(k)</script><p>And naturally for integral,</p><script type="math/tex; mode=display">v(k+1)=v(k)+e(k)=v(k)+g(k)-x_1(k),\ v(0)=0</script><script type="math/tex; mode=display">u(k)=K_p\cdot e(k)+K_i\cdot v(k)-K_2\cdot x_2(k)\ \\=K_p\cdot g(k)+K_i\cdot v(k)-(K_p\cdot x_1(k)+K_2\cdot x_2(k))</script><script type="math/tex; mode=display">x(k+1)=A_d\cdot x(k)+B_d\cdot u(k)</script><p>Perform augmentation,</p><script type="math/tex; mode=display">\left[\begin{array}{c}v(k+1)\\x(k+1)\end{array}\right]=\left[\begin{array}{cc}1&-C\\0&A_d\end{array}\right]\left[\begin{array}{c}v(k)\\x(k)\end{array}\right]+\left[\begin{array}{c}0\\B_d\end{array}\right]+\left[\begin{array}{c}1\\0\end{array}\right]g(k)</script><script type="math/tex; mode=display">u(k)=K_p g(k)-\bar{K}\bar{x}(k)</script><p>Choose standard binomial polynomial of the third degree as reference  </p><script type="math/tex; mode=display">(\lambda+\omega_0)^3, t_\Pi \cdot \omega_0=8.5</script><p><strong>(required more investigation here, as this number is different from the content in documentation used before)</strong></p><script type="math/tex; mode=display">\lambda_{1,2,3}=-\frac{t_\Pi \cdot \omega_0}{t_{desire}}</script><script type="math/tex; mode=display">\Gamma_H=\left[\begin{array}{ccc}\lambda&1&0\\0 &\lambda&1\\0&0&\lambda\end{array}\right]</script><script type="math/tex; mode=display">H=\left[\begin{array}{cc}1&0&0\end{array}\right]\ \\ G_d=e^{\Gamma_H\cdot T}</script><script type="math/tex; mode=display">-\bar{A}\cdot M+G_d\cdot M+\bar{B}\cdot H=0</script><p>solve the sylvester equation with <code>sylv(-A,G,B*H)</code> or <code>lyap(-A,G,B*H)</code></p><p>and</p><script type="math/tex; mode=display">\bar{K}=HM^{-1}</script><p>Obtain</p><script type="math/tex; mode=display">K=\left[\begin{array}{cc}-K_i&K_p&K_2\end{array}\right]</script><p>The rest should be really simple like making simulations and evaluations. (e.g. <code>lsiminfo</code>)</p><p><img src="/images/DiscreteCtrl/SynthesizedScheme.png" alt="SynScheme"> </p><p><img src="/images/DiscreteCtrl/evaluation1.png" alt="QI"> </p><p>At first, I didn’t realize that the implementation of I regulator requires an additional states, so the derived M looks really weird, but now I see.</p><p>Oh my, the report writing… it’s killing me.</p><hr><h2 id="Practice-5"><a href="#Practice-5" class="headerlink" title="Practice 5."></a>Practice 5.</h2><hr><h2 id="Practice-6"><a href="#Practice-6" class="headerlink" title="Practice 6."></a>Practice 6.</h2><p>Design complete dimension observer:</p><script type="math/tex; mode=display">\left\{\begin{array}{l}\hat{x}(k+1)=A_d\cdot \hat{x}(k)+L(y_m(k)-C_m\cdot \hat{x}(k))+B_d\cdot u(k)\\u(k)=K_d\cdot \hat{x}(k)\end{array}\right.</script><p>Consider representing the error of observer:</p><script type="math/tex; mode=display">\tilde{x}(k)=x(k)-\hat{x}(k)</script><script type="math/tex; mode=display">\tilde{x}(k+1)=A_d\cdot \tilde{x}(k)-L\cdot C_m\cdot \tilde{x}(k)=F_z\cdot \tilde{x}(k)</script><script type="math/tex; mode=display">F_z = A_d-L\cdot C_m</script><hr><h2 id="P3"><a href="#P3" class="headerlink" title="P3"></a>P3</h2><script type="math/tex; mode=display">1+G_R(z)G_P(z)=0</script><p>where $G_R(z)$ is the controller $\frac{Q}{P}$, and the latter is the <strong>process</strong> $\frac{B}{A}$</p><script type="math/tex; mode=display">(z-z_{a1})(z-z_{a2})\dots(z-z_{a(m+2+d)})=0</script><script type="math/tex; mode=display">m=2-d,\ d=0</script><script type="math/tex; mode=display">P(z^{-1})=(1-z^{-1})(1+\gamma_1 z^{-1})</script><script type="math/tex; mode=display">A(z)=(z-z_1)(z-z_2)=z^2-(z_1+z_2)z+z_1z_2</script><script type="math/tex; mode=display">A(z^{-1})=1+a_1z^{-1}+a_2z^{-2}</script><p>where</p><script type="math/tex; mode=display">a_1=(z_{p1}+z_{p2}),\  a_2=z_{p1}z_{p2}</script><script type="math/tex; mode=display">Q(z^{-1})=q_0+q_1z^{-1}+q_2z^{-2}</script><script type="math/tex; mode=display">B(z^{-1})=b_1z^{-1}+b_2z^{-2}</script><hr><script type="math/tex; mode=display">\left\{\begin{array}{lcl}\gamma+q_0b_1 & = &-(z_1+z_2+z_3+z_4)+1-a_1,\\\gamma(a_1-1)+q_0b_2+q_1b_1 & = & z_1z_2+z_3z_4+(z_1+z_2)(z_3+z_4)-a_2+a_1,\\\gamma(a_2-a_1)+q_1b_2+q_2b_1 & = & -z_1z_2(z_3+z_4)-z_3z_4(z_1+z_2)+a_2,\\q_2b_2-\gamma a_2 & = & z_1z_2z_3z_4.\end{array}\right.</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;Comparing with merely repeat the textbook or slides, record the ideas to the problems could be more helpful.</summary>
    
    
    
    <category term="Term7" scheme="https://redbowtie.github.io/categories/Term7/"/>
    
    
    <category term="Control" scheme="https://redbowtie.github.io/tags/Control/"/>
    
    <category term="MATLAB" scheme="https://redbowtie.github.io/tags/MATLAB/"/>
    
    <category term="Discrete System" scheme="https://redbowtie.github.io/tags/Discrete-System/"/>
    
  </entry>
  
  <entry>
    <title>Quadruped Basics</title>
    <link href="https://redbowtie.github.io/2022/07/05/Quadruped/"/>
    <id>https://redbowtie.github.io/2022/07/05/Quadruped/</id>
    <published>2022-07-04T16:32:00.000Z</published>
    <updated>2023-06-28T14:06:34.170Z</updated>
    
    <content type="html"><![CDATA[<p>Things are getting clearer now. <span id="more"></span></p><p>The analysis of forward and reverse kinematics and etc. will be supplemented in the future from manual scripts.</p><hr><!--toc--><hr><h2 id="2D-Modelling"><a href="#2D-Modelling" class="headerlink" title="2D - Modelling"></a>2D - Modelling</h2><p>tbc</p><hr><h2 id="3D-Modelling"><a href="#3D-Modelling" class="headerlink" title="3D - Modelling"></a>3D - Modelling</h2><p>tbc</p><hr><h2 id="Pitch"><a href="#Pitch" class="headerlink" title="Pitch"></a>Pitch</h2><hr><h2 id="Roll"><a href="#Roll" class="headerlink" title="Roll"></a>Roll</h2><hr><h2 id="Yaw"><a href="#Yaw" class="headerlink" title="Yaw"></a>Yaw</h2><hr><h2 id="Trajectory-Planning"><a href="#Trajectory-Planning" class="headerlink" title="Trajectory Planning"></a>Trajectory Planning</h2><h3 id="Cycloid"><a href="#Cycloid" class="headerlink" title="Cycloid"></a>Cycloid</h3><h3 id="Bazier"><a href="#Bazier" class="headerlink" title="Bazier"></a>Bazier</h3><hr><h2 id="Dynamics-Basics"><a href="#Dynamics-Basics" class="headerlink" title="Dynamics Basics"></a>Dynamics Basics</h2><p>Previously, the modelling of legs is done, however, only the kinematics part is not enough. As the robot is in motion, which is a time-variant system. During the process, velocity and acceleration may change with time. Natrually, force is involved with acceleration, and the analysis of force requires dynamics.</p><h3 id="1-Velocity-and-static-force"><a href="#1-Velocity-and-static-force" class="headerlink" title="1.Velocity and static force"></a>1.Velocity and static force</h3><p>Starting with rigid motion.</p><h4 id="1-1-Time-variant-representations"><a href="#1-1-Time-variant-representations" class="headerlink" title="1.1 Time-variant representations"></a>1.1 Time-variant representations</h4><h5 id="Differential-of-position-vector"><a href="#Differential-of-position-vector" class="headerlink" title="Differential of position vector"></a>Differential of position vector</h5><p>When the mass of an object can be concentrate into one point, the rotation of the object itself can be ignored, and only linear velocity needs to be considered.</p><p>Define a point $Q$ in reference coodinate $B$, the position can be represent as $^B P_Q$, and the velocity as $^B V_Q$</p><p>The following relation exists:</p><script type="math/tex; mode=display">^B V_Q=\frac{d^B P_Q}{dt}=\lim_{\triangle t\rightarrow0 }\frac{^B P_Q(t+\triangle t)- {^B P_Q(t)}}{\triangle t}</script><blockquote><p>The reference frame is very important, as the frame itself may be moving.</p></blockquote><p>Similar to transformation of position, the velocity can also be changed between coordinate.</p><script type="math/tex; mode=display">^A(^B V_Q)=^A(\frac{d^B V_Q}{dt})=^A_B R^B V_Q</script><blockquote><p>In most cases, there’ll be discussion about the relative velocity of origin to the world reference frame, without considering the relative velocity to any other coordinate:</p><script type="math/tex; mode=display">v_C={^U V_{CORG}}</script></blockquote><h5 id="Angular-velocity"><a href="#Angular-velocity" class="headerlink" title="Angular velocity"></a>Angular velocity</h5><p>When the object cannot be regard as an mass point, the rotation needs to be considered, which will usually be represented as $\Omega$.</p><p>Assume to observe point $Q$ from coordinate $\{B\}$, and the position is invariant to time, while $\{B\}$ is rotating relatively to $\{A\}$, compute the velocity of $Q$ in $\{A\}$,</p><script type="math/tex; mode=display">^A V_Q = {^A\Omega_B} \times {^A P_Q}</script><blockquote><p>The cross product equation:<script type="math/tex">a\times b=(l,m,n)\times(o,p,q)=(mq-np,no-lq,lp-mo)</script></p></blockquote><p>In which,</p><script type="math/tex; mode=display">^A P_Q = {^A_B R^B P_Q}</script><p>Normally, $Q$ is changing relatively to $\{B\}$, thus the linear velocity compoent.</p><script type="math/tex; mode=display">^A V_Q={^A_B R {^B V_Q}}+{^A\Omega_B}\times{^A_B R_BP_Q}</script><p>Adding velocity of origin,</p><script type="math/tex; mode=display">^A V_Q={^A V_{BORG}}+{^A R_B {^B V_Q}}+{^A\Omega_B}\times{^A_B R_BP_Q}</script><hr><h3 id="2-Link-motion"><a href="#2-Link-motion" class="headerlink" title="2. Link motion"></a>2. Link motion</h3><p>Acording to D-H parameters, calculate angular velocity:</p><script type="math/tex; mode=display">^i\omega_{i+1}={^i\omega_{i}}+ {^i_{i+1}R\dot{\theta}_{i+1}}{^{i+1}}\hat{Z}_{i+1}</script><p>where:</p><script type="math/tex; mode=display">\theta_{i+1}{^{i+1}}\hat{Z}_{i+1}={^{i+1}}\left[\begin{array}{c}0\\0\\\dot{\theta}_{i+1}\end{array}\right]</script><blockquote><p>To note that, in DH parameter, the revolute joints are defined as $Z$ axis, hence</p><script type="math/tex; mode=display"> \theta_{i+1}{^{i+1}\hat{Z}_{i+1}}</script></blockquote><p>As the angular velocity of $(i+1)-th$ link is produced by joint motion, so its angular velocity with respect to $i-th$ link, equals the raw angular velocity of link $i$ plus the joint speed of link $i+1$</p><p>Multiply $^{i+1}_i R$ on both sides to change observation coordinate,</p><script type="math/tex; mode=display">^{i+1}\omega_{i+1}=^{i+1}_i R^i \omega_i+\dot{\theta}_{i+1}{^{i+1}}\hat{Z}_{i+1}</script><p>For linear velocity</p><script type="math/tex; mode=display">^i v_{i+1}={^iv_i}+{^i\omega_i}\times{^iP_{i+1}}</script><p>Similarly,</p><script type="math/tex; mode=display">^{i+1}v_{i+1}={^{i+1}_i}R(^iv_i+{^i\omega_i}\times{^iP_{i+1}})</script><hr><h2 id="Dynamics-Modelling"><a href="#Dynamics-Modelling" class="headerlink" title="Dynamics Modelling"></a>Dynamics Modelling</h2><h3 id="1-Review"><a href="#1-Review" class="headerlink" title="1. Review"></a>1. Review</h3><p>The equation for revolute joint are presented above. As for prismatic joints, the idea is about the same:</p><script type="math/tex; mode=display">^{i+1}\omega_{i+1}={^{i+1}_iR{^i\omega_i}}</script><script type="math/tex; mode=display">^{i+1}v_{i+1}={^{i+1}_iR(^iv_i+{^i\omega_i\times{^iP_{i+1}}})}+\dot{d}_{i+1}{^{i+1}\hat{Z}_{i+1}}</script><hr><h3 id="2-Rigid-body-acceleration"><a href="#2-Rigid-body-acceleration" class="headerlink" title="2. Rigid body acceleration"></a>2. Rigid body acceleration</h3><h4 id="2-1-Linear-acceleration"><a href="#2-1-Linear-acceleration" class="headerlink" title="2.1 Linear acceleration"></a>2.1 Linear acceleration</h4><p>Same as the previous process, differentiate the velocity to obtain acceleration.</p><script type="math/tex; mode=display">^BA_Q=\frac{d^BV_Q}{dt}=\lim_{\triangle t\rightarrow0}\frac{^BV_Q(t+\triangle t)-^BV_Q(t)}{\triangle t}</script><p>Thr transformation between coordiantes are</p><script type="math/tex; mode=display">^AA_Q={^AA_{BORG}}+^A\dot{\Omega}_B\times{^A_BR^BP_Q}+{^A\Omega_B\times({^A\Omega_B\times{^A_BR^BP_Q}})}+2{^A\Omega_B\times{^A_BR^BV_Q}}+{^A_BR^BA_Q}</script><h4 id="2-2-Angular-acceleration"><a href="#2-2-Angular-acceleration" class="headerlink" title="2.2 Angular acceleration"></a>2.2 Angular acceleration</h4><script type="math/tex; mode=display">^A\dot{\Omega}_B=\frac{d^A\Omega_B}{dt}=\lim_{\triangle t\rightarrow0}\frac{^A\Omega_B(t+\triangle t)-{^A\Omega_B(t)}}{\triangle t}</script><p>Transformation between coordinate is as follows, asusme the reference frame $\{B\}$ is rotating at an angular speed $^A\Omega_B$ with respect to reference frame $\{A\}$, and frame $\{C\}$  is rorating at the speed $^B\Omega_C$ with respect to frame $\{B\}$</p><script type="math/tex; mode=display">^A\Omega_C={^A\Omega_B}+{^A_BR^B\Omega_C}</script><script type="math/tex; mode=display">^A\dot{\Omega}_C={^A\dot{\Omega}_B}+{^A_BR^B\dot{\Omega_C}}+{^A\Omega_B}\times{^A_BR^B\Omega_C}</script><hr><h3 id="3-Parallel-axis-theorem"><a href="#3-Parallel-axis-theorem" class="headerlink" title="3. Parallel axis theorem"></a>3. Parallel axis theorem</h3><p>The theorem can be used to determine the moment of inertia or the second moment of area of a rigid body about any axis, given the body’s moment of inertia about a parallel axis through the object’s center of gravity and the perpendicular distance between the axes.</p><script type="math/tex; mode=display">^AI={^CI}+m(P^T_CP_CI_3-P_CP^T_C)</script><p>where $P_C=[x_C\ y_C\ z_C]^T$, representing the center of mass in coordinate $\{A\}$.</p><hr><h3 id="4-Newton-Euler-equation"><a href="#4-Newton-Euler-equation" class="headerlink" title="4. Newton / Euler equation"></a>4. Newton / Euler equation</h3><p>In Newton’s equation, $m$ is the mass of rigid body.</p><script type="math/tex; mode=display">F=m\dot{v}</script><p>In Euler’s equation, $\dot{\omega},\ \omega$ are angular acceleration and angupar speed respectively, $^CI$ represent the moment of inertia in rigid mass center corrdinate.</p><script type="math/tex; mode=display">N={^CI\dot{\omega}}+\omega\times{^CI\omega}</script><hr><h3 id="5-Iterative-Newton-Euler-dynamics"><a href="#5-Iterative-Newton-Euler-dynamics" class="headerlink" title="5. Iterative Newton-Euler dynamics"></a>5. Iterative Newton-Euler dynamics</h3><p>To calculate the inertia force applied to the link, the angular speed, linear speed and angular acceleration is required.</p><h4 id="5-1-Iteration-of-Acceleration"><a href="#5-1-Iteration-of-Acceleration" class="headerlink" title="5.1 Iteration of  Acceleration"></a>5.1 Iteration of  Acceleration</h4><h5 id="Angular-acceleration"><a href="#Angular-acceleration" class="headerlink" title="Angular acceleration"></a>Angular acceleration</h5><p>To differentiate the angular speed equation, to obtain angular acceleration.</p><script type="math/tex; mode=display">^{i+1}\dot{\omega}_{i+1}={^{i+1}_iR{^i\dot{\omega}_i}}+{^{i+1}_iR}{^i\omega_i}\times\dot{\theta}_{i+1}{^{i+1}\hat{Z}_{i+1}}</script><h5 id="Linear-acceleration"><a href="#Linear-acceleration" class="headerlink" title="Linear acceleration"></a>Linear acceleration</h5><script type="math/tex; mode=display">^{i+1}a_{i+1}={^{i+1}_i}R({^{i+1}_i}a_i+{^i\dot{\omega_i}\times{^iP_{i+1}+{^i\omega_i}({^i\omega_i}\times{^iP_{i+1}}}})</script><h5 id="Acceleration-of-mass-center"><a href="#Acceleration-of-mass-center" class="headerlink" title="Acceleration of mass center"></a>Acceleration of mass center</h5><script type="math/tex; mode=display">^ia_{c_i} = {^ia_i}+{^i\dot{\omega}_i\times{^iP_{c_i}}}+{^i\omega_i}\times({^i\omega_i\times {^iP_{c_i}}})</script><h4 id="5-2-Iteration-of-force-and-torque"><a href="#5-2-Iteration-of-force-and-torque" class="headerlink" title="5.2 Iteration of force and torque"></a>5.2 Iteration of force and torque</h4><script type="math/tex; mode=display">^if_i={^iF_i}+{^i_{i+1}R{^{i+1}}f_{i+1}}</script><script type="math/tex; mode=display">^in_i={^i_{i+1}R^{i+1}n_{i+1}}+{^iN_i} + {^iP_{c_i}}\times{^iF_i} + {^iP_{i+1}}\times {^i_{i+1}R^{i+1}f_{i+1}}</script><p>In static force, the joint torque can be derived via the torque applied to adjacent one by link on the $\hat{Z}$ component.</p><script type="math/tex; mode=display">\tau={^in^T_i}{^i\hat{Z}_i}</script><hr><h2 id="Unitree-Gazebo"><a href="#Unitree-Gazebo" class="headerlink" title="Unitree Gazebo"></a>Unitree Gazebo</h2><p>Previously, I tried once fore. But, at that time, I was in a hurry and barely had time to read the instructions thoroghouly.</p><p>The main problem was about the SKD called <em>unitree_ros_to_real</em>, in which the <em>legged_msgs</em> is required for simulating model A1, but I’ve been having isssues compiling the other one designed for manipulating real robots. </p><p>I was not aware of this, and the simplest solution was to remove that package.</p><p>Kinda dumb.</p><p>So, according to the offical <code>readme.md</code></p><blockquote><p>Robots and joints controller can be loaded in Gazebo, in order to perform low-level control (e.g. torque, position and angular velocity of the joints), while the high-level control, namely wakling is not supported.</p></blockquote><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><ul><li>ROS Melodic or Kinetic</li><li>Gazebo</li><li>unitree_legged_msgs: It’s a package under <code>unitree_ros_to_real</code></li></ul><h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><p>For Melodic</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-controller-interface  ros-melodic-gazebo-ros-control ros-melodic-joint-state-controller ros-melodic-effort-controllers ros-melodic-joint-trajectory-controller</span><br></pre></td></tr></table></figure><p>In the file <code>unitree_gazebo/worlds/stairs.world</code>. At the end:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>model:///home/unitree/catkin_ws/src/unitree_ros/unitree_gazebo/worlds/building_editor_models/stairs<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Change the path of <code>building_editor_models/stairs</code> to real path.</p><p>Then use catkin_make to build:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><h4 id="unitree-ros-to-real"><a href="#unitree-ros-to-real" class="headerlink" title="unitree_ros_to_real"></a>unitree_ros_to_real</h4><ul><li>Basic message function: <code>unitree_legged_msgs</code></li><li>The interface between ROS and real robot: <code>unitree_legged_real</code></li></ul><h5 id="Build-1"><a href="#Build-1" class="headerlink" title="Build"></a>Build</h5><p>Download the package, throw it in to source directory and then</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/ws</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><h4 id="unitree-legged-sdk"><a href="#unitree-legged-sdk" class="headerlink" title="unitree_legged_sdk"></a>unitree_legged_sdk</h4><p>It’s really strange that the different versions of SDK supports different product.</p><h5 id="Dependencies-1"><a href="#Dependencies-1" class="headerlink" title="Dependencies"></a>Dependencies</h5><ul><li>Boost</li><li>CMake</li><li>g++</li></ul><h5 id="Build-2"><a href="#Build-2" class="headerlink" title="Build"></a>Build</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h3 id="One-more-thing"><a href="#One-more-thing" class="headerlink" title="One more thing"></a>One more thing</h3><p>Remember to <code>source</code> the <code>workspace</code> in order to get things linked.</p><h3 id="Details-of-Packages"><a href="#Details-of-Packages" class="headerlink" title="Details of Packages"></a>Details of Packages</h3><h4 id="The-description-of-robots"><a href="#The-description-of-robots" class="headerlink" title="The description of robots"></a>The description of robots</h4><p>It contains the description of Go1, A1, Aliengo and Laikago, including mesh, urdf and xacro files of robot.</p><p>Model can be checked by</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch model_description model_rviz.launch</span><br></pre></td></tr></table></figure><h4 id="unitree-legged-controll"><a href="#unitree-legged-controll" class="headerlink" title="unitree_legged_controll"></a>unitree_legged_controll</h4><p>It contains the joints controllers for Gazebo simulation, which allows users to control joints with position, velocity and torque. </p><p>Refer to <code>unitree_ros/unitree_controllers/src/servo.cpp</code> for joint control examples in different modes.</p><h4 id="unitree-gazebo-amp-unitree-controller"><a href="#unitree-gazebo-amp-unitree-controller" class="headerlink" title="unitree_gazebo &amp; unitree_controller"></a>unitree_gazebo &amp; unitree_controller</h4><p>Launch gazebo simulation with the following command</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch unitree_gazebo normal.launch rname:=a1 wname:=stairs</span><br></pre></td></tr></table></figure><h4 id="Stand-controller"><a href="#Stand-controller" class="headerlink" title="Stand controller"></a>Stand controller</h4><p>After launching the gazebo, you can start to control the robot:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun unitree_controller unitree_servo</span><br></pre></td></tr></table></figure><p>External disturbances is also available</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun unitree_controller unitree_external_force</span><br></pre></td></tr></table></figure><h4 id="Position-and-pose-publisher"><a href="#Position-and-pose-publisher" class="headerlink" title="Position and pose publisher"></a>Position and pose publisher</h4><p>Here we demonstrated how to control the position and pose of robot without a controller, which should be useful in SLAM or visual development.</p><p>Then run the position and pose publisher in another terminal:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun unitree_controller unitree_move_kinetic</span><br></pre></td></tr></table></figure><p>The robot will turn around the origin, which is the movement under the world coordinate frame. And inside of the source file move_publisher.cpp, we also provide the method to move using the robot coordinate frame. You can change the value of <code>def_frame</code> to <code>coord::ROBOT</code> and run the catkin_make again, then the <code>unitree_move_publisher</code> will move robot under its own coordinate frame.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Things are getting clearer now.</summary>
    
    
    
    <category term="Robotics" scheme="https://redbowtie.github.io/categories/Robotics/"/>
    
    
    <category term="Quadruped" scheme="https://redbowtie.github.io/tags/Quadruped/"/>
    
  </entry>
  
  <entry>
    <title>END of the 3rd year</title>
    <link href="https://redbowtie.github.io/2022/06/29/YEAR3/"/>
    <id>https://redbowtie.github.io/2022/06/29/YEAR3/</id>
    <published>2022-06-29T01:05:04.000Z</published>
    <updated>2022-06-30T02:27:30.752Z</updated>
    
    <content type="html"><![CDATA[<p>So, it’s glad that I got my laptop again. <span id="more"></span></p><p>It has been a long time, I tried to summarize the past three years but the macbook got locked accidentally before I could have done anything. It was like suffering without it. Being savvy enough to set a more complex firmware password, but at the same time being careless to forget about it. That’s really funny.</p><p>And there’s a lot more that I’d like to say. Those thoughts were mostly lost in time I suppose, albeit they unlocked laptop in just one day.</p><p>So, what have I done in the past three years? Have I made the right choice? Not sure for now.</p><p>So far, the topics have been focused on two main part - actuators and automatic control theories. The fundamental basics of the former is the circuit analysis, and then about the magenet, its field and different kinds of motors. As for the latter, more about mathematics, the behaviour of the system, phase portrait, all kinds of controls and blah, blah. </p><p>In short, that could be all the important part. But this could be too short. The most complex control task that I dealt with is the double inverted pendulum. so the thing here is that, the controlled input is directly applied to be the cart under an ideal condition, which is, no need to consider how the force could be generated. So, this is actually how the problem should be split. So far the control of actuators have been simple and I currently have no way to achieve desired level of performance.</p><p>OK, I think I’ve got more clue now.</p><p>See if I could think of anything else in the following days.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;So, it’s glad that I got my laptop again.</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Configuring CLION for STM32 development</title>
    <link href="https://redbowtie.github.io/2022/03/29/CLIONSTM32/"/>
    <id>https://redbowtie.github.io/2022/03/29/CLIONSTM32/</id>
    <published>2022-03-29T15:32:00.000Z</published>
    <updated>2023-06-28T14:04:15.864Z</updated>
    
    <content type="html"><![CDATA[<p>Finally. it really took longer than I expected to figure it out. <span id="more"></span></p><div class="alert success no-icon"><p><em>Reference</em>: <a href="https://zhuanlan.zhihu.com/p/145801160">配置CLion用于STM32开发【优雅の嵌入式开发】- Peng Zhihui</a></p></div><p>I suppose the outline is a imitation of his article. I’ll try to form my own one in the future.</p><hr><!--toc--><hr><h2 id="N-Prologue"><a href="#N-Prologue" class="headerlink" title="N. Prologue"></a>N. Prologue</h2><p>You may assume it’s not necessary, but I just like to continue from where I left.</p><p>Well the main reason is that I simply uses MacOS more. Yeah, despite the fact that I have a physical WINDOWS machine, but it’s like 10 meters away from me. Just very ridiculous considering I need to run over to see the board myself to get some feedback every time. So that’s a no.</p><p><strong><em>CLION</em></strong> have pretty much everything a modern IDE should have, with nice plugin support. <strong><em>Keil</em></strong> is just a little.. out of date, as least to me.</p><p>With in the process, I’ve met some problems without direct answer, each one took me approximately a day to solve. As relavant search results including MacOS is limited and most of which weren’t published recently, and it seems that they didn’t encounter the similar situation.</p><hr><h2 id="I-Env-and-tools"><a href="#I-Env-and-tools" class="headerlink" title="I. Env and tools"></a>I. Env and tools</h2><h4 id="Env"><a href="#Env" class="headerlink" title="Env:"></a>Env:</h4><ul><li>MacOS - Intel based</li></ul><h4 id="Packages"><a href="#Packages" class="headerlink" title="Packages:"></a>Packages:</h4><ul><li>STM32CubeMX</li><li>CLION</li><li>OpenOCD</li><li>Arm-none-eabi-gcc</li><li>Homebrew</li></ul><h4 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware:"></a>Hardware:</h4><ul><li>A 3-rd Party STM32F103RCT6</li><li>A ST-LINK/V2</li></ul><h3 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h3><ol><li><h5 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h5><p>Download the latest release from official website: <a href="https://www.st.com/en/development-tools/stm32cubemx.html">here</a></p></li><li><h5 id="CLION"><a href="#CLION" class="headerlink" title="CLION"></a>CLION</h5><p>Same as above: <a href="https://www.jetbrains.com/clion/">here</a></p></li><li><h5 id="OpenOCD"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a>OpenOCD</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openocd --HEAD</span><br></pre></td></tr></table></figure><blockquote><p>Please be sure to append <strong>“—HEAD”</strong>. As for the reason, check <strong>Troubleshooting - I</strong> </p></blockquote></li><li><h5 id="Arm-none-eabi-gcc"><a href="#Arm-none-eabi-gcc" class="headerlink" title="Arm-none-eabi-gcc"></a>Arm-none-eabi-gcc</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install arm-none-eabi-gcc</span><br></pre></td></tr></table></figure></li></ol><p>If brew is used, packages should be linked automatically and there’s no need to configure additional environment variables.</p><hr><h2 id="II-CLION"><a href="#II-CLION" class="headerlink" title="II. CLION"></a>II. CLION</h2><ol><li><h3 id="Set-a-new-toolchain"><a href="#Set-a-new-toolchain" class="headerlink" title="Set a new toolchain"></a>Set a new toolchain</h3><p><code>Preferences - Build, Execution, Deployment - Toolchains</code></p><p>Add a new profile with the name you would recognize.</p><p>default CMake option<code>Bundled</code> should work fine.</p><p>Set <code>C/C++ Compiler</code>,<code>Debugger</code> into corresponding ones which you may find at where <code>arm-none-eabi-gcc</code> is.</p><p><img src="/images/CLIONSTM32/0.png" alt="toolchain"></p></li><li><h3 id="Set-a-new-CMake-profile"><a href="#Set-a-new-CMake-profile" class="headerlink" title="Set a new CMake profile"></a>Set a new CMake profile</h3><p>Create a new one with previous toolchain.</p><p><img src="/images/CLIONSTM32/1.png" alt="CMake"></p></li><li><p>Create a <code>STM32CubeMX</code> project.</p></li><li><p>Click on the <code>*.ioc</code> file, then proceed with <code>Open with STM32CubeMX</code></p></li></ol><h2 id="III-STM32CubeMX"><a href="#III-STM32CubeMX" class="headerlink" title="III.  STM32CubeMX"></a>III.  STM32CubeMX</h2><p>Just take turns.</p><ol><li><h3 id="Download-MCU-Packages"><a href="#Download-MCU-Packages" class="headerlink" title="Download MCU Packages"></a>Download MCU Packages</h3><p>If you were the first time open this software, this window may pop up, just select the series you need. In my case, it’s <code>STM32F1 Series</code>.</p></li><li><h3 id="Select-the-corresponding-MCU"><a href="#Select-the-corresponding-MCU" class="headerlink" title="Select the corresponding MCU"></a>Select the corresponding MCU</h3><p>The default one should be different with what you got.</p><p><img src="/images/CLIONSTM32/3.png" alt="3"></p></li><li><h3 id="Switch-to-tab-Project-Manager"><a href="#Switch-to-tab-Project-Manager" class="headerlink" title="Switch to tab - Project Manager"></a>Switch to tab - Project Manager</h3><p><img src="/images/CLIONSTM32/4.png" alt="4"></p><p>Make sure the <code>project name</code> and <code>project location</code> matches info in CLION.</p><p><del>Select SW4STM32  in  Toolchain/IDE.</del> ( Not that necessary, in new version the default works fine)</p></li><li><h3 id="Click-Generate-Code-on-upper-right-corner"><a href="#Click-Generate-Code-on-upper-right-corner" class="headerlink" title="Click Generate Code on upper right corner"></a>Click Generate Code on upper right corner</h3><p>Before doing so, remember to assign correct properties to pinouts.</p><p>And be sure to do this every time you changed some thing in STM32Cube.</p></li></ol><h3 id="Additional-Infomation"><a href="#Additional-Infomation" class="headerlink" title="Additional Infomation"></a>Additional Infomation</h3><p>In some other tutorial, one suggest</p><ul><li>In the same tab above, make sure <code>SYS - Debug</code> is <code>Serial Wire</code>.  This is for the convenience of all the following operations.</li></ul><p>(I’m <strong>not sure</strong> what is the exact effect of the following modification.)</p><ul><li><del>Change the <code>HCLK(MHz)</code> to 72 in <code>Clock Configuration</code></del><ul><li>Don’t do this if you’re not clear what you’re doing, see <strong>Troubleshooting - II</strong></li></ul></li><li>Toggle <code>Generate peripheral initialization as a pair of ‘.c/.h’ file per peripheral</code> in <code>Project Manager - Code Generator</code>.</li><li>Change <code>High Speed Clock</code> in <code>Pinout &amp; configuration</code> into <code>Crystal/Ceramic Resonator</code></li></ul><hr><h3 id="IV-OpenOCD"><a href="#IV-OpenOCD" class="headerlink" title="IV. OpenOCD"></a>IV. OpenOCD</h3><p>Heading back to CLION, a pop up window may apper suggest you to select <code>Board Config Files</code></p><p>Because I’m using a 3-rd party board, so <code>Cancel</code>  first. But you may use a existing one if it matches.</p><ol><li><h3 id="Before-the-following-operations"><a href="#Before-the-following-operations" class="headerlink" title="Before the following operations"></a>Before the following operations</h3><p>Maybe check if CMake returns any error first.</p><p>If it does, check the previous steps. But be sure that you are using the right profile.</p><p>Click circled button to refresh.</p><p><img src="/images/CLIONSTM32/6.png" alt="6"></p><p>And on the upper right corner, the icon of hammer, triangle and bug, correspond with <code>Compile</code>, <code>Flash</code> and <code>Debug</code></p><p><img src="/images/CLIONSTM32/5.png" alt="5"></p><p>Click on hammer, considering nothing is added to the code. You should have the following info.</p><p><img src="/images/CLIONSTM32/7.png" alt="7"></p><p>It’s a little different from those shown in other tutorials, no number percentage, no blue characters suggesting the <code>hex</code> and <code>bin</code> files are being built.</p><p>Despite of this, you should be able to find these two files under the <code>workspace - xxx-arm-xxx</code> directory.</p></li><li><h3 id="Config-file"><a href="#Config-file" class="headerlink" title="Config file"></a>Config file</h3><p>Using CLION to flash and debugging, and actually, you are doing so via <code>OpenOCD</code></p><p>The mentioned <code>*.cfg</code> file is necessary for OpenOCD to operate.</p><p>Create a folder inside <code>workspace</code> or some other place you like. Then create a new file <code>SomeName.cfg</code> with the following content ( for ST-link )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># choose st-link/j-link/dap-link etc.</span></span><br><span class="line"><span class="comment"># adapter driver cmsis-dap</span></span><br><span class="line"><span class="comment"># transport select swd</span></span><br><span class="line"><span class="built_in">source</span> [find interface/stlink.cfg]</span><br><span class="line">transport select hla_swd</span><br><span class="line"><span class="built_in">source</span> [find target/stm32f1x.cfg]</span><br><span class="line"><span class="comment"># download speed = 10MHz</span></span><br><span class="line">adapter speed 10000</span><br></pre></td></tr></table></figure><p>Of course, after observing provided cfg files in <code>installedLocation\openocd\scripts</code></p><ul><li>Board - Configuration of some certified board</li><li>Interface - Configuration of debugger</li><li>Target - MCU configuration</li></ul><p>It’s clear that the first line determines the interface and type, while the following are MCU type and download speed.</p><blockquote><p>Maybe it’s better not to add <code>reset_config sirs_only</code>, which may cause flash to fail</p></blockquote></li><li><h3 id="Debug-Configuration"><a href="#Debug-Configuration" class="headerlink" title="Debug Configuration"></a>Debug Configuration</h3><p>Drag down the menu beside the <strong>hammer</strong> icon, select <code>Edit Configurations</code>.</p><p><img src="/images/CLIONSTM32/8.png" alt="8"></p><p>Browse and select the right cfg file.</p><p>The whole thing should be ready to go.</p></li></ol><hr><p>Besides, when in debug session, <code>Peripheral</code>, you may load <code>*.svd</code> files to check registers in detail. <code>SVD files</code> can be found on <a href="https://github.com/posborne/cmsis-svd">github</a> or just google it.</p><p><img src="/images/CLIONSTM32/12.png" alt="12"></p><hr><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><div class="alert danger no-icon"><h3 id="I-SEGFAULT-when-running-opened-f-cfg"><a href="#I-SEGFAULT-when-running-opened-f-cfg" class="headerlink" title="I. SEGFAULT when running opened -f *.cfg"></a>I. <strong>SEGFAULT</strong> when running <strong>opened -f *.cfg</strong></h3></div><h4 id="It-all-started-here"><a href="#It-all-started-here" class="headerlink" title="It all started here:"></a>It all started here:</h4><p><img src="/images/CLIONSTM32/9.png" alt="9"></p><ul><li>When trying to flash the <code>*.bin</code> file, OpenOCD’s output info stopped after showing <code>Info: Clock speed 10000 kHz</code>.</li></ul><p>The screenshot taken is with the latest version, only for demonstration.</p><p>It actually quite strange, considering there’s <strong>no other error</strong> messages anymore. </p><h4 id="Checking-ST-LINK"><a href="#Checking-ST-LINK" class="headerlink" title="Checking ST-LINK"></a>Checking ST-LINK</h4><p>At first I doubt that if it was <code>ST-LINK</code>‘s problem, and maybe it’s related to firnware versions. As it’s a second-handed one, and last owner said that it had been eating dust for quite a while.</p><h5 id="Firmware"><a href="#Firmware" class="headerlink" title="Firmware"></a>Firmware</h5><p>Gladly, firmware update is available on MacOS. <a href="https://www.st.com/en/development-tools/stsw-link007.html">Check here</a></p><p>Using terminal commands to open, but be sure to get into the <code>System Preferences</code>, allow relavant dynamic library to run.</p><h5 id="Drive"><a href="#Drive" class="headerlink" title="Drive"></a>Drive</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ st-info --probe</span><br></pre></td></tr></table></figure><p>This command is used to detect info of connected board. If it cannot detect anything, maybe try to reconnect the pins ?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ st-flash write .../*.bin 0x8000000</span><br></pre></td></tr></table></figure><p>With this, you can flash built <code>bin</code> into the board, fully isolated from <code>openocd</code>.</p><p>For more usage, check the help message after input only <code>st-flash</code>, it provides sufficient examples.</p><p><img src="/images/CLIONSTM32/10.png" alt="10"></p><blockquote><p> The simple program works fine, so the problem is not on ST-LINK’s side.</p></blockquote><h3 id="Checking-OpenOCD"><a href="#Checking-OpenOCD" class="headerlink" title="Checking OpenOCD"></a>Checking OpenOCD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openocd [-f interface/stlink.cfg](optinal) -f ../var/yourProfile.cfg</span><br></pre></td></tr></table></figure><p>And <strong>bingo.</strong></p><p>This time, at least it returns an <code>SEGFAULT</code> error message.</p><p>With additional <code>-d</code> parameter, it can return more debug info, but not quite useful for finding the exact problem.</p><p>At first I thought it was related to the <code>serial</code>, as in terminal, previous index has a value behind it, but not this one.</p><p>After some searching, I found an issue on <a href="https://github.com/libusb/libusb/issues/928"><strong>github</strong> </a>, so my guess is wrong, but coindidentally it leads me to the right clue (actually only because it’s in the debugger info, that’s just it).</p><p><img src="/images/CLIONSTM32/11.png" alt="11"></p><p>Thanks to <strong>mcuee</strong>, he got into it and analyze the problem thoroughly. It was due to the minor changes in the interface of <code>libusb</code>, and, <code>OpenOCD</code> releases it’s major update in a slow pace. The latest one was in Feb, 2021. So what happens next is predictable. </p><p>OpenOCD fixed this issue in the later updates, but without making it as an release version. So the fix was like the presented above, pull the latest source code from github and compile it is the only solution.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install openocd --HEAD</span><br></pre></td></tr></table></figure><hr><div class="alert danger no-icon"><h3 id="II-Unexpected-behaviour-when-flashing-but-ran-properly-in-debugging"><a href="#II-Unexpected-behaviour-when-flashing-but-ran-properly-in-debugging" class="headerlink" title="II. Unexpected behaviour when flashing, but ran properly in debugging."></a>II. Unexpected behaviour when flashing, but ran properly in debugging.</h3></div><p>So I tried to toggle LED on and off with in the <code>while loop</code>, but the <code>*.bin</code> file seems to have something wrong.</p><ul><li>Either perform the first line then stop forever.</li><li>Or, stop running at where <code>HAL_DELAY</code> is.</li></ul><p>And strangely, when using <code>debug mode</code></p><ul><li>The while loop repeats perfectly without <code>HAL_DELAY</code>. </li></ul><p>Remembering the last time I said that <code>ST-LINK</code> flashing was functional?</p><p>So I suspect it has something to do with <strong>compiling.</strong></p><p>And <code>HAL_DELAY</code> interrupting <code>Debug session</code> seems to be a known issue, but it should not be the same in terms of flashing. So currently not a clue.</p><blockquote><p><strong>Good news:</strong></p><p>​    After create a new project and repeat the previous step, this problem is gone.</p><p>​    Previously, the direct reason was that the process hangs on <code>Systick_handler()</code>.</p><p>​    And sometimes “connect while holding reset” is really helpful.</p><p><strong>Bad news:</strong></p><p>​    Still have no clue on what exactly caused this.</p><ul><li>Change of <code>Clock Speed </code>?<ul><li>Likely, remember that if after inputing the numbers and STM32CubeMX suggest that there’s no valid solution, don’t hit yes.</li></ul></li><li><del>Accidentally change some of the source code in other files ?</del><ul><li>Maybe not</li></ul></li></ul></blockquote><p>- End on 31 Mar. 2022</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Finally. it really took longer than I expected to figure it out.</summary>
    
    
    
    <category term="Trick" scheme="https://redbowtie.github.io/categories/Trick/"/>
    
    
    <category term="STM32" scheme="https://redbowtie.github.io/tags/STM32/"/>
    
    <category term="CLION" scheme="https://redbowtie.github.io/tags/CLION/"/>
    
  </entry>
  
  <entry>
    <title>Mathematical Basics of the System Theory PART III</title>
    <link href="https://redbowtie.github.io/2022/03/23/MathofSysT_III/"/>
    <id>https://redbowtie.github.io/2022/03/23/MathofSysT_III/</id>
    <published>2022-03-23T11:32:00.000Z</published>
    <updated>2022-05-11T00:41:03.277Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--></p><h2 id="Prac-8-Linearization-of-Plants-and-System-Models"><a href="#Prac-8-Linearization-of-Plants-and-System-Models" class="headerlink" title="Prac 8. Linearization of Plants and System Models"></a>Prac 8. Linearization of Plants and System Models</h2><p>Examples about finding quilibrium position</p><p>Good old <code>controllability</code> and <code>observability</code></p><h3 id="Assignment-discussion"><a href="#Assignment-discussion" class="headerlink" title="Assignment discussion"></a>Assignment discussion</h3><h4 id="Representation-of-the-derivative-by-the-ratio-of-finite-small-increments"><a href="#Representation-of-the-derivative-by-the-ratio-of-finite-small-increments" class="headerlink" title="Representation of the derivative by the ratio of finite small increments"></a>Representation of the derivative by the ratio of finite small increments</h4><p>The recurrent notaion</p><script type="math/tex; mode=display">x(k+1)=(I+A\triangle t)x(k)+(B\triangle t)u(k),\ y(k)=Cx(k).</script><p>Transfer function “input - output”</p><script type="math/tex; mode=display">W(s)=\frac{b_1 s+b_0}{(a_4 s+a_3)(a_2 s^2+a_1 s+a_0)}</script><p>Assume that after substitution values of parameters we get:</p><script type="math/tex; mode=display">W(s,q)=\frac{\frac{1}{4}s+\frac{1}{16}}{s^2+\frac{3}{4}s+\frac{1}{4}}\\A =\left[\begin{array}{c,c}0&1\\-0.25&-0.75\end{array}\right],B=\left[\begin{array}{c}0\\1\end{array}\right],C=\left[\begin{array}{c,c}0.0625&0.25\end{array}\right]</script><p>Write matrices $\bar{A},\bar{B},\bar{C}$ for the value of the sample time interval $\triangle t = 0.05s $</p><script type="math/tex; mode=display">\bar{A}\approx I+A\triangle t\\\bar{B}\approx B\triangle t\\\bar{C}=C</script><h4 id="Integral-model-of-the-continuous-time-plant-in-the-“input-output”-form"><a href="#Integral-model-of-the-continuous-time-plant-in-the-“input-output”-form" class="headerlink" title="Integral model of the continuous-time plant in the “input-output” form"></a>Integral model of the continuous-time plant in the “input-output” form</h4><script type="math/tex; mode=display">e^{A\triangle t}=\sum_{i=1}^\infty \frac{1}{i!}(A\triangle t)^i</script><p>Confine to the first k members as you wish.</p><script type="math/tex; mode=display">\bar{A} =e^{A\triangle t}\\\bar{B}=(e^{A\triangle t}-I)A^{-1}B\\\bar{C}=C</script><hr><h2 id="Lec-11-Controllability-and-Observability"><a href="#Lec-11-Controllability-and-Observability" class="headerlink" title="Lec 11. Controllability and Observability"></a>Lec 11. Controllability and Observability</h2><p>Purpose of control: we need a plant to behave the way to achieve some goal or perform some function</p><p>In order to control a plant (a device or a process) we create a system which includes control and measuring devices.</p><p>A <strong>control system</strong> is an interconnection of components forming a system configuration that will provide a desired system response.</p><h3 id="Stability"><a href="#Stability" class="headerlink" title="Stability"></a>Stability</h3><p>Definition (stability). Stability is a system property, in the presence of which the initial deviation of the dynamic process from its desired course decreases over time.</p><p><strong>Definition</strong> <strong>(stability condition).</strong> A system, regardless of its continuous or discrete nature, will be stable provided that the unforced response of the state vector and the output will decrease over time, and in the case of asymptotic stability tend to zero.</p><h3 id="Controllability"><a href="#Controllability" class="headerlink" title="Controllability"></a>Controllability</h3><p>Consider the problem of existence of a control that can transfer the system from the initial state $x_0(t)=x(t_0)$ to any other desired location $x_f(t)=x(t_f)$ in a finite time.</p><h3 id="Observability"><a href="#Observability" class="headerlink" title="Observability"></a>Observability</h3><p>Observability refers to the problem of the state vector estimation. It means that we need to determine if it is possible to find the state vector at the time $t_0$ if the control $u(t)$ and output $y(t)$ , $t\in[t_0,t_1],\ t_1&gt;t_0$ are measured.</p><h2 id="Prac-9-Autonomous-system-Phase-portraits"><a href="#Prac-9-Autonomous-system-Phase-portraits" class="headerlink" title="Prac 9. Autonomous system, Phase portraits"></a>Prac 9. Autonomous system, Phase portraits</h2><p>Consider the system</p><script type="math/tex; mode=display">\dot{x}(t)=Ax(t)+bu(t)</script><p>Find the solution of equation written as</p><script type="math/tex; mode=display">\dot{x}(t)-Ax(t)=bu(t)</script><p>To do this, multiply both parts by the matrix exponent $e^{-At}$</p><script type="math/tex; mode=display">e^{-At}\dot{x}(t)-Ae^{-At}x(t)=e^{-At}bu(t)\\\frac{d}{dt}(e^{-At}x(t))=-Ae^{-At}x(t)+e^{-At}\dot{x}(t)\\=e^{-At}bu(t)</script><p>Integrate</p><script type="math/tex; mode=display">e^{-At}x(t)=x(0)+\int_0^t e^{-A\tau}bu(\tau)d\tau\\x(t)=e^{At}x(0)+e^{At}\int_0^t e^{-A\tau}bu(\tau)d\tau</script><p>$e^{At}x(0)$ - unforced (free) component of the movement depends only on the initial conditions</p><p>And the rest, it the forced component.</p><h3 id="Algo-for-constructing-a-phase-portrait"><a href="#Algo-for-constructing-a-phase-portrait" class="headerlink" title="Algo for constructing a phase portrait"></a>Algo for constructing a phase portrait</h3><ol><li>Find the eigenvalues of the state matrix <em>A</em> by solving the auxiliary equation</li><li>Determine the type of the equilibrium point and the character of stability.</li><li>Find the equations of the isoclines:</li></ol><p>Vertical: $\frac{dx_1}{dt}=a_{11}x_1+a_{12}x_2$</p><p>Horizontal: $\frac{dx_x}{dt}=a_{21}x_1+a_{22}x_2$</p><ol><li><p>If the equilibrium position is a node or a saddle, it is necessary to compute the eigenvectors and draw the asymptotes parallel to the eigenvectors and passing through the origin.</p></li><li><p>Schematically draw the phase portrait. Show the direction of motion along the phase trajectories (this depends on the stability or instability of the equilibrium point).</p></li></ol><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;Back on the topic again</summary>
    
    
    
    <category term="Term6" scheme="https://redbowtie.github.io/categories/Term6/"/>
    
    
    <category term="System Theory" scheme="https://redbowtie.github.io/tags/System-Theory/"/>
    
    <category term="Math" scheme="https://redbowtie.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Computer Vision PART I</title>
    <link href="https://redbowtie.github.io/2022/03/23/ComputerVision_I/"/>
    <id>https://redbowtie.github.io/2022/03/23/ComputerVision_I/</id>
    <published>2022-03-23T10:32:00.000Z</published>
    <updated>2022-03-27T09:18:24.906Z</updated>
    
    <content type="html"><![CDATA[<p>I have complicated feelings about CV <span id="more"></span></p><p>Only because that the previous courses are more detailed on the general view, hope this part may change a aspect. I wish to know more about real implementation, rather than well-packaged MATLAB function.</p><h2 id="Lec-1-Intro"><a href="#Lec-1-Intro" class="headerlink" title="Lec 1. Intro"></a>Lec 1. Intro</h2><p>More topic than ever.</p><p>The part for segmentation is earlier while in practice, it seems regular.</p><p>And again with many detailed requirements on report.</p><h2 id="Distance-measurement"><a href="#Distance-measurement" class="headerlink" title="Distance measurement"></a>Distance measurement</h2><h3 id="Disparity-map"><a href="#Disparity-map" class="headerlink" title="Disparity map:"></a><strong>Disparity map:</strong></h3><p> for each pixel in the <em>left picture</em> with coordinates $(x_0,y_0)$,<br> a pixel is searched for in the right picture with coordinates $(x_0-d,y_0)$ .</p><ul><li><p>Z  - distance</p></li><li><p>f - focal length</p></li><li><p>L - base length</p></li><li><p>D - disparity</p></li><li><p>x’ and x’’ - coordinates of the object in the image plane in the right and left pictures of the stereo pair, respectively.</p><script type="math/tex; mode=display">Z=\frac{f\cdot L}{x'-x''}=\frac{f\cdot L}{d}</script></li><li></li></ul><h2 id="Some-packages-and-notations"><a href="#Some-packages-and-notations" class="headerlink" title="Some packages and notations"></a>Some packages and notations</h2><p>No need to recite I suppose, nothing particular.</p><hr><h2 id="Lec-2-Segmentation"><a href="#Lec-2-Segmentation" class="headerlink" title="Lec 2. Segmentation"></a>Lec 2. Segmentation</h2><h3 id="Scoping"><a href="#Scoping" class="headerlink" title="Scoping"></a>Scoping</h3><ul><li>Selection of connected areas on binary images<ul><li>Neighbourhood:<ul><li>Coss : 4-connectivity</li><li>Square: 8-connectivity</li></ul></li></ul></li></ul><p>The connected area of the image is the area (a set of points):</p><ul><li>all points of which have the same value;</li><li>between any two points from the given area there is a continuous path consisting of points that also belong to the given area and are “neighbors” at the same time.</li></ul><h4 id="Available-algo-for-selecting"><a href="#Available-algo-for-selecting" class="headerlink" title="Available algo for selecting"></a>Available algo for selecting</h4><ol><li>Forest fire (Y&amp;U collision forms possible).</li><li>Two pass algo (avoid collision)</li></ol><h4 id="Segmentation"><a href="#Segmentation" class="headerlink" title="Segmentation"></a><strong>Segmentation</strong></h4><p>Dividing an image into non-overlapping areas, each of which is represented by a color or texture of the same type.</p><p><em>R</em> – is the entire area of the frame. Segmentation is the process of partitioning <em>R</em> into such a setofconnectedregions 𝑅! ,𝑖=1,…,𝑛,thatthefollowingbasicconditionsaremetfor them:</p><ul><li>$R=\cup R_{i=1,\dots,n}$ – splitting areas completely cover the frame;</li><li>$R_i\cap R_j=\phi,\forall i\ne j$ – the partitioning areas do not intersect in pairs;</li><li>$Pred(𝑅_i) = 𝑇𝑅𝑈𝐸, 𝑖 = 1, … , 𝑛$, where Pred(𝑅) is the Boolean homogeneity predicate of the area;</li><li>$Pred(𝑅_i\cup R_j)=FALSE,\forall i\ne j $ – the pairwise union of any two regions of the given partition does not satisfy the same homogeneity condition.</li></ul><p><strong>Merging areas:</strong></p><ul><li><p>Perform presegmentation of the image into “starting” areas using a non- iterative (single) method.</p></li><li><p>Determine the criterion for the merging of two neighboring regions.</p></li><li><p>Iteratively find and merge all pairs of neighboring regions that satisfy the</p><p>merge criterion.</p></li><li><p>If no pair of candidates for union is found, stop and exit the algorithm.</p></li></ul><p><strong>Splitting of regions</strong></p><ul><li><p>The partitioning begins with the representation of the entire image as a simple area, which does not always meet the uniformity condition.</p></li><li><p>During the segmentation process, the current areas of the image are sequentially split in accordance with the specified uniformity conditions.</p><p>The methods of merging and splitting areas do not always lead to the same segmentation results, even if they use the same homogeneity criterion.</p></li></ul><h3 id="Basic-Image-Segmentation-Methods"><a href="#Basic-Image-Segmentation-Methods" class="headerlink" title="Basic Image Segmentation Methods"></a>Basic Image Segmentation Methods</h3><ol><li><h4 id="Threshold-image-segmentation-by-brightness-levels"><a href="#Threshold-image-segmentation-by-brightness-levels" class="headerlink" title="Threshold image segmentation by brightness levels"></a>Threshold image segmentation by brightness levels</h4><p><strong>The main issue</strong> is the definition of the segmentation threshold.</p></li><li><h4 id="Range-Threshold-Segmentation"><a href="#Range-Threshold-Segmentation" class="headerlink" title="Range Threshold Segmentation"></a>Range Threshold Segmentation</h4><p>Instead of threshold, we use a range to discriminate.</p></li><li><h4 id="Multithreshold-segmentation"><a href="#Multithreshold-segmentation" class="headerlink" title="Multithreshold segmentation"></a>Multithreshold segmentation</h4><p>Instead of single range, we use multiple ones.</p></li><li><h4 id="k-means-segmentation-algorithm"><a href="#k-means-segmentation-algorithm" class="headerlink" title="k-means segmentation algorithm"></a>k-means segmentation algorithm</h4><blockquote><p><strong>1. Specify the number of classes</strong> <em>k</em> into which the image should be divided. All pixels are considered as a set of vectors $x_i,\ i=1,\dots,p$.</p><p><strong>2. Determine </strong>k<strong>-vectors </strong>𝑚”,𝑗=1,…,𝑘, which are declared as initial centers of clusters. Choose the values 𝑚” , 𝑗 = 1, … , 𝑘 (for example, randomly).</p><p><strong>3. Update the values</strong> of the mean vectors 𝑚”,𝑗=1,…,𝑘,(clustercenters).For this:</p><pre><code>* calculate the distance from each $x_i,\ i=1,\dots,p$ to each $m_j,\ j=1,\dots,k$* assign each $x_i$ to the cluster j*, the distance to the center of which mj* is minimal* recalculate the average values mj for all clusters</code></pre><p><strong>4.</strong> <strong>Repeat 2,3</strong> until the cluster centers stop changing.</p></blockquote></li><li><h4 id="Weber-segmentation-algo"><a href="#Weber-segmentation-algo" class="headerlink" title="Weber segmentation algo"></a>Weber segmentation algo</h4><p>See page 17/39</p><p><strong>Weber principle:</strong> a person does not distinguish between gray levels between [𝐼(𝑛),𝐼(𝑛) +𝑊(𝐼(𝑛))].</p></li><li><h4 id="Iterative-algo-of-Vezhnevets"><a href="#Iterative-algo-of-Vezhnevets" class="headerlink" title="Iterative algo of Vezhnevets"></a>Iterative algo of Vezhnevets</h4><p>See page 19/39</p></li><li><h4 id="Segmentation-by-skin-color"><a href="#Segmentation-by-skin-color" class="headerlink" title="Segmentation by skin color"></a>Segmentation by skin color</h4><p><strong>Advantages:</strong> skin color is independent of face orientation; pixel color analysis is computationally efficient.</p><p><strong>Task:</strong> finding a criterion for evaluating the proximity of the color of each pixel to the skin tone.</p><p><strong>Development of skin color model</strong>:</p><ol><li><p>Accumulation of training data using images that indicate “skin” and “non-skin” areas.</p><p>Based on this data, statistics of skin tones are accumulated.</p></li><li><p>Processing of the obtained statistics and selection of skin color model parameters for subsequent use; selection of criteria for evaluating whether pixels belong to the “skin” area;</p></li><li><p>Image processing using the obtained criteria.</p></li></ol></li></ol><h3 id="Texture-Segmentation"><a href="#Texture-Segmentation" class="headerlink" title="Texture Segmentation"></a>Texture Segmentation</h3><h4 id="Approaches-to-texture-segmentation"><a href="#Approaches-to-texture-segmentation" class="headerlink" title="Approaches to texture segmentation:"></a><strong>Approaches to texture segmentation:</strong></h4><ol><li><strong>Statistical</strong> - allows you to characterize the texture of the area as smooth, rough and grainy.</li><li><p><strong>Structural</strong> - define and describe the relative position of the simplest repeating image elements, for example, segments of parallel lines passing at a constant step, cells on a chessboard.</p></li><li><p><strong>Spectral.</strong></p></li></ol><h4 id="Segmentation-by-the-morphological-watershed-method"><a href="#Segmentation-by-the-morphological-watershed-method" class="headerlink" title="Segmentation by the morphological watershed method"></a>Segmentation by the morphological watershed method</h4><p>A grayscale image is a digital terrain model, where the brightness values are heights relative to a certain level, i.e. image is a matrix of heights.</p><ul><li>If it rains on such an area, many pools are formed. Water fills small pools, then overflows from overflowing pools and the pools combine into larger pools according to the heights of the water level.</li><li>The places where pools merge are marked as watershed lines. As a result, the entire area may be flooded.</li><li>The result of segmentation depends on the moment when the water supply stops. If the process is stopped early, the image will be segmented into small areas, if it is stopped late, into very large ones.</li></ul><h3 id="Area-Detectors"><a href="#Area-Detectors" class="headerlink" title="Area Detectors"></a>Area Detectors</h3><h4 id="IBR-detector-Intensity-extrema-based-regions"><a href="#IBR-detector-Intensity-extrema-based-regions" class="headerlink" title="IBR detector (Intensity-extrema based regions)"></a>IBR detector (Intensity-extrema based regions)</h4><p>It is necessary to go from the points of the local brightness extremum 𝐼$ along the rays, calculating some value 𝑓.</p><p>As soon as the peak of the value 𝑓 is found, it is necessary to stop. This point will be the boundary of the region.</p><script type="math/tex; mode=display">f(t)=\frac{|I(t)-I_0|}{\frac{1}{t}\int_0^t|I(t)-I_0|dt}</script><p>The areas on a pair of similar images may differ, so we describe ellipses around them. If the ellipses are turned into circles, then we get complete similarity up to rotation.</p><h4 id="MSER-detector-Maximally-Stable-Extreme-Regions"><a href="#MSER-detector-Maximally-Stable-Extreme-Regions" class="headerlink" title="MSER detector (Maximally Stable Extreme Regions)"></a>MSER detector (Maximally Stable Extreme Regions)</h4><p>Solves the problem of invariance of keypoints when scaling.</p><p><strong>MSER detector algorithm</strong>:</p><ol><li><p>Sort the set of all image pixels in ascending/descending order of intensity.</p></li><li><p>Construction of a pyramid of connected components. For each pixel of the sorted set, perform the following sequence of actions:</p><ul><li><p>updating the list of points included in the component;</p></li><li><p>updating the areas of the next components, as a result of which the pixels of the</p><p>previous level will be a subset of the pixels of the next level.</p></li></ul></li><li><p>For all components, search for local minima (we find pixels that are present in this component, but are not part of the previous ones). The set of local level minima corresponds to the extreme region in the image.</p></li></ol><h2 id="Lec-3-Hough-Transform"><a href="#Lec-3-Hough-Transform" class="headerlink" title="Lec 3.  Hough Transform"></a>Lec 3.  Hough Transform</h2><h3 id="1-Voting-points-method"><a href="#1-Voting-points-method" class="headerlink" title="1.  Voting points method"></a>1.  Voting points method</h3><p><strong>Idea:</strong> finding locus of points satisfying the given criteria, then find the intersection of locus</p><p><em>Locus is a set of points</em> <em>whose location satisfies the specified conditions</em></p><blockquote><ol><li><p><strong>Generalization of the method:</strong></p><ul><li><p>Points of each circle “voted” in favor of the possible position of the vertex</p></li><li><p>There are two “votes” at the intersection of the circles; in this case, this</p><p>point “won”, since it gained the maximum number of “votes”</p></li><li><p>The rest of the points of the plane received zero or one “ vote ”</p></li><li><p>The shape of the “voting curve” is determined by a priori knowledge about the voting object (in the example, the sides of the triangle are given)</p></li></ul></li><li><p>vertex is located in the circles intersection area)</p></li></ol></blockquote><p>• <strong>Task:</strong> detection of a circle of known radius in a binary set of points</p><p>• <strong>Solution</strong>:</p><ul><li>The set of centers of all circl es of radius 𝑅 passing through each point forms a circle of radius 𝑅 around that point</li></ul><ul><li><p>The locus of the points is a circle of the same size with the center at</p><p>the voting point</p></li><li><p>The best solution for finding the position of the center of a circle</p><p>with given radius is the intersection point of the maximum number of voting circles</p></li></ul><h3 id="2-Hough-transform-for-stright-lines"><a href="#2-Hough-transform-for-stright-lines" class="headerlink" title="2. Hough transform for stright lines"></a>2. Hough transform for stright lines</h3><p><strong>The classic Hough Transform</strong> (HT) was proposed in 1962 for finding lines in a binary</p><p>image.</p><p><strong>Idea:</strong> convert the set of points to a parameter space</p><ul><li><p>Let a straight line can be defined as</p><p>𝑌 = 𝑘𝑋 + 𝑏 </p><p>𝑋cosθ + 𝑌sinθ = ρ</p></li><li><p>Since a straight line on a plane is characterized by two parameters, the parameter space has the dimension 𝑛 = 2</p></li><li><p>The classical Hough transform uses parameters (𝜌, 𝜃)</p></li><li><p>Let the contour image be the set of points (𝑥, 𝑦) in the original space 𝐸 = (𝑋, 𝑌)</p></li><li><p>The set of lines passing through each point (𝑥, 𝑦) can be depicted as a set of points</p><p>(𝜌, 𝜃) in the space {𝜌, 𝜃}</p></li><li><p>The function of mapping a point in Hough space is called a “<em>response function</em>”</p></li></ul><blockquote><ul><li><strong>Genera idea of the method</strong></li><li>For each point of the parameter space, the number of votes given for it is summed up (<em>the number of points in the source image space that generate response in the parameter space that passes through a given point</em> (𝜌, 𝜃))</li><li>Each point of the source space generates a sinusoidal response function in the parameter space</li><li>Any two sinusoids in the parameter space intersect at the point <em>(</em>𝜌, 𝜃<em>)</em> only if the point of the source image space which generated them lie on a straight line</li></ul></blockquote><h4 id="Properties-of-the-Hough-transform"><a href="#Properties-of-the-Hough-transform" class="headerlink" title="Properties of the Hough transform"></a><strong>Properties of the Hough transform</strong></h4><ul><li>The Hough transform is i<strong>nvariant to translation, scaling, and rotation</strong></li><li>Since straight lines under any projective transformations of three-dimensional space always pass only into straight lines (in the degenerate case, into points), so the Hough transform makes it possible to detect lines invariantly not only to planar affine transformations, but also to the group of projective transformations in 3D space</li></ul><h4 id="Transformation-efficiency"><a href="#Transformation-efficiency" class="headerlink" title="Transformation efficiency"></a><strong>Transformation efficiency</strong></h4><ol><li>Under projective transformations, the straight line always turns into a straight line; therefore, the parameters space of low dimension (𝑛 = 2) is formed</li><li>Each pixel of the source image is processed only once, and further calculations are performed only for pixels that carry useful information (i.e., outline). The fewer the number of pixels that have the useful information, the higher is the computational efficiency</li></ol><h4 id="Disadvantages-of-Hough-transform"><a href="#Disadvantages-of-Hough-transform" class="headerlink" title="Disadvantages of Hough transform:"></a><strong>Disadvantages of Hough transform:</strong></h4><ol><li>Manual selection of phase space sampling</li><li>Noise leads to blurring of maxima</li><li>Evenly spaced points can lead to random peaks in the parameters space</li><li>Missing parts of source image data results in blurry values in the accumulator</li></ol><h4 id="Optimization-of-the-Hough-transform"><a href="#Optimization-of-the-Hough-transform" class="headerlink" title="Optimization of the Hough transform"></a><strong>Optimization of the Hough transform</strong></h4><ol><li><p><strong>Filter the unnecessary features:</strong> for lines it is worth taking points at the</p><p>edges only with a large gradient</p></li><li><p><strong>Choose the correct grid resolution</strong> (sampling step):<br> <strong>Too rough:</strong> several close lines will vote for same cell<br> <strong>Too shallow:</strong> can skip lines because noisy points will vote for different cells</p></li><li><p>To beter find the maxima, you can smooth the values in the accumulator</p></li><li><p><strong>It is necessary to mark the votes:</strong> which point corresponds to which line</p></li></ol><p>In order not to enumerate all possible angles, the effect of the gradient can be taken into an account. Since when detecting the contour, the value of the gradient has already been calculated</p><h4 id="Methods-for-parametrizing-the-straight-lines"><a href="#Methods-for-parametrizing-the-straight-lines" class="headerlink" title="Methods for parametrizing the straight lines"></a><strong>Methods for parametrizing the straight lines</strong></h4><p>As is known, images in digital systems are defined on a discrete rectangular grid, which allows only some appropriate discrete parameterization of the family of straight lines.</p><p>Consider the natural set of straight lines generated by an integer grid 𝑁×𝑁 of points containing     $𝑁^2$ elements.</p><p>Any two different points of the lattice define a line, so the size of the set will be$𝑁^2(𝑁^2−1)$ lines.</p><p>Many lines will be defined multiple times by their different line segments if they contain more than two points of the original grid.</p><h4 id="Ways-to-parameterize-the-Hough-transform"><a href="#Ways-to-parameterize-the-Hough-transform" class="headerlink" title="Ways to parameterize the Hough transform"></a><strong>Ways to parameterize the Hough transform</strong></h4><p><strong>1. Perimeter points (</strong>𝒎<strong>,</strong> 𝒏<strong>)</strong></p><ul><li><p>Lines are described by a pair of end points lying on the perimeter of the 𝑁×𝑁 grid.</p></li><li><p>Obviously, the number of points will be equal to 4𝑁 or (taking into account</p><p>symmetry) 1/2 Q 4𝑁×4𝑁 = 8𝑁$ lines</p></li><li><p>Since a quarter of these points lie on the same straight line (side of the square), the</p><p>final size of the parameter array will be 6𝑁$<br> <strong>Advantage:</strong> Application in the case of an image divided into smaller areas makes it easy to connect lines passing through several such areas, since they close to each other along the perimeter<br> <strong>Disadvantage:</strong> information about the angular position of straight lines is not explicitly stored</p></li></ul><p><strong>2. Perimeter point and angle</strong> 𝒂, 𝒏</p><ul><li>One point of intersection of the straight line with the grid perimeter 𝑛(0 ≤ 𝑛 &lt; 𝑁) is used</li><li>andanangledefinedbytheperimeterpoint𝑎 (–𝑁+1≤𝑎≤𝑁−1) sothat straight line passing through the grid center and point 𝑎 is parallel to a given one</li><li>The accumulator array contains 4$𝑁^2$ elements</li></ul><p><strong>3. Tilt and offset</strong> 𝒂, 𝒅</p><ul><li><p>The angle 𝑎 is defined by the direction of a line from the grid center to a perimeter point</p></li><li><p>The displacement of the line vertically or horizontally from the center is fixed using the distance from the center to the intersection of the straight line with the 𝑂у or 𝑂х axes</p></li><li><p>Generates 3$𝑁^2$ or 4$𝑁^2$ accumulator cells</p></li><li><p>The 𝑎, 𝑑 -parametrization is closely related to the (ρ, θ) - parametrization and with</p><p>the parameters of the equation 𝑦 = 𝑎𝑥 + 𝑏, where 𝑎 is interpreted as the slope of a straight line</p></li></ul><h3 id="3-Hough-transform-for-circles"><a href="#3-Hough-transform-for-circles" class="headerlink" title="3. Hough transform for circles"></a>3. Hough transform for circles</h3><ul><li><p>The described algorithm can work in exactly the same way when to detect any curve that can be described on the plane by a finite number of parameters: 𝐹 =$(𝑎_1,𝑎_2,…,𝑎_n,𝑥,𝑦)$</p></li><li><p>In the previously considered problem of finding circles of a given radius 𝑅, there was</p><p>a family of curves defined by a two-parameter equation $(𝑥 − 𝑥_0)^2+(𝑦 − 𝑦_0)^2 = 𝑅^2$</p></li><li><p>It is necessary to search for the maximum of the accumulator function 𝐴(𝑥, 𝑦) in the</p><p>parameter space (𝑥, 𝑦)</p></li><li><p>In this case, the parameter space practically coincides with the source image one</p><p>(𝑥, 𝑦)</p></li></ul><h3 id="4-Hough-transform-for-an-arbitrary-shape"><a href="#4-Hough-transform-for-an-arbitrary-shape" class="headerlink" title="4. Hough transform for an arbitrary shape"></a>4. Hough transform for an arbitrary shape</h3><h4 id="Algorithm-for-finding-circles-of-a-given-radius-on-halftone-images"><a href="#Algorithm-for-finding-circles-of-a-given-radius-on-halftone-images" class="headerlink" title="Algorithm for finding circles of a given radius on halftone images"></a><strong>Algorithm for finding circles of a given radius on halftone images</strong></h4><ol><li>Detect edge pixels that surround the perimeter of an object. A gradient operator can be used, such as the Sobel operator</li></ol><ul><li><p>Voting contour points are ones with a high gradient</p></li><li><p>For each detected edge pixel, an estimate of the position and</p><p>orientation of the contour is used to estimate the center of a circle of radius 𝑅 by moving a distance 𝑅 from the edge pixel in the direction of the normal to the contour (in the direction of the gradient vector).</p></li><li><p>Repeating this operation for each edge pixel will find a set of positions of the possible center points, which can be averaged to determine the exact location of the center</p></li><li><p>If the radius of the circle is unknown or is varying, it is necessary to include 𝑅 as an additional parameter in the parametric accumulator space</p></li><li><p>The local maxima search procedure should determine the radius as well as the position of the center by considering changes along the third dimension of the parametric space</p></li><li><p>If the size of the detected circle is out of interest and you only want to find its center, then you may not increase the dimension of the parameter space</p></li><li><p>For every possible direction to the “center”, the contour point votes with a ray in that direction.</p></li><li><p>As a result, all possible positions of the “center” will be involved at any scale of the object, which will allow searching for circles regardless of their radius</p></li></ul><ol><li>After finding the potential centers of the circles, it is necessary to find the radius of the circles with the centers at the found points</li></ol><h4 id="Analyzing-the-accumulator-function-when-searching-for-geometric-primitives"><a href="#Analyzing-the-accumulator-function-when-searching-for-geometric-primitives" class="headerlink" title="Analyzing the accumulator function when searching for geometric primitives"></a><strong>Analyzing the accumulator function when searching for geometric primitives</strong></h4><ol><li><p>Direct search for a fixed number of local maxima (one global maximum) in the parameter space. There are various ways to find such maxima</p></li><li><p>Threshold segmentation of the accumulator function and subsequent analysis of connected regions of the parameter space</p></li></ol><ul><li><p>If we chose the threshold equal to be equal to the value of the minimum of local maxima, then the second method will give the same result with the first one</p></li><li><p>The problem of the optimal choice of the threshold for a particular image remains</p></li></ul><p>Short lines (curve segments) will give relatively low peaks in accumulator function if compared to long ones. They will only be detected if it is known to be present in the image prior to setting the threshold</p><p><strong>How to avoid thresholding?</strong></p><ul><li>At each stage of the analysis, we search for single global maximum of the accumulator function</li><li>After finding the global maximum we subtract the income of all source image points that resulted in this line from the parameter space</li><li>Then start searching for the next global maximum<br> <strong>The result: a</strong> greater sensitivity to short lines and robustness to noise</li></ul><h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a><strong>Summary</strong></h4><ul><li>Hough transform modifications provide invariant detection of geometric primitives and objects in the image with a high degree of noise immunity and significant accuracy in determining the location and orientation parameters</li><li>The described algorithms do not detect grayscale objects themselves, but their outlines. Objects that do not have a well-defined outline cannot be detected using locus</li></ul><h2 id="Lec-4-Image-Features"><a href="#Lec-4-Image-Features" class="headerlink" title="Lec 4. Image Features"></a>Lec 4. Image Features</h2><h4 id="Marr-Paradigm"><a href="#Marr-Paradigm" class="headerlink" title="Marr Paradigm."></a><strong>Marr Paradigm</strong>.</h4><p>Image analysis goes from «iconic» data representation to «symbolic» representation</p><h4 id="Steps-of-image-processing"><a href="#Steps-of-image-processing" class="headerlink" title="Steps of image processing:"></a><strong>Steps of image processing:</strong></h4><ul><li>Image preprocessing</li><li>Primary image segmentation</li><li>Detecting the geometric structure</li><li>Detecting of the relative structure and semantics of the scene</li></ul><h4 id="Types-of-possible-features"><a href="#Types-of-possible-features" class="headerlink" title="Types of possible features"></a>Types of possible features</h4><p>Point, edge, erea, line, corner</p><h3 id="I-Feature-points"><a href="#I-Feature-points" class="headerlink" title="I. Feature points"></a>I. Feature points</h3><p>A feature point 𝑝 of an image 𝐼 is a point with a <strong>characteristic</strong> (special) neighborhood. This point different from all other points in a certain neighborhood</p><h3 id="II-Feature-point-detectors"><a href="#II-Feature-point-detectors" class="headerlink" title="II. Feature point detectors"></a>II. Feature point detectors</h3><h4 id="Corner-Detectors"><a href="#Corner-Detectors" class="headerlink" title="Corner Detectors"></a>Corner Detectors</h4><p><strong>Corners</strong> are well <strong>repeatable</strong> and <strong>distinguishable</strong>.<br> The main property of a corner: the image <strong>gradient</strong> has <strong>two dominant directions</strong> in the area around the corner.</p><h5 id="Moravec-Detector"><a href="#Moravec-Detector" class="headerlink" title="Moravec Detector"></a>Moravec Detector</h5><p>Measure the <strong>change in pixel intensity</strong> 𝐼 𝑥, 𝑦 by shifting a square window centered in 𝑥, 𝑦 to one pixel in each of <strong>eight principal directions</strong> (2 horizontal, 2 vertical and 4 diagonal).</p><h5 id="Sigma-Filter"><a href="#Sigma-Filter" class="headerlink" title="Sigma Filter"></a>Sigma Filter</h5><script type="math/tex; mode=display">h(x,y) = H*f(x,y)</script><p>where f - source image</p><p>H - operator of feature detection</p><p>$*$ - operation of applying the operator</p><h5 id="FAST-Detector"><a href="#FAST-Detector" class="headerlink" title="FAST Detector"></a>FAST Detector</h5><p>Features from Accelerated Segment Test<br>For each pixel 𝑃 of the image a neighbouring Bresenham circle around this pixel is considered. In case if 7x7 kernel is used, then it would contain 16 pixels.</p><p>A pixel is considered to be a corner point if it has 𝑁 adjacent pixels on the circle whose intensities satisfy the state condition 𝑑 or 𝑏.</p><h5 id="Harris-Detector"><a href="#Harris-Detector" class="headerlink" title="Harris Detector"></a>Harris Detector</h5><p>Let the variation in image intensities depend on the shift (𝑢, 𝑣). It can be evaluated according to the formula:</p><script type="math/tex; mode=display">E(u,v)=\sum w(x,y)(I(x+u,y+v)-I(x,y))^2</script><p>where 𝐼 𝑥,𝑦 – intensity in a point 𝑥,𝑦 ,<br> 𝑤(𝑥, 𝑦) – window function,<br> 𝐼(𝑥+𝑢,𝑦+𝑣) – shift of intensity.</p><ul><li><p>The window function 𝑤 (𝑥, 𝑦) can be defined either in a binary form or in the form of a Gaussian function.</p></li><li><p>By expanding the difference in intensities squared into a second-order Taylor series at the point (𝑥, 𝑦) (bilinear interpolation) for small shifts, we obtain the following approximation</p></li></ul><h6 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm:"></a><strong>Algorithm:</strong></h6><ol><li><p>Calculate the gradient of the image in each pixel.</p></li><li><p>Calculate the matrix 𝐌 from the window around each pixel.</p></li><li><p>Calculate the response of the corner 𝐑.</p></li><li><p>Cut off weak corners at threshold 𝐑.</p></li><li><p>Find the local maxima of the response function in a neighborhood</p><p>of a given radius.</p></li><li><p>Choose 𝑵 the strongest local maxima.</p></li></ol><h4 id="Forstner-Detector"><a href="#Forstner-Detector" class="headerlink" title="Forstner Detector"></a>Forstner Detector</h4><script type="math/tex; mode=display">R=\frac{det(M)}{tr(M)}</script><h4 id="Detector-Invariance"><a href="#Detector-Invariance" class="headerlink" title="Detector Invariance"></a>Detector Invariance</h4><p>• <strong>Invariance Property</strong> – If apply a geometric (affine) or photometric (affine intensity change 𝐼 → 𝑎𝐼 + 𝑏) transformation to the image, then the detector must find the same set of points.</p><ol><li>Light invariance:</li></ol><ul><li>To light shifting (𝐼 → 𝐼 + 𝑏);</li><li>To light scaling (𝐼 → 𝑎𝐼).</li></ul><ol><li>Rotation Invariance</li><li>Scaling Invariance</li></ol><h3 id="III-Blob-detectors"><a href="#III-Blob-detectors" class="headerlink" title="III. Blob detectors"></a>III. Blob detectors</h3><h4 id="LoG-Laplacian-of-Gaussian-Detector"><a href="#LoG-Laplacian-of-Gaussian-Detector" class="headerlink" title="LoG (Laplacian of Gaussian) Detector"></a><strong>LoG</strong> (Laplacian of Gaussian) Detector</h4><ul><li>Blobs are blob-shaped groups of connected pixels that share a common property and are different from surrounding regions</li><li>Blob centers are feature points</li><li>Blobs are described by 4 parameters<ul><li>center coordinates (x, y) </li><li>scale</li><li>direction</li></ul></li></ul><p><strong>Gaussian</strong> is a Gauss function which are used to blur images.</p><p>$f$ - edge</p><p>$\frac{d}{dx}g$ - Derivative of Gaussian</p><p>$f*\frac{d}{dx}g$ - Edge = maximum of derivative</p><p>$f*\frac{d^2}{dx^2}g$ - Edge = zero transition of the second derivative</p><ul><li><p>«Edge» is a burst of function</p></li><li><p>«Blob» is a combination of two bursts</p></li><li><p>The magnitude of the Laplacian of Gaussian response reaches a</p><p>maximum in the center of the blob <strong>if the size</strong> of the Laplacian “<strong>corresponds”</strong> to the size of the blob</p></li><li><p>Search for blob characteristic size: convolution with Laplacian at several scales and search for maximum response</p></li><li><p>The response of the Laplacian fades if zooming scale</p></li><li><p>Multiscale blob detector: convolution of a blurry image using the normalized Laplace filter at several scales and the choice of scale with the maximum Laplacian response.</p></li></ul><h4 id="DoG-Difference-of-Gaussians"><a href="#DoG-Difference-of-Gaussians" class="headerlink" title="DoG (Difference of Gaussians)"></a>DoG (Difference of Gaussians)</h4><p>Method for the approximate calculation of the Laplacian of a Gaussian: the search for the difference of two Gaussians with different scales:</p><script type="math/tex; mode=display">DoG=G(x,y,k\sigma)-G(x,y,\sigma)</script><h4 id="Harris-Laplace-Detector"><a href="#Harris-Laplace-Detector" class="headerlink" title="Harris-Laplace Detector"></a>Harris-Laplace Detector</h4><p>Selecting the corners in the image, considering the characteristic size: looking for points that maximize the response of the Harris corner in the image and the Laplacian response in scale.</p><h3 id="IV-Scale-invariant-feature-point-detector"><a href="#IV-Scale-invariant-feature-point-detector" class="headerlink" title="IV. Scale-invariant feature point detector"></a>IV. Scale-invariant feature point detector</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;I have complicated feelings about CV</summary>
    
    
    
    <category term="Term6" scheme="https://redbowtie.github.io/categories/Term6/"/>
    
    
    <category term="CV" scheme="https://redbowtie.github.io/tags/CV/"/>
    
    <category term="MATLAB" scheme="https://redbowtie.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>System Software PART I</title>
    <link href="https://redbowtie.github.io/2022/03/23/SystemSoftware_I/"/>
    <id>https://redbowtie.github.io/2022/03/23/SystemSoftware_I/</id>
    <published>2022-03-23T10:32:00.000Z</published>
    <updated>2023-06-28T14:07:03.346Z</updated>
    
    <content type="html"><![CDATA[<p>A course that is not concerned with MATLAB, great.<span id="more"></span></p><hr><!--toc--><hr><p>Well to be clear that I’m not meaning that MATLAB is awful, it’s just too ‘perfect’. All functions within are well encapsuled. A lack of interacting I suppose.</p><h2 id="Lec-1-Programming-in-C-language"><a href="#Lec-1-Programming-in-C-language" class="headerlink" title="Lec 1. Programming in C language"></a>Lec 1. Programming in C language</h2><h2 id="Course-structure"><a href="#Course-structure" class="headerlink" title="Course structure"></a>Course structure</h2><ul><li><p>the main tool for system programming – the C programming language;</p></li><li><p>(2) multithreaded programming with POSIX Threads;</p></li><li><p>(3) Linux operating system basics and shell;</p></li><li><p>(4) regular expression language.</p></li></ul><p>I have to admit that after seeing this, I’m super excited. Just right about what I wanted to learn.</p><h2 id="System-software"><a href="#System-software" class="headerlink" title="System software"></a>System software</h2><p>is a set of software that is a platform for the development and operation of other programs. For example, these are operating systems such as Windows, Linux, utilities (chmod, ipconfig, grep), game engines, programming tools</p><p>Layers can be seen at page 3.</p><h2 id="Multithreaded-programming"><a href="#Multithreaded-programming" class="headerlink" title="Multithreaded programming"></a>Multithreaded programming</h2><p>Multithreaded programming means program organization that can execute parallel operations (threads) in one process.</p><h2 id="Introduction-of-Linux-an-C"><a href="#Introduction-of-Linux-an-C" class="headerlink" title="Introduction of Linux an C"></a>Introduction of Linux an C</h2><p>Just as name suggest.</p><p>Some showcase of Assemly language optimization </p><h2 id="Kinds-of-Typing-and-examples"><a href="#Kinds-of-Typing-and-examples" class="headerlink" title="Kinds of Typing and examples"></a>Kinds of Typing and examples</h2><p><strong>Static typing -</strong> checking the correctness of expressions occurs at the compilation stage.</p><p><strong>Dynamic typing</strong> - works at run time.</p><p><strong>Strong typing</strong> means that we cannot perform operations on data that could lead to run-time errors due to data inconsistency or incompatibility.</p><p><strong>Weak typing</strong> allows the ability to implicitly convert data from type to type.</p><p><strong>Explicit typing</strong> − we explicitly specify data types.</p><p><strong>Implicit typing</strong> – the compiler itself can determine the data type from the expression.</p><blockquote><p>OCaml – static and strong-typed programming language</p><p>float + float</p><p> int + int</p><p>40 + 2.0 – error</p><p>Java – static and strong-typed programming language, BUT</p><p>40 + 2.0 = 42.0 //compiler automatically casts 40 (integer) to 40.0 (double)</p><p>Python – dynamic and strong-typed, duck-typed</p><p>Duck-typing means that variables are untyped, but objects (data) are has data types.</p><p>x = 1.0 + 2 #it is okay</p><p>JavaScript – dynamic and weakly-typed </p><p>x = ‘1’ + 1; //x has value ’11’ (string).</p></blockquote><p>As for grammer of the C, I think I’m pretty familiar with most of common ones, for which I’ll pass.</p><p>But sometimes I gotta remember the corresponding notations in English.</p><hr><h2 id="Lec-2-As-above"><a href="#Lec-2-As-above" class="headerlink" title="Lec 2. As above"></a>Lec 2. As above</h2><p>Focus on </p><ul><li>pointers</li><li>memory allocation / leakage</li><li>Directives</li><li>Some utilities</li></ul><hr><h2 id="Lec-3-Posix"><a href="#Lec-3-Posix" class="headerlink" title="Lec 3. Posix"></a>Lec 3. Posix</h2><blockquote><p>It’s a part of <strong>network programming.</strong></p><p>Thread is a single sequential <strong>flow</strong> of control within a program</p></blockquote><h3 id="Pros-and-Cons-of-Multithreading"><a href="#Pros-and-Cons-of-Multithreading" class="headerlink" title="Pros and Cons of Multithreading"></a>Pros and Cons of Multithreading</h3><ul><li>Pros<ul><li>Programming abstraction</li><li>Parallelism</li><li>Improving responsiveness</li><li>Blocking I/O<ul><li>Multiplexed I/O</li><li>Nonblocking Reads</li><li>Asynchronous I/O</li></ul></li><li>Context switching</li><li>Saving memory</li></ul></li></ul><h4 id="Cost-of-Multithreading"><a href="#Cost-of-Multithreading" class="headerlink" title="Cost of Multithreading"></a>Cost of Multithreading</h4><p>Limitation of the performance growth <code>$S_p$</code> of a computing system with an increase in the number of processors <code>$p$</code></p><script type="math/tex; mode=display">S_p=\frac{1}{\alpha+\frac{1-\alpha}{p}}</script><p>where, $S_p=Speedup$, $a=\frac{seqential}{sequential+parrallel}$,</p><h3 id="Threading-models"><a href="#Threading-models" class="headerlink" title="Threading models"></a>Threading models</h3><p>There are several approaches to the implementation of multithreading in a system with varying degrees of functionality provided by the kernel in user space.</p><ul><li>User threads : managed without kernel support</li><li>Kernel threads : managed directly by OS</li><li>Relationship b/w user and kernel thread<ul><li>Many-to-one model</li><li>One-to-one model</li><li>Many-to-many model</li></ul></li></ul><ol><li><h4 id="Kernel-level-threading"><a href="#Kernel-level-threading" class="headerlink" title="Kernel-level threading"></a>Kernel-level threading</h4><p>Simplest. One-to-one.</p></li><li><h4 id="User-level-threading"><a href="#User-level-threading" class="headerlink" title="User-level threading"></a>User-level threading</h4><p>Contra the first one. Many-to-one model.</p></li><li><h4 id="Hybrid-threading"><a href="#Hybrid-threading" class="headerlink" title="Hybrid threading"></a>Hybrid threading</h4><p>Many to many. combines preivous advantages, native threading support.</p></li><li><h4 id="Coroutines-and-Fibers"><a href="#Coroutines-and-Fibers" class="headerlink" title="Coroutines and Fibers"></a>Coroutines and Fibers</h4><p>They provide a unit of execution even lighter in weight than the thread.  For them scheduling and execution almost does not require user space support. They’re scheduled together, requiring only a clear transition from one to another.</p><p>They’re more needed to control program execution than to execute parallelism.</p></li></ol><h3 id="Threading-Patterns"><a href="#Threading-Patterns" class="headerlink" title="Threading Patterns"></a>Threading Patterns</h3><ul><li><h4 id="Thread-per-Connection"><a href="#Thread-per-Connection" class="headerlink" title="Thread-per-Connection"></a>Thread-per-Connection</h4><p>one thread is assigned to one execution item.</p><p>This thread is assigned to no more than one work item throughout all the work</p></li><li><h4 id="Event-Driven-Threading"><a href="#Event-Driven-Threading" class="headerlink" title="Event-Driven Threading"></a>Event-Driven Threading</h4><p>Event-driven approach can separate threads from connections, which only use threads for events on specific callbacks or handlers.</p></li></ul><h3 id="Race-Conditions"><a href="#Race-Conditions" class="headerlink" title="Race Conditions"></a>Race Conditions</h3><p>A race condition occurs when two or more threads can access shared data and they try to change it at the same time. Because the thread scheduling algorithm can swap between threads at any time, you don’t know the order in which the threads will attempt to access the shared data. Therefore, the result of the change in data is dependent on the thread scheduling algorithm, i.e. both threads are “racing” to access/change the data.</p><blockquote><p>So, thread  safety needs to be ensured.</p></blockquote><h3 id="Synchronization"><a href="#Synchronization" class="headerlink" title="Synchronization"></a>Synchronization</h3><p>The fundamental source of races is that critical regions are a window during which correct program behavior requires that threads do not interleave execution. To prevent race conditions, then, the programmer needs to synchronize access to that window, ensuring <strong>mutually exclusive access</strong> to the critical region.</p><p>In computer science, we say that an operation (or set of operations) is <strong>atomic</strong> if it is indivisible, unable to be interleaved with other operations. To the rest of the system, an atomic operation (or operations) appears to occur instantaneously. And that’s the problem with <strong>critical regions</strong>: they are not indivisible, they don’t occur instantaneously, they <strong>aren’t atomic</strong>.</p><h3 id="Mutexes-mutually-exclusive-access"><a href="#Mutexes-mutually-exclusive-access" class="headerlink" title="Mutexes - mutually exclusive access"></a>Mutexes - mutually exclusive access</h3><p>Only one person (thread) can enter the room (resource) if he has a key (lock).</p><p>There is only one key.  So at the same time only one thread can get the resource.</p><h3 id="Deadlocks"><a href="#Deadlocks" class="headerlink" title="Deadlocks"></a>Deadlocks</h3><p>A <strong>deadlock</strong> is a situation in which two threads are waiting for each other to finish, and thus neither does. In the case of mutexes, a deadlock occurs if two threads are both waiting for a different mutex, which the other thread holds. </p><blockquote><p><strong>POSIX</strong> <strong>Threads</strong></p><ul><li><strong>pthread</strong> POSIX standard tells us how threads should work on UNIX OS</li></ul><p><strong>important</strong> <strong>calls</strong>:</p><ul><li><strong>pthread_create</strong> : Create a new thread; analogous to fork</li><li><strong>pthread_exit</strong> : Terminating the calling thread. Analogous to exit , has return value</li><li><strong>pthread_join</strong> : Wait for another thread to exit. Analogous to wait - the caller cannot proceed other thread exists</li><li><strong>pthread_yield</strong> : Release the CPU, let another thread run.</li><li><strong>pthread_attr_init</strong> : Create and initialize a thread’s attributes. Contains info like priority of thread</li><li><strong>pthread_attr_destroy</strong> : Remove a thread’s attributes. Free up the memory holding the attribute info.</li><li><strong>pthread_cancel</strong> : Signal cancellation to a thread. Can be asynchronous or deferred, depending on thread attributes</li></ul><p>The <strong>pthread</strong> API is defined in <pthread.h>. Every function in the API is prefixed by pthread_. For example, the function to create a thread is called pthread_create(). <strong>Pthread</strong> <strong>functions</strong> may be broken into two large groupings:</p><p><strong>Thread management</strong></p><p>Functions to create, destroy, join, and detach threads.</p><p><strong>Synchronization</strong></p><p>Functions to manage the synchronization of threads, including mutexes, condition variables, and barriers.</p></blockquote><h3 id="Creating-threads"><a href="#Creating-threads" class="headerlink" title="Creating threads"></a>Creating threads</h3><p>When your program is first run and executes the main() function, <strong>it is single threaded</strong>. Indeed, other than the compiler enabling some <strong>thread safety options</strong> and the <strong>linker linking in the Pthreads library</strong>, your process isn’t any different from any other. From this initial thread, sometimes called the <strong>default or master thread</strong>, you must create one or more additional threads to become multithreaded.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_create</span> <span class="params">(<span class="type">pthread_t</span> *thread</span></span><br><span class="line"><span class="params">                   <span class="type">const</span> <span class="type">pthread_attr_t</span> *attr,</span></span><br><span class="line"><span class="params">                   <span class="type">void</span> *(*start_routine)(<span class="type">void</span> *),</span></span><br><span class="line"><span class="params">                   <span class="type">void</span> *arg)</span>;</span><br></pre></td></tr></table></figure><h3 id="Terminating-Threads"><a href="#Terminating-Threads" class="headerlink" title="Terminating Threads"></a>Terminating Threads</h3><p>Threads may terminate under several circumstances, all of which have analogues to process termination:</p><blockquote><p><em>If a thread returns from its start routine, it terminates. This is akin to “falling off the end” of main().</em></p><p><em>If a thread invokes the</em> <em>pthread_exit**() function (discussed subsequently), it</em> <em>terminates. This is akin to calling exit().</em></p><p><em>If the thread is canceled by another thread via the</em> <em>pthread_cancel**() function, it terminates. This is akin to being sent the SIGKILL signal via kill().</em></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Terminating the current thread</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pthread_exit</span><span class="params">(<span class="type">void</span> *retval)</span>;</span><br></pre></td></tr></table></figure><p>Upon invocation, the calling thread is terminated. retval is provided to any thread waiting on the terminating thread’s death, similar to exit().</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Terminating other threads</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_cancel</span> <span class="params">(<span class="type">pthread_t</span> thread)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_setcancelstate</span><span class="params">(<span class="type">int</span> state, <span class="type">int</span> *oldstate)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_setcanceltype</span><span class="params">(<span class="type">int</span> type, <span class="type">int</span> *oldtype)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>On success, pthread_ cancel() returns zero. </p><p>On error, pthread_cancel() returns ESRCH, indicating that thread was invalid.</p><p>Threads can change their state via pthread_set cancelstate():</p><p>Threads can change their type via pthread_setcanceltype():</p></blockquote><h3 id="Joining-thread"><a href="#Joining-thread" class="headerlink" title="Joining thread"></a>Joining thread</h3><p><em>Joining</em> allows one thread to block while waiting for the termination of another:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pthread_exit</span><span class="params">(<span class="type">void</span> *retval)</span>;</span><br></pre></td></tr></table></figure><h3 id="Detaching-threads"><a href="#Detaching-threads" class="headerlink" title="Detaching threads"></a>Detaching threads</h3><p>By default, threads are created as <em>joinable</em>. Threads may, however, <em>detach</em>, rendering them no longer joinable. Because threads consume system resources until joined, just as processes consume system resources until their parent calls wait(), threads that you do not intend to join should be detached.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pthread_detach</span><span class="params">(<span class="type">pthread_t</span> thread)</span>;</span><br></pre></td></tr></table></figure><h3 id="Initializing-mutexes"><a href="#Initializing-mutexes" class="headerlink" title="Initializing mutexes"></a>Initializing mutexes</h3><p>Mutexes are represented by the pthread_mutex_t object. Like most of the objects in the Pthread API, it is meant to be an opaque structure provided to the various mutex interfaces. Although you can dynamically create mutexes, most uses are static:  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">pthread_mutex_t</span> mutex = PHTHREAD_MUTEX_INITIALIZER;</span><br></pre></td></tr></table></figure><h3 id="Locking-Unlocking-mutexes"><a href="#Locking-Unlocking-mutexes" class="headerlink" title="Locking / Unlocking mutexes"></a>Locking / Unlocking mutexes</h3><p>Locking (also called acquiring) a Pthreads mutex is accomplished via the pthread_mutex_lock() function,</p><p>The counterpart to locking is unlocking, or releasing, the mutex. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_mutex_lock</span> <span class="params">(<span class="type">pthread_mutex_t</span> *mutex)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">pthread_mutex_unlock</span> <span class="params">(<span class="type">pthread_mutex_t</span> *mutex)</span>;</span><br></pre></td></tr></table></figure><h3 id="Conditional-variable"><a href="#Conditional-variable" class="headerlink" title="Conditional variable"></a>Conditional variable</h3><p>Synchronization mechanisms need more than just mutual exclusion; also need a way to wait for another thread to do something (e.g., wait for a character to be added to the buffer)</p><blockquote><p>wait(condition, lock): release lock, put thread to sleep until condition is signaled; when thread wakes up again, re-acquire lock before returning.</p><p>signal(condition, lock): if any threads are waiting on condition, wake up one of them. Caller must hold lock, which must be the same as the lock used in the wait call.</p><p>broadcast(condition, lock): same as signal, except wake up all waiting threads.</p><p>Note: after signal, signaling thread keeps lock, waking thread goes on the queue waiting for the lock.</p><p>Warning: when a thread wakes up after cond_wait there is no guarantee that the desired condition still exists: another thread might have snuck in.</p></blockquote><h3 id="Wait"><a href="#Wait" class="headerlink" title="Wait"></a>Wait</h3><p>The <code>pthread_cond_wait()</code> routine always returns with the mutex locked and owned by the calling thread, even when returning an error.</p><p>This function blocks until the condition is signaled. It atomically releases the associated mutex lock before blocking, and atomically acquires it again before returning.</p><hr><p>Some additional discovery about usage of <code>*</code> in terminal if under <code>zsh</code> </p><p>Follow error will be displayed by default when <code>*</code> is used to match files or some others.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clang-tidy: No match -checks=-*,clang-analyzer-*,-clang-analyzer-cplusplus*</span><br></pre></td></tr></table></figure><p>It’s actually a limitation in <code>zsh</code>, which could save you in case you just typed  <code>rm *</code> . Surely that is dangerous.</p><p>And please, remember that <code>exit</code> works for the whole program, don’t use it in the <code>signal_handler</code> for certain thread. </p><hr><blockquote><p>[Thu Apr 7 2022, 22:54] Some toolchain support</p><p>i clang-format</p><p>i fmenezes/tap/clang-tidy</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;A course that is not concerned with MATLAB, great.</summary>
    
    
    
    <category term="Term6" scheme="https://redbowtie.github.io/categories/Term6/"/>
    
    
    <category term="System" scheme="https://redbowtie.github.io/tags/System/"/>
    
    <category term="C" scheme="https://redbowtie.github.io/tags/C/"/>
    
    <category term="Programming" scheme="https://redbowtie.github.io/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Mathematical Basics of the System Theory PART II</title>
    <link href="https://redbowtie.github.io/2022/03/21/MathofSysT_II/"/>
    <id>https://redbowtie.github.io/2022/03/21/MathofSysT_II/</id>
    <published>2022-03-21T11:32:00.000Z</published>
    <updated>2022-04-19T07:08:57.625Z</updated>
    
    <content type="html"><![CDATA[<p>Pace is weird.<span id="more"></span></p><h2 id="Lec-7-Linear-and-quadratic-forms"><a href="#Lec-7-Linear-and-quadratic-forms" class="headerlink" title="Lec 7. Linear and quadratic forms"></a>Lec 7. Linear and quadratic forms</h2><p>Recall the following concepts:</p><p>1) Scalar function of a vector<br>2) Linear and quadratic forms,<br>3) positive and negative definiteness of a quadratic form,<br>4) The rules for differentiating of matrices with respect to scalar variables, scalar and vector function of a vector argument with respect to vector variables</p><hr><h2 id="Prac-6-Properties-of-matrix-functions"><a href="#Prac-6-Properties-of-matrix-functions" class="headerlink" title="Prac 6.  Properties of matrix functions"></a>Prac 6.  Properties of matrix functions</h2><h3 id="I-Main-properties"><a href="#I-Main-properties" class="headerlink" title="I. Main properties"></a>I. Main properties</h3><ol><li>The matrix function of the matrix $f(A)$ preserves the block-diagonal form of the matrix A if A is diagonal matrix $A=diag\{a_i\}$, i.e.<script type="math/tex; mode=display">f(A)=diag\{f(a_i)\}</script>if $\sigma\{A\}=\sigma\{\lambda_1,\lambda_2,…,\lambda_n\}$ Then $\sigma\{f(A)\}=\{f(\lambda_1),f(\lambda_2),…\}$</li></ol><h3 id="2-Examples"><a href="#2-Examples" class="headerlink" title="2. Examples"></a>2. Examples</h3><blockquote><ol><li>$e^A =I+A+\frac{1}{2!}A^2+…=\Sigma\frac{1}{i!}A^i$</li><li>$cos A = 1-\frac{1}{2!}A^2 +1\frac{1}{4!}A^4 -\frac{1}{6!}+…$</li><li>$sin A = A-\frac{1}{3!}A^3 +\frac{1}{5!}A^5 +…$</li></ol></blockquote><h3 id="3-Some-facats"><a href="#3-Some-facats" class="headerlink" title="3. Some facats"></a>3. Some facats</h3><blockquote><p>$cos(2A)=2cos^2(A)-I$</p><p>$sin(2A)=sin(A)cos(A)$</p><p>$cos^2(A)+sin^2(A)=I$</p><p>$sin(A\pm B)=sin(A)cos(B)\pm cos(A)sin(B)$ IF $AB=BA$</p><p>$cos(A\pm B)=cos(A)cos(B)\mp sin(A)sin(B)$ IF $AB=BA$</p></blockquote><h3 id="4-Methods"><a href="#4-Methods" class="headerlink" title="4. Methods"></a>4. Methods</h3><ol><li><h5 id="Approximate-method"><a href="#Approximate-method" class="headerlink" title="Approximate method"></a>Approximate method</h5><script type="math/tex; mode=display">F(A)=\sum_{i=0}^m a_iA^i</script></li><li><h5 id="The-exact-method-based-on-eigenvalues"><a href="#The-exact-method-based-on-eigenvalues" class="headerlink" title="The exact method based on eigenvalues"></a>The exact method based on eigenvalues</h5><p>$\Lambda=M^{-1}AM$</p><p>Where $\Lambda=\left[\begin{array}{ccc}\lambda_1&amp;0&amp;0\\0&amp;…&amp;0\\0&amp;0&amp;\lambda_n\end{array}\right],M=[\xi_1,…,\xi_n]$</p><p>$F(A)=M^{-1} F(\Lambda)$</p></li></ol><h3 id="5-Matrix-exponent"><a href="#5-Matrix-exponent" class="headerlink" title="5. Matrix exponent"></a>5. Matrix exponent</h3><ol><li>$e^{At}=I+At+\frac{1}{2!}A^2 t^2+\frac{1}{3!}A^3 t^3+\ldots=\sum_0^\infty\frac{1}{i!}A^it^i$</li></ol><blockquote><p>Properties:</p><ol><li>if $A=0$ or $t=0$ Then $e^{At}=I$</li><li>if $AB=BA$ Then $e^{At}e^{Bt}=e^{(A+B<br>)t}$</li><li>In general case $AB\ne BA$ And $e^{At}e^{Bt}\ne e^{(A+B<br>)t}$</li><li>$e^{At}e^{A\tau}=e^{A(t+\tau)}$</li><li>$\frac{d}{dt}e^{At}=Ae^{At}=e^{At}\cdot A$</li></ol></blockquote><ol><li>For matrices of simple structure ($\lambda_i:\lambda_i\ne\lambda_j,i\ne j,Im(\lambda_i)=0,i=1\ldots n$) matrix exponent is calculated as <script type="math/tex; mode=display">e^{At}=Me^{\Lambda t}M^{-1}=M\left[\begin{array}{cccc}e^{-\lambda_1 t}&0&\ldots&0\\0&e^{-\lambda_2t}&\ldots&0\\\ldots&\ldots&\ddots&\ldots\\0&0&\ldots&e^{-\lambda_n t}\end{array}\right]M^{-1},</script>Where $\Lambda=\left[\begin{array}{ccc}\lambda_1&amp;0&amp;0\\0&amp;…&amp;0\\0&amp;0&amp;\lambda_n\end{array}\right],M=[\xi_1,…,\xi_n]$</li></ol><hr><h2 id="Lec-8-Matrix-functions-Matrix-Exponent"><a href="#Lec-8-Matrix-functions-Matrix-Exponent" class="headerlink" title="Lec 8. Matrix functions. Matrix Exponent"></a>Lec 8. Matrix functions. Matrix Exponent</h2><h3 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions:"></a>Definitions:</h3><p>Considering a square matrix A, $dim(A)=n\times n$;</p><ol><li><p>A scalar function (SFM) of a square matrix A is a function $f(A)$ That imlements the mapping.</p><script type="math/tex; mode=display">f(A):R^{n\times n}\Rightarrow R,</script><p>where $R$ is the set of real numbers.</p><p><strong>Examples:</strong> determinant, trace, norm and condition number of the matrix.</p></li><li><p>A vector function of a square matrix A is a function $f(A)$ that implements the mapping</p><script type="math/tex; mode=display">f(A):R^{n \times n}\Rightarrow R^n,</script><p>where $R^n$ is n-dimension real space.</p><p><strong>Examples:</strong> vectors which consist of elements of algebraic spectra of eigenvalues and signular values.</p></li></ol><h3 id="Matrix-series-and-matrix-functions-of-matrices"><a href="#Matrix-series-and-matrix-functions-of-matrices" class="headerlink" title="Matrix series and matrix functions of matrices"></a>Matrix series and matrix functions of matrices</h3><p>The matrix function of a matrix (MFM) implements the mapping</p><script type="math/tex; mode=display">f(A):R^{n\times n}\Rightarrow R^{n\times n}</script><ol><li>Let $f(\alpha)$ be a scalar power series (polynomial) with respect to a scalar variable $\alpha$<script type="math/tex; mode=display">f(A)=a_0+a_1\alpha+a_2\alpha^2+\ldots+a_p\alpha^p.\tag{1}</script>Then the scalar series $f(\alpha)$ generates a matrix function $f(A)$ Of the matrix A in the form of a matrix series, if in the representation $(1)$ For $f(\alpha)$ the scalar variable is replaced by the matrix $A$<script type="math/tex; mode=display">f(A)=a_0I+a_1A+a_2A^2+\ldots+a_pA^p.\tag{2}</script></li></ol><h3 id="Hamilton-Cayley-theorem"><a href="#Hamilton-Cayley-theorem" class="headerlink" title="Hamilton-Cayley theorem."></a>Hamilton-Cayley theorem.</h3><p>Square matrix $A$ with characteristic polynomial</p><script type="math/tex; mode=display">D(\lambda)=det(\lambda I-A)=\lambda^n+a_1\lambda^{n-1}+\ldots+a_{n-1}\lambda+a_n</script><p>sets its characteristic polynomial to zero so that the matrix realtion is satisfied</p><script type="math/tex; mode=display">D(A)=A^n+a_1A^{n-1}+\ldots+a_n I=0\tag{3}\\</script><p>where $0-(n\times n)$ null matrix</p><p>Using the Hamilton-Cayley theorem, we introduce the following definitions:</p><ol><li>A polynomial (power series) $\varphi(A)=0$ with respect to a scalar variable $\alpha$ is called an <strong>annihilating polynomial</strong> of a square matrix A if the condition</li></ol><script type="math/tex; mode=display">\varphi(A)=0\tag{4}</script><p>The annigilating polynomial of the matrix A, by virtue of the Hamilton-Cayley theorem, is primarily its <strong><em>characteristic polynomial.</em></strong></p><ol><li><p>The annihilating polynomial $\psi(\alpha)$ of the lest degree m with the highest coefficient at $\alpha^m$ Equal to one is called the minimal polynomial of the matrix A.</p><p>Construct expansion of the polynomial $f(a)(1)$ , which defines the matrix function of the matrix $f(A)$ in the form (2), modulo the minimal polynomial $\psi(\alpha)$ of the matrix A,</p><script type="math/tex; mode=display">f(a)=\varphi(\alpha)\psi(\alpha)+r(\alpha)\tag{5}</script><p>Where the polynomial $r(\alpha)$ has degree $deg(r(\alpha))$ Less than the degree $deg(\psi(\alpha))$ Of the minimal polynomial $\psi(a)$ of matrix A.</p></li><li><p>Let the polynomial $f(a)$ with respect to the scalar variable a be represented in the form (5), then the matrix function $f(A)$ can be written in the minial form</p><script type="math/tex; mode=display">f(A)=r(A)\tag{6}</script><script type="math/tex; mode=display">r(\alpha)=rest\frac{f(\alpha)}{\psi(\alpha)}\tag{7}</script></li></ol><h3 id="Properties-of-a-matrix-function-of-a-matrix"><a href="#Properties-of-a-matrix-function-of-a-matrix" class="headerlink" title="Properties of a matrix function of a matrix"></a>Properties of a matrix function of a matrix</h3><ol><li><p>The matrix function of the matrix $f(A)$ preserves the spectrum of eigenvalues of the matrix</p><script type="math/tex; mode=display">f(A)\xi_i=f(\lambda_i)\xi_i\tag{8}</script></li><li><p>The matrix function of the matrix $f(A)$ preserves the matrix similarity relation, i.e. if A is similar to $B(B=T^{-1}AT)$, then</p><script type="math/tex; mode=display">f(B)=T^{-1}f(A)T\tag{9}</script></li><li><p>The matrix function of the matrix $f(A)$ preserves the block-diagonal form of the matrix A if A is diagonal matrix $A=diag\{a_i\}$, i.e</p><script type="math/tex; mode=display">f(A)=diag\{f(a_i)\}\tag{10}</script></li></ol><h3 id="Main-ways-to-calculate-matrix-exponent"><a href="#Main-ways-to-calculate-matrix-exponent" class="headerlink" title="Main ways to calculate matrix exponent"></a>Main ways to calculate matrix exponent</h3><ol><li><h4 id="Numerical-way"><a href="#Numerical-way" class="headerlink" title="Numerical way"></a>Numerical way</h4><p>Based on the transition from continuous time t to discrete time k, expressed by the number of discrete intervals of duration $\triangle t, t=k(\triangle t)$</p><script type="math/tex; mode=display">e^{At}=e^{A\triangle tk}=(e^{A\triangle t})^k=(\bar{A})^k</script><script type="math/tex; mode=display">\bar{A}=I+A\triangle t+\frac{1}{2!}(A\triangle t)^2+\frac{1}{3!}(A\triangle t)^3+\ldots+\frac{1}{p!}(A\triangle t)^p</script></li><li><h4 id="Diagonalization-method-eigenvalue-method"><a href="#Diagonalization-method-eigenvalue-method" class="headerlink" title="Diagonalization method (eigenvalue method)"></a>Diagonalization method (eigenvalue method)</h4><p>It is applied to matrices of simple struture</p><script type="math/tex; mode=display">\sigma(A)=\{\lambda_i;\lambda_i\ne \lambda_j,im(\lambda_i)=0,i=1,\ldots,n\}</script><p>for which the relation</p><script type="math/tex; mode=display">M\Lambda=AM</script><p>Holds, $\Lambda=diag\{\lambda_i,i=1,\ldots,n\}$</p><script type="math/tex; mode=display">e^{At}=Me^{\Lambda t}M^{-1}=M diag\{e^{\lambda_i t,i=1},\ldots,n\}\tag{13}</script><script type="math/tex; mode=display">M=row\{M_i=\xi_i,i=1,\ldots,n\}</script><p>M is matrix of eigenvectors A</p></li><li><h4 id="Method-based-on-reduction-to-normal-Jordan-form"><a href="#Method-based-on-reduction-to-normal-Jordan-form" class="headerlink" title="Method based on reduction to normal Jordan form"></a>Method based on reduction to normal Jordan form</h4><p>Applies to matrices whose eigenvalue spectrum contains r multiple eigenvalues $\lambda_i$ of multiplicity $m_i$ each. Then the matrix similarity relation holds</p><script type="math/tex; mode=display">TJ=AT</script><script type="math/tex; mode=display">J=diag\{\left[\begin{array}{ccccc}\lambda_i&1&0&\ldots&0\\0&\lambda_i&1&\ldots&0\\.&.&.&\ldots&.\\.&.&.&\ldots&.\\0&0&0&\ldots&1\\0&0&0&\ldots&\lambda_i\end{array}\right];\sum_{i=1}^r m_i=n\}</script><p>for the matrix exponent, </p><script type="math/tex; mode=display">e^{At}=Te^{Jt}T^{-1}\tag{14}</script><script type="math/tex; mode=display">e^{Jt}=diag\{e^{J_i t}=\left[\begin{array}{ccccc}e^{\lambda_i t}&\frac{te^{\lambda_i t}}{1!}&\frac{t^2e^{\lambda_i t}}{2!}&\ldots&\frac{t^{n-1}e^{\lambda_i t}}{(m_i-1)!}\\0&e^{\lambda_i t}&\frac{te^{\lambda_i t}}{1!}&\ldots&\frac{t^{n-2}e^{\lambda_i t}}{(m_i-2)!}\\.&.&.&\ldots&.\\.&.&.&\ldots&.\\0&0&0&\ldots&\frac{te^{\lambda_i t}}{1!}\\0&0&0&\ldots&e^{\lambda_i t}\end{array}\right];\sum_{i=1}^r m_i=n\}</script></li><li><h4 id="Laplace-transform-method"><a href="#Laplace-transform-method" class="headerlink" title="Laplace transform method"></a>Laplace transform method</h4><p>Calculation of the inverse Laplace transform from the resovent $(sI-A)^{-1}$ in the form</p><script type="math/tex; mode=display">e^{At}=\mathcal{L}^{-1}\{(sI-A)^{-1}\}\tag{15}</script><p>To expand without inverting, the Faddeev-Leverrier algorithm is used based on the representation</p><script type="math/tex; mode=display">(sI-A)^{-1}=\frac{1}{det(sI-A)}[\triangle(sI-A)]^T=\frac{s^{n-1}H_0+s^{n-2}H_1+\ldots+H_{n-1}}{s^n+a_1s^{n-1}+\ldots+a_{n-1}s+a_n}\tag{16}</script><p>$(n\times n)-matrices\ H_i(i=0,\ldots,n-1)$ and coefficients of the characteristic equation are calculated using the recurrent procedure </p><script type="math/tex; mode=display">H_0=I,\ a_1=-tr(AH_0)\\H_1=AH_0+a_1I,\ a_2=-tr(AH_1)/2\\\ldots\\H_k=AH_{k-1}+a_kI,\ a_{k+1}=-tr(AH_k)/k\tag{17}</script><p>Now resolvent can be rewritten as</p><script type="math/tex; mode=display">(sI-A)^{-1}=\frac{s^{n-1}}{D(s)}H_0+\frac{s^{n-2}}{D(s)}H_1+\ldots+\frac{s}{D(s)}H_{n-2}+\frac{1}{D(s)}H_{n-1}\tag{18}</script><p>And matrix exponent takes the view</p><script type="math/tex; mode=display">e^{At}=L^{-1}\{\frac{s^{n-1}}{D(s)}\}H_0+L^{-1}\{\frac{s^{n-2}}{D(s)}\}H_1+\ldots+L^{-1}\{\frac{s}{D(s)}\}H_{n-2}+L^{-1}\{\frac{1}{D(s)}\}H_{n-1}\tag{19}</script></li><li></li></ol><h3 id="Matrix-Inversion-using-the-Hamilton-Cayley-theorem"><a href="#Matrix-Inversion-using-the-Hamilton-Cayley-theorem" class="headerlink" title="Matrix Inversion using the Hamilton-Cayley theorem"></a><strong>Matrix Inversion using the Hamilton-Cayley theorem</strong></h3><p>Matrix relation (3)</p><p>$D(A)=A^n+a_1A^{n-1}+\ldots+a_{n-1}A+a_nI=0$</p><p>which is the analytical content of the Hamilton-Cayley theorem, in the form</p><script type="math/tex; mode=display">A_n+a_1A^{n-1}+\ldots+a_{n-1}A+a_nI=0\tag{20}</script><p>Multiply (20) on the right by $A^{-1}$</p><script type="math/tex; mode=display">a_nA^{-1}+a_{n-1}I+a_{n-2}A+\ldots+a_1A^{n-2}+A^{n-1}=0\tag{21}</script><p>Solve (18) with respect to the inverse matrix</p><script type="math/tex; mode=display">A^{-1}=-(a_n)^{-1}(a_{n-1}I+a_{n-2}A+\ldots+a_1A^{n-2}+A^{n-1})\\=-(a_n)^{-1}(A^{n-1}+\sum_{i=1}^{n-1}a_iA^{n-1-i})\tag{22}</script><p>We obtained an algorithmic matrix inversion base. Matrix relation (22) has the positive property: itis insensitive to the conditionality of the inverted matrix.</p><p>The disadvantage of inverting matrices using expression (22) is the need to know the coefficients of the characteristic polynomial. Therefore, the proposed inversion procedure will not cause noticeable difficulties for the case of sparse matrices, and it is especially convenient to use it when inverting matrices given in the Frobenius form, as the coefficients of the characteristic polynomial are explicitly present in it.</p><hr><h2 id="Prac-7-Hamilton-Caylery-theorem"><a href="#Prac-7-Hamilton-Caylery-theorem" class="headerlink" title="Prac 7. Hamilton-Caylery theorem."></a>Prac 7. Hamilton-Caylery theorem.</h2><h3 id="Consequences"><a href="#Consequences" class="headerlink" title="Consequences"></a>Consequences</h3><p>Any square matrix $A(n\times n)$ with characteristic polynomial</p><script type="math/tex; mode=display">D(\lambda)=det(\lambda I-A)=\lambda^n+a_{n-1}\lambda^{n-1}+\ldots+a_0</script><p>Satisfies its own characteristic equation, i.e.</p><script type="math/tex; mode=display">D(A)=A^n+a_{n-1}A^{n-1}+\ldots+a_0 I=0</script><p>The proof of the theorem</p><script type="math/tex; mode=display">D(A)=det(AI-A)=det(A-A)=det(0)=0\\A^{-1}=-\frac{1}{a_0}(A^{n-1}+a_{n-1}A^{n-2}+\ldots+a_2A+a_1I)\\f(\lambda_k)=\lambda_k^{n-1}a_{n-1}+\ldots+a_1\lambda_k+a_01,\ k=1\ldots n\\</script><p>calculations of the matrix function can be represented as a finite sum</p><script type="math/tex; mode=display">f(A)=e^{At}=a_{n-1}(t)A^{n-1}+\ldots+a_0(t)I</script><h3 id="Interpolation"><a href="#Interpolation" class="headerlink" title="Interpolation"></a>Interpolation</h3><p>The Lagrange interpolation polynomial</p><script type="math/tex; mode=display">P(x)=\sum_{i=1}^n P_{n-1}(a_i)\frac{\prod_{s=1}^n(x-a_s)}{\prod_{s=1}^n(a_i-a_s)}, s\ne i</script><p>consider the polynomial matrix</p><script type="math/tex; mode=display">P(A)=\sum_{i=1}^n P_{n-1}(a_i)\frac{\prod_{s=1}^n(A-a_sI)}{\prod_{s=1}^n(a_i-a_s)}, s\ne i</script><p>Successive multiplications of these equalities by $\lambda^p$ and $A^p$ will give</p><script type="math/tex; mode=display">\lambda^{n+p}=A_1\lambda^{n+p-1}-A_2\lambda^{n+p-2}+\ldots+(-1)^{n-2}A_{n-1}\lambda^{p+1}+(-1)^{n-1}A_n\lambda_p;\\A^{n+p}=A_1A^{n+p-1}-A_2A^{n+p-2}+\ldots+(-1)^{n-2}A_{n-1}A^{p+1}+(-1)^{n-1}A_nA_p;</script><p>Sylvester theorem for $\lambda_i\ne \lambda_j$, $i\ne j,\ i=1,\ldots,n,\ j=1,\ldots, n$,</p><script type="math/tex; mode=display">f(A)=\sum_{i=1}^n f(\lambda_i)Z_i,\ Z_i=\frac{\prod_{s=1}^n(A-\lambda_sE)}{\prod_{s=1}^n(\lambda_i-\lambda_s)}\tag{1}</script><h3 id="The-Becker-Formula"><a href="#The-Becker-Formula" class="headerlink" title="The Becker Formula"></a>The Becker Formula</h3><script type="math/tex; mode=display">f(A)=\frac{D_{n-1}}{D}A^{n-1}+\frac{D_{n-2}}{D}A^{n-2}+\ldots+\frac{D_0}{D}E,</script><p>Where D is the Vandermonde determinant</p><p>$D_{n-1}$ - is determinant D with (n-1) - row replaced with a row</p><script type="math/tex; mode=display">(f(\lambda_1),f(\lambda_2),\ldots,f(\lambda_n)),\ i=1,\ldots,n</script><h3 id="High-degree-matrices"><a href="#High-degree-matrices" class="headerlink" title="High degree matrices"></a>High degree matrices</h3><p>Let us use the Sylvester formula to calculate $A^p$, as given in formula $(1)$</p><p>$Z_i$ Does not depoend on the p</p><script type="math/tex; mode=display">\abs{\lambda_1}>\abs{\lambda_2}>\ldots>\abs{\lambda_n}</script><p>if p is very large, then we can neglect $\lambda_2^p,\ldots,\lambda_n^p$, compared to $\lambda_1^p$</p><script type="math/tex; mode=display">A^p\approx\lambda_1^pZ_1=\prod_{s=1}^n\frac{A-\lambda_sE}{\lambda_1-\lambda_s}</script><h3 id="Fadeev-LeVerrier-algorithm"><a href="#Fadeev-LeVerrier-algorithm" class="headerlink" title="Fadeev-LeVerrier algorithm"></a>Fadeev-LeVerrier algorithm</h3><p>Any square matrix $A(n\times n)$ With characteristic polynomial</p><script type="math/tex; mode=display">p(\lambda)=det(\lambda I-A)=c_n\lambda^n+c_{n-1}\lambda^{n-1}+\dots+c_0</script><p>The <strong>Fadeev-LeVerrier</strong> algorithm is based on thje following recursion rule for matrices $B_0,\dots, B_n$ and coefficients $c_0,\dots,c_n$</p><script type="math/tex; mode=display">k=0:B_0=0,c_n=1\\k=1,\dots,n:B_k=AB_{k-1}+c_{n-k+1}I,c_{n-k}=-\frac{1}{k}tr(AB_k)</script><p>consequences</p><script type="math/tex; mode=display">c_0=p(0)=det(-A)=(-1)^ndet(A)\\c_0\ne0:A^{-1}=-\frac{1}{c_0}B_n</script><hr><h2 id="Lec-9-SISO-Models-of-Continuous-and-Discrete-Time-Systems"><a href="#Lec-9-SISO-Models-of-Continuous-and-Discrete-Time-Systems" class="headerlink" title="Lec 9. SISO Models of Continuous and Discrete-Time Systems"></a>Lec 9. SISO Models of Continuous and Discrete-Time Systems</h2><h3 id="Definitions-1"><a href="#Definitions-1" class="headerlink" title="Definitions"></a>Definitions</h3><p><strong>Mathematical model of a dynamic system</strong> is the mathemetical description of the relation ship between the variables of the system, characterizing its behaviour</p><p><strong>Mathematical model</strong> allows us to study the behaviour of the system when it is exposed to physical signals (independent variables: reference and control influences and disturbances).</p><p>A control system is an interconnection of elements forming a system configuration to provide a desired response.</p><p>System theory provides basis for analysis of a system.</p><p>The input-output relationship represents cause-and-effect relationship of the process, which in turn, represents a processing of the input signal to provide an output signal variable. </p><p>The mathematical description depends on the type of converted signals.</p><h3 id="Transformation"><a href="#Transformation" class="headerlink" title="Transformation"></a>Transformation</h3><h4 id="Continuous-time-signal-transformation"><a href="#Continuous-time-signal-transformation" class="headerlink" title="Continuous-time signal transformation:"></a>Continuous-time signal transformation:</h4><p>dynamic systems are called continuous, and differential equations are used to describe them.</p><h4 id="Discrete-time-signal-transformation"><a href="#Discrete-time-signal-transformation" class="headerlink" title="Discrete time signal transformation"></a>Discrete time signal transformation</h4><p>Discrete interval ∆𝑡 at time points 𝑡=𝑘(∆𝑡), where 𝑘 is discrete time expressed in the number of discrete intervals: dynamic systems are called discrete, recurrent (difference) equations are used to describe them.</p><h3 id="SISO"><a href="#SISO" class="headerlink" title="SISO"></a>SISO</h3><p>Consider a non linear continuous dynamic system with one input and one output, described by a nonlinear ordinary differential equation of the n-th order</p><script type="math/tex; mode=display">F(y^{(n)},y^{(n-1)},\dots,y,u^{(m)},u^{(m-1)},\dots,u,t)=0\tag{1}</script><p>If we carry out linearization of (1) and leave the dependent variables on the left side, and the independent variables on the right side, then we obtain a linear (linearized) differential equation</p><script type="math/tex; mode=display">a_0(t)y^{(n)}(t)+a_1(t)y^{(n-1)}(t)+\dots+a_n(t)y(t)=b(t)u^{(m)}(t)+\dots+b_m(t)u(t)\tag{2}</script><p><strong>Dynamic</strong> systems, mathematical models of which can be represented in the form of equation (2) are continuous linear systems. </p><p>When all the <strong>coefficients</strong> of equation (2) are constant the system is <strong>called stationary</strong></p><h3 id="Linearization-of-a-system-in-the-input-output-form-SISO"><a href="#Linearization-of-a-system-in-the-input-output-form-SISO" class="headerlink" title="Linearization of a system in the input-output form (SISO)"></a>Linearization of a system in the input-output form (SISO)</h3><p>Consider a system in form (1) and in a steady state (equilibrium position)</p><script type="math/tex; mode=display">y=y^*=const,\ u=u^*=const,</script><p>It means that </p><script type="math/tex; mode=display">F(0,0,\dots,y^*,0,0,\dots,u^*,t)=0</script><p>It is required to obtain a linearized model in the neighborhood of the equilibrium position</p><script type="math/tex; mode=display">y=y^*,\ u=u^*,\ \dot{y}=\dots=y^{(n)}=0,\ \dot{u}=\dots=u^{(m)}=0</script><p>Introduce new coordinates - deviations from the equilibrium state. Check slides for more detail.</p><h3 id="SISO-mathematical-models-of-discrete-control-systems"><a href="#SISO-mathematical-models-of-discrete-control-systems" class="headerlink" title="SISO mathematical models of discrete control systems"></a><strong>SISO mathematical models of discrete control systems</strong></h3><p>In the control system, the functions of the controller can be performed by a digital (discrete) device. Such devices are implemented in the form of microcomputers, microcontrollers, microprocessors, interfaced with digital-to-analog converters.</p><p>The input of information into a discrete device is carried out at certain time intervals, therefore, for a mathematical description and analysis of the quality of discrete systems, it is necessary to develop a special method. A discrete system operates on data obtained from a continuous signal by sampling its values at equally spaced time intervals. The result is a time sequence of data called a discrete signal. The transition from continuous time 𝑡 to discrete moments of time is carried out according to the formula 𝑡=𝑘∆𝑡, 𝑘 is an integer that takes the values 𝑘=0, 1, 2,…</p><hr><h2 id="Lec-10-MIMO-Models-of-Continuous-and-Discrete-Time-Systems"><a href="#Lec-10-MIMO-Models-of-Continuous-and-Discrete-Time-Systems" class="headerlink" title="Lec 10. MIMO Models of Continuous and Discrete-Time Systems"></a>Lec 10. MIMO Models of Continuous and Discrete-Time Systems</h2><h3 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h3><p>What are the disadvantages of Input-Output models? Why was there a request for the Input-State-Output (MIMO, State Space) model?</p><p>The class of models Input-Output historically appeared from the theory of electrical circuits. Up to a certain point, it fully satisfied the needs of developers of dynamic systems.</p><p>Let us write the Input-Output model in an explicit form:</p><script type="math/tex; mode=display">y(\nu)=\delta(u(\nu))\tag{0}</script><p>Where, $u(\nu)$ is the input funciton, $\nu$ Is continuous time t in the case of continuous objects or systems, and discrete time k in the case of discrete ones.</p><p>As the control problems become more complicated the description of systems in the Input-Output form, it was found that when using State Space models, it is much more convenient to take into account the existing physical ideas about the mechanisms of the system.</p><p>This problem was solved by parametrizing the ratio of form (0)</p><script type="math/tex; mode=display">y(\nu)=\delta(x(\nu),u(\nu))</script><p>where the parameter vector $x(\nu)$ is called the state vector (or simply the state) of the dynamic system.</p><h3 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h3><ol><li><p>The minimum set of parameters that completely removes the uncertainty of the input-output relationship of a dynamic object 𝑦(𝜈)=𝛿(𝑢(𝜈)) is called a state vector (or simply a state).</p><p>if the state of a dynamic system 𝑥(𝜈𝑠) at some moment 𝜈 = 𝜈𝑠 is known, then the response of the system at 𝜈 ≥ 𝜈𝑠 will be uniquely determined only by the state 𝑥(𝜈𝑠) and the control signal 𝑢(𝜈) at 𝜈 ≥ 𝜈𝑠.</p></li><li><p>Let us call an eight-component macrovector a dynamic system</p><script type="math/tex; mode=display">\Sigma=\{U,X,Y,\Omega,\Gamma,T,\lambda,\delta\}\tag{1}</script><p>where 𝑈 is set of instantaneous values of 𝑟 − dimensional input (control) signals 𝑈 ∈ 𝑅𝑟;</p><p>𝑋 is set 𝑛 −dimensiona states 𝑋 ∈ 𝑅𝑛;<br>𝑌 is set of instantaneous values 𝑚 − dimensional outputs;<br>Τ i set of time points forming the interval of control and observation; Ω is the set of admissible input signals;<br>Γ – set of output values;</p><p>𝜆 – system transition function from some previous state 𝑥 at the time moment</p><p>𝜏 ∈ 𝑇 to the next state 𝑥 at the time moment 𝑡 under input signal 𝑈;</p><p>𝛿 – system output function, which defines the rule for obtaining the instantaneous value of the output 𝑌 at the time moment 𝑡 ∈ 𝑇 under transition of the system from some previous state 𝑥 at the time moment 𝜏 ∈ 𝑇 under input signal 𝑈.</p><p>We will use the reduced definition of a dynamic system, omitting the description of the sets Ω and Γ , i.e. define a dynamic system as a six-component macrovector</p><script type="math/tex; mode=display">\Sigma=\{U,X,Y,T,\lambda,\delta\}\tag{2}</script></li><li></li></ol><h3 id="MIMO-Models-of-continuous-control-systems"><a href="#MIMO-Models-of-continuous-control-systems" class="headerlink" title="MIMO-Models of continuous control systems."></a><strong>MIMO-Models of continuous control systems.</strong></h3><p>Unforced and forced response of the system. Fundamental and transition matrices. Construction of MIMO-Models of continuous systems by transfer functions.</p><p>The transition functions 𝜆 and 𝛿 in continuous systems are given in the following form:</p><script type="math/tex; mode=display">\lambda:\dot{x}(t)=\lambda\{x(t),u(t)\}\tag{3}</script><script type="math/tex; mode=display">\delta:y(t)=\delta\{x(t),u(t)\}\tag{4}</script><p>Where $x\in R^n,\ y\in R^m, u\in R^r,\ \dot{x}(t)=\frac{d}{dt}x(t).$</p><p>If the rules 𝜆 and 𝛿 in the description of continuous systems can be represented as a composition of linear operations of addition and multiplication of matrices by a vector, then such systems s are linear. MIMO means multi input – multi output</p><p> For linear continuous dynamic systems, the description of the functions 𝜆 and 𝛿 takes the form</p><script type="math/tex; mode=display">\lambda:\dot{x}(t)=Ax(t)+Bu(t)\tag{5}</script><script type="math/tex; mode=display">\delta:y(t)=Cx(t)+Du(t)\tag{6}</script><p>where 𝐴 − (𝑛 × 𝑛) is state matrix, 𝐵 − (𝑛 × 𝑟) is control matrix, 𝐶 − (𝑚 × 𝑛)  matrix, 𝐷 − (𝑚 × 𝑟) is input-output matrix. In our further investigation we suppose that 𝐷 = 0.</p><h3 id="Transfer-matrix-function"><a href="#Transfer-matrix-function" class="headerlink" title="Transfer matrix (function)"></a>Transfer matrix (function)</h3><p>Let us apply the Laplace transform to equations (5), (6):</p><script type="math/tex; mode=display">sX(s)-x(0)=AX(s)+BU(s)\\Y(s)=CX(s)+DU(s)</script><p>Where $x(0)=x(t)\vert_{t=0},U(s),X(s),Y(s)$ are Laplace transform of u(t), x(t), y(t).</p><p>Resovle the resulting expressions with respect to U(s) and Y(s)</p><script type="math/tex; mode=display">Y(s)=\{C(sI-A)^{-1}B+D\}U(s)+C(sI-A)^{-1}x(0)\tag{7}</script><p>with the initial state of the control systems is zero, (7) is</p><script type="math/tex; mode=display">Y(s)=\{C(sI-A)^{-1}B+D\}U(s)=\Phi(s)U(s)</script><h3 id="Unforced-and-forced-components-of-state"><a href="#Unforced-and-forced-components-of-state" class="headerlink" title="Unforced and forced components of state"></a>Unforced and forced components of state</h3><p>Let us consider a linear continuous system described by equations (5), (6), which defined by the MIMO-model in differential form with a zero matrix 𝐷</p><script type="math/tex; mode=display">\dot{x}=Ax(t)+Bu(t),x(0)\\y(t)=Cx(t)\tag{8}</script><p>Integral form</p><script type="math/tex; mode=display">x(t)=x\{x(0),u(t),t\};\\y(t)=Cx(t)</script><p>If we use the principle of superposition, which is valid for linear systems, then we can write</p><script type="math/tex; mode=display">x(t)=x_{uf}(t)+x_f(t)</script><p>unforced and forced components, respectively, and caused by $x(0)\ne 0$, or movement generated by $u(t)\ne 0$</p><p>The general view of the integral model state space model (MIMO) of a linear continuous system takes the form eq(13), see more on slides,</p><p>$\Phi(t)$– fundamental matrix of the system<br>$\Phi(t,\tau)=\Phi(t)\Phi^{-1}(\tau)$ – transition matrix of the system<br>$w(t)=C\Phi(t,0)=C\Phi(t)B$ – weight matrix of the system</p><h3 id="Discrete-time-MIMO-models"><a href="#Discrete-time-MIMO-models" class="headerlink" title="Discrete-time MIMO-models"></a>Discrete-time MIMO-models</h3><p>A discrete system is a system in which, at least in one element, with a continuous change in the input value, the output value does not change continuously, but has the form of separate pulses that appear at certain intervals.</p><p>The functions of transition 𝜆 and of exit 𝛿 in discrete systems are given in the following form</p><script type="math/tex; mode=display">\lambda:x(k+1)=\lambda[x(k),u(k)]\\\delta:y(k)=\delta[x(k),u(k)]\tag{14}</script><p>In linear discrete system, are written in the form</p><script type="math/tex; mode=display">\left\{ \begin{array}{c}x(k+1)=\bar{A}x(k)+\bar{B}u(k)\\y(k)=\bar{C}x(k)+\bar{D}u(k)\end{array}\right.\tag{16}</script><p>A discrete system makes sampling with an interval of duration ∆𝑡 from the state and output variables of a continuous dynamic process. State variables between sampling moments change in accordance with the integral state model of a continuous system, output variables change according to the same law, and input (control) variables between sampling moments are fixed at the level of values at the previous sampling moment.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Pace is weird.</summary>
    
    
    
    <category term="Term6" scheme="https://redbowtie.github.io/categories/Term6/"/>
    
    
    <category term="System Theory" scheme="https://redbowtie.github.io/tags/System-Theory/"/>
    
    <category term="Math" scheme="https://redbowtie.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Ballkid Vol.1</title>
    <link href="https://redbowtie.github.io/2022/03/21/Ballkid/"/>
    <id>https://redbowtie.github.io/2022/03/21/Ballkid/</id>
    <published>2022-03-21T10:32:00.000Z</published>
    <updated>2022-11-11T09:50:50.504Z</updated>
    
    <content type="html"><![CDATA[<p>?<span id="more"></span></p><p>The time when I got to get my hands on tennis is about 17 or 18.</p><p>Playing them for fun while not knowing the whole rules is interesting as well, but never thought one day I would be a ballkid as the volunteer.</p><p>Just hope that won’t be too late.</p><hr><p>Things turns out to be, quite different.</p><p>I may just be too serious about this matter at first. Things just went well I suppose.</p><hr><h2 id="I-Rules"><a href="#I-Rules" class="headerlink" title="I. Rules"></a>I. Rules</h2><p>First things first, as a ballkid (caddy), it is needed to be clear about the rules of tennis, about how the game is played. We serve the players while minimizing our influences to the field.</p><p>The full rules are too long to retell, so I’ll just keep the essential parts here. Mainly about switching sides and turns of serving.</p><p>A tennis <strong>match</strong> is composed of <strong>points, games, and sets</strong>. A set consists of a numer of games (usually minimum 6), which in turn each consists of points. A set is won by the first side to win 6 games, with a margin of at least 2 games over the other side.</p><h3 id="Switching-sides"><a href="#Switching-sides" class="headerlink" title="Switching sides"></a>Switching sides</h3><p>After each single numbered game, players should have a rest and then switch sides, in the first break, players are not allowed to sit down and the time is shorter. A regular break has 90 seconds.</p><p>In a tie-break, switching sides will take place after each 6 points.</p><h3 id="Switching-server"><a href="#Switching-server" class="headerlink" title="Switching server"></a>Switching server</h3><p>In every game, the server remains the same (single player), and sever changes in the next game. The first server will be decided at the beginning of the match.</p><p>In a tie-break, each player will serve for two points alternately (other than the first point).</p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>So, actually, there’s no need to distinguish when the ball should go on which player’s side, just memorizing the orientation should do the work. The side where ball goes changes every two games. Considering the time to replacement of ballads, there’s similarity to situations in a tie-break, with the diference of points and games.</p><p>And in real tie-break, after single numbered or multiplier of 6 points, balls change sides.</p><p><del>Remember the things above and run quickly, you’ll be a good ballkid.</del></p><hr><h2 id="Ep-1-Exciting-Hangzhou"><a href="#Ep-1-Exciting-Hangzhou" class="headerlink" title="Ep. 1 Exciting Hangzhou"></a>Ep. 1 Exciting Hangzhou</h2><p>Never get the tatse of such naming. It’s odd.. such translation.</p><p>This reminds me of the days of ZJOI when I first started to write something in blog back in 2016. That was quite distant.</p><p>Maybe it’s better to review things in chronic order, at least to some extent.</p><h5 id="Wed"><a href="#Wed" class="headerlink" title="Wed."></a>Wed.</h5><p>Regular training. I don’t like to sit there and listening to … that kind of boring talk for nearly the whole morning. The bus ride is a little to long still, and the driver seemed to have a bad driving habit, which made me get carsick. Nothing others I assume.</p><h5 id="Thu"><a href="#Thu" class="headerlink" title="Thu."></a>Thu.</h5><p>The set in hotel is out of expectation. If that were true, the environment is really good. At least it would be a nice place to live. But not sure the conclusion would be the same after nearly two months. First there is no separate washing machine in every room. Then the desk in room is really small, not convenient at all. The frame of TV set is too suitable to get it out and connect any HDMI port on it. Maybe there’s little possibility left to use TV mode of NS.</p><p>Actually the given clothes are not bad. Just it’s a little pity that the hair style cannot be like in casual days. Though it could be hard to pick up a set.</p><p>Thankfully, I had good rests during nights. Though it was a bit of hot. Not sure if I set the AC too high. At first, I intended to play three houses at night, after all, the plot would be come to an end. However, I just failed to take weariness into consideration. As long as I got onto bed, I soon became sleepy. Never though I could fall asleep so soon. So in the later days I gave up this idea, and planned to sit on sofa chair and tried to do some left homeworks.</p><p>At the first day of match, I only brought some draft paper to do calculations, which I soon found my work hardly progressing. It was sunny, so that day’s match ends early, which left me just staring at the notes and could do nothing others.</p><p>Maybe it’s enough for such mundane daily routines.</p><p>It was quite surprising that on the first and second day, we and the other two group were supposed to use court C1, the semifinal field, and the first time we got there, the staff were cleaning up the court. With such chance, some of us tried to use the squeegee. Kinda dumb considering how we move clumsily along a line. So, naturally, not long after we hanged there for a while, we were called to move up to share court with other groups. The second day, we were locked out of C1, because they said the court was cleaned so cleanners temporarily locked the door. Of course we got into it after some time on messaging and calling. According to the coach, they should have known that the court is needed to be in use.</p><p>I mean, the point is, it is quite bewildering. Didn’t expect that the management inside the stadium was kinda … in a mess, or maybe that is how things really goes beneath the surface? I cannot tell.</p><p>Besides, I…</p><p>I think I can say that I saw something incredible. That, at least to me, is something valuable and cannot get from ordinary days withou seeing anyone else. I am shocked at the way of expression, the confidance and that kind of mindset. </p><p>Kinda envious about that.</p><p>I’m seeing things I doubted and searched for, and I got a satisfying answer. I don’t care if that is pretension or not, it exists, and that’s enough for my long last question.</p><p>And to be more precise, I think there could add one more threshold to the evaluation. I almost though I was wrong, but it turns out to be the very same. Things still goes like ever before, the model needs to be complicated to fit it.</p><p>Yet, there rises another question. It’s about gender. Not meaning the self-awareness that kind of stuff. I think it has something to do with the environment. Maybe just, I’ll have more clue after further observation.</p><h5 id="Introspection"><a href="#Introspection" class="headerlink" title="Introspection"></a>Introspection</h5><p>Though I hardly got the wrong side, but I kept checking information about points and side, which actually slows down my process of grabbing balls. It is not good to have different index in mind, but previously I have not set one for myself, I got to figure out certain brief standard.</p><p>I think I ran fast enough, at least faster than many of them, but I haven’t managed to find out a proper point of time to slow down and reach out for the ball. Because of this, as far as I can remember, I had missed at least three balls and then gotta turn back for another second to get it in hand. This is no good.</p><p>The third is the cooperation with my teammates, especially when I was runnng back and trying to catch ball from either side. That mistake really made me sad.</p><p>And I think there’s currently no more.</p><p>Records end here. Hope I’ll have chance to have another one.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;?</summary>
    
    
    
    <category term="Volunteer" scheme="https://redbowtie.github.io/categories/Volunteer/"/>
    
    
    <category term="Tennis" scheme="https://redbowtie.github.io/tags/Tennis/"/>
    
    <category term="Ballkid" scheme="https://redbowtie.github.io/tags/Ballkid/"/>
    
  </entry>
  
  <entry>
    <title>Dynamic Systems Simulation PART I</title>
    <link href="https://redbowtie.github.io/2022/03/21/DSS_1/"/>
    <id>https://redbowtie.github.io/2022/03/21/DSS_1/</id>
    <published>2022-03-21T10:32:00.000Z</published>
    <updated>2022-04-15T10:42:57.106Z</updated>
    
    <content type="html"><![CDATA[<p>This course really goes like a train.<span id="more"></span></p><h2 id="Lec-1-amp-2-Mathemetical-models"><a href="#Lec-1-amp-2-Mathemetical-models" class="headerlink" title="Lec 1&amp;2: Mathemetical models"></a>Lec 1&amp;2: Mathemetical models</h2><p>Went through the course plan quickly, surely a lot of topics, a lot of labs, and 3 tests.</p><h3 id="Mathematical-modelling-definitions"><a href="#Mathematical-modelling-definitions" class="headerlink" title="Mathematical modelling definitions"></a>Mathematical modelling definitions</h3><p><strong>Mathematical modelling</strong> is</p><ul><li><p>is the act of building a model.</p></li><li><p>a process in which real-life situations and relations in these</p><p>situations are expressed by using mathematics. (Haines and</p><p>Crouch, 2007)</p></li><li><p>the art of translating problems from an application area into</p><p>tractable mathematical formulations whose theoretical and numerical analysis provides insight, answers, and guidance useful for the originating application. (A. Neumaier, 2004)</p></li><li><p>a cyclical process in which real-life problems are translated into mathematical language, solved within a symbolic system, and the solutions tested back within the real-life system. (Verschaffel, Greer, and De Corte, 2002)</p></li></ul><p><strong>Mathematical model</strong></p><ul><li>a representation in mathematical terms of the behavior of real devices and objects. (What Is Mathematical Modeling? by Clive L. Dym)</li><li>a description of a system using mathematical concepts and language to facilitate proper explanation of a system or to study the effects of different components and to make predictions on patterns of behaviour. (Abramowitz and Stegun, 1968)</li></ul><p>The real systems are too complicated. <strong>Model shoud be simple as possible, but not simpler</strong>. And which can be used to predict the behaviour of the real system.</p><h3 id="Simulation"><a href="#Simulation" class="headerlink" title="Simulation"></a>Simulation</h3><p>Simulating is the act of using a model for a simulation.</p><p>Major steps</p><blockquote><ol><li>Formulate problem and model.</li><li>Construct system model.</li><li>Conduct simulation experiments.</li><li>Interpret results.</li><li>Document study.</li><li><p>Implement conclusions.</p><p>X. Validate model.</p></li></ol></blockquote><h3 id="Types-of-methematical-models"><a href="#Types-of-methematical-models" class="headerlink" title="Types of methematical models"></a>Types of methematical models</h3><p>Models can be divided to three types by used information about real objects or processes, according to adversary’s knowledge</p><p>• White-box • Black-box • Grey-box</p><h4 id="Black-box"><a href="#Black-box" class="headerlink" title="Black box"></a>Black box</h4><p>System which are modelled entirely based on experimental data (input-output measurements) are called black-box models. The user can observe the response (output) of the model for a certain stimulus (input) but has no information about the internal mechanism (principles).</p><h4 id="Gray-box"><a href="#Gray-box" class="headerlink" title="Gray-box"></a>Gray-box</h4><p>Most of the time, it’s better to benefit from the advantages of both methods. In this case we’ll end up with gray-box models.</p><p>Simplification examples2:</p><ul><li><p>Non-linear parameters or processes are often approximated by</p><p>linear ones.</p></li><li><p>Areas of physical detail are often simplified by averaging the localised properties.</p></li><li><p>Contact between one part of a model and another is sometimes considered perfect.</p></li></ul><h3 id="Model-Classification"><a href="#Model-Classification" class="headerlink" title="Model Classification"></a>Model Classification</h3><p> • Linear vs Nonlinear<br> • Static vs Dynamic<br> • Time-invariant vs Time-variant<br> • Discrete vs continuous<br> • Explicit vs Implicit<br> • Deterministic vs Probabilistic (stochastic). • etc.</p><h4 id="Linear-amp-Nonlinear"><a href="#Linear-amp-Nonlinear" class="headerlink" title="Linear &amp; Nonlinear"></a>Linear &amp; Nonlinear</h4><p>A linear mathematical model is governed by linear differential equations. A linear model is a model for which the superposition principle can be applied (Additivity and Homogeneity properties).</p><script type="math/tex; mode=display">y(\alpha u_1+\beta u_2)=\alpha y(u_1)+\beta y(u_2)</script><p>As for nonlinear, ones for which the principle of superposition does not apply.</p><h4 id="Static-amp-Dynamic"><a href="#Static-amp-Dynamic" class="headerlink" title="Static &amp; Dynamic"></a>Static &amp; Dynamic</h4><p>• Static models are not affected with time, only reply on present input.</p><p>• Dynamic models are affected with time</p><h4 id="Time-invariant-amp-Time-variant"><a href="#Time-invariant-amp-Time-variant" class="headerlink" title="Time-invariant &amp; Time-variant"></a>Time-invariant &amp; Time-variant</h4><p>• Time-invariant — the behaviour does not depends on time. If y(t) is a output for u(t), then y(t −τ) is a output for u(t −τ)</p><p>• Time-variant — output response depends on moment of observation as well as moment of input signal application.</p><h4 id="Discrete-amp-Continuous"><a href="#Discrete-amp-Continuous" class="headerlink" title="Discrete &amp; Continuous"></a>Discrete &amp; Continuous</h4><p>• Discrete system is affected by the state variable changes at a discrete point of time.</p><p>• Continuous system is affected by the state variable, which changes continuously as a function with time.</p><h4 id="Classification-by-sampling"><a href="#Classification-by-sampling" class="headerlink" title="Classification by sampling"></a>Classification by sampling</h4><p>See page 24, very direct.</p><hr><h2 id="Lec-3-amp-4-Linear-models"><a href="#Lec-3-amp-4-Linear-models" class="headerlink" title="Lec 3&amp;4: Linear models"></a>Lec 3&amp;4: Linear models</h2><h3 id="Linear-time-invariant-system-LTI"><a href="#Linear-time-invariant-system-LTI" class="headerlink" title="Linear time-invariant system (LTI)"></a>Linear time-invariant system (LTI)</h3><p>As the name suggest, any linear time-invariant (LTI) system has two defining properties: <strong>linearity and time invariance.</strong></p><h4 id="Linearity"><a href="#Linearity" class="headerlink" title="Linearity"></a>Linearity</h4><p>If input u1(t) produces response y1(t), input u2(t) produces response y2(t), …,and uk(t) produces response yk(t), then input $\sum_k c_ku_k(t)$ produces response $\sum_k c_ky_k(t),\ c_1,c_2,\dots,c_k$ Are real scalars.</p><h4 id="Time-invariance"><a href="#Time-invariance" class="headerlink" title="Time invariance"></a>Time invariance</h4><p>If input u(t) produces response y(t), then input u(t − τ) produces response y (t − τ ), where τ is a time delay.</p><h3 id="N-order-differential-equations"><a href="#N-order-differential-equations" class="headerlink" title="N-order differential equations"></a>N-order differential equations</h3><p>Linear dynamical models of continuous-time system could be given as n-order differential equations (DE) :</p><script type="math/tex; mode=display">y^{(n)}(t)+a_{n-1}y^{n-1}(t)+\dots+a_2\ddot{y}(t)+a_1\dot{y}(t)+a_0y(t)=\\=b_mu^{(m)}(t)+b_{m-1}u^{(m-1)}(t)+\dots+b_2\ddot{u}(t)+b_1\dot{u}(t)+b_0u(t)</script><h4 id="Causality-condition-for-DE"><a href="#Causality-condition-for-DE" class="headerlink" title="Causality condition for DE"></a>Causality condition for DE</h4><p>The LTI system is called <strong>causal</strong>, if $n\ge m$</p><h3 id="Differential-operator-and-Characteristic-equation"><a href="#Differential-operator-and-Characteristic-equation" class="headerlink" title="Differential operator and Characteristic equation"></a>Differential operator and Characteristic equation</h3><p>Some <strong>operator form</strong>, and characteristic equation, whoose <strong>roots</strong> determine a behavior of the system.</p><p>That can be demonstrate by a phase portrait.</p><h3 id="Behaviour-of-the-second-order-LTI-system"><a href="#Behaviour-of-the-second-order-LTI-system" class="headerlink" title="Behaviour of the second-order LTI system"></a>Behaviour of the second-order LTI system</h3><p>A <strong>phase portrait</strong> is a representative set of LTI system‘s solutions, plotted as parametric curves (with t as the parameter) on the Cartesian plane tracing the path of each particular solution ((x,y) = (y(t),y ̇(t)), −∞ &lt; t &lt; ∞.</p><p>The Cartesian plane where the phase portrait resides is called the <strong>phase plane.</strong></p><p>The parametric curves traced by the solutions for specific initial conditions are called <strong>phase trajectories.</strong></p><h3 id="Second-order-LTI-system"><a href="#Second-order-LTI-system" class="headerlink" title="Second order LTI system"></a>Second order LTI system</h3><p>Mainly the classification for different root conditions. Just like old courses or what learn from Dr.Can’s Ch.</p><ol><li><p>Roots are all <strong>real</strong> and <strong>negative</strong> - <strong>Stable</strong></p></li><li><p>Roots are all <strong>real</strong> and <strong>positive</strong> - <strong>Unstable</strong></p></li><li><p>Both <strong>real</strong> and is <strong>positive and negative respectively</strong> - <strong>Saddle</strong></p></li><li><p>Both <strong>complex</strong> and $Re(\lambda_1,\lambda_2)&lt;0$ - <strong>Stable focus</strong> </p></li><li><p>Both <strong>complex</strong> and $Re(\lambda_1,\lambda_2)&gt;0$ - <strong>Unstable focus</strong> </p></li><li><p>Both <strong>complex</strong> and $Re(\lambda_1,\lambda_2)=0$ - <strong>Center</strong> </p></li></ol><p>Followed by <strong>Laplace transformation</strong> and <strong>transfer function</strong>, which should be very familiar with.</p><h3 id="Control-System"><a href="#Control-System" class="headerlink" title="Control System"></a>Control System</h3><p>Feedback control (closed-loop) enables to achieve new parameters of the system.</p><p>The modal control is based on this idea. The input signal is set as</p><script type="math/tex; mode=display">u(t)=-\bold{K}x(t)</script><p>where K is k × n matrix of feed-back gain coefficients.</p><p>Thus the augmented system is described in State-Space representation as</p><script type="math/tex; mode=display">\dot{x}(t)=Ax(t)-BKx(t)\\=(A-BK)x(t)</script><p>Here F is a n × n matrix that describe augmented closed-loop system.</p><h2 id="Lec-4-amp-5-Nonlinear-systems"><a href="#Lec-4-amp-5-Nonlinear-systems" class="headerlink" title="Lec 4&amp;5: Nonlinear systems"></a>Lec 4&amp;5: Nonlinear systems</h2><h3 id="Definition-1"><a href="#Definition-1" class="headerlink" title="Definition 1."></a>Definition 1.</h3><p>The equilibrium point x = 0 <em>of</em> $\dot{x} = f(x)$ is</p><ul><li><p>stable if for each $\epsilon&gt;0$ There is $\delta&gt;0$ (dependent on $\epsilon$ ) such that</p><script type="math/tex; mode=display">||x(0)||<\delta \Rightarrow ||x(t)||<\epsilon, \forall t \geq 0</script></li><li><p>Unstable otherwise</p></li></ul><h3 id="Definition-2-Asymptotic-stability"><a href="#Definition-2-Asymptotic-stability" class="headerlink" title="Definition 2. Asymptotic stability"></a>Definition 2. Asymptotic stability</h3><p>Let the origin be an asymptotically stable equilibrium point of the system $x ̇ = f(x)$, where f is a locally Lipschitz function defined over a domain $D⊂\mathbb{R}^n (0∈D)$</p><h3 id="Definition-3-Exponential-Stability"><a href="#Definition-3-Exponential-Stability" class="headerlink" title="Definition 3. Exponential Stability"></a>Definition 3. Exponential Stability</h3><p><em>The equilibrium point</em> x = 0 <em>of</em> x ̇ = f(x) <em>is said to be exponentially stable if</em></p><script type="math/tex; mode=display">||x(t)||\leq k||x(0)||e^{-\lambda t},\  \forall t\geq 0,k\geq 1,\ \lambda>0, \forall||x(0)||<c</script><p>Some linearization and bifurcation, check slides for more detail.</p><h2 id="Lec-6-amp-7-Numerical-methods-for-ordinary-differential-equations-ODEs"><a href="#Lec-6-amp-7-Numerical-methods-for-ordinary-differential-equations-ODEs" class="headerlink" title="Lec 6&amp;7: Numerical methods for ordinary differential equations (ODEs)"></a>Lec 6&amp;7: Numerical methods for ordinary differential equations (ODEs)</h2><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p>Differential equations are an essential tool in a wide range of applications. Many phenomena can be modelled by a relationship between a function and its derivatives.</p><script type="math/tex; mode=display">f'(t)=lim_{\triangle t\rightarrow0}\frac{f(t+\triangle t)-f(t)}{\triangle t}</script><p>Differential equations can be divided into several types namely: • Ordinary Differential Equations<br> • Partial Differential Equations<br> • Linear Differential Equations</p><p>• Non-linear Differential equations<br> • Homogeneous Differential Equations<br> • Non-homogeneous Differential Equations</p><p>We will consider ordinary linear homogeneous and non-homogeneous differential equations.</p><h4 id="Why-we-use-numerical-solutions-of-differential-equations"><a href="#Why-we-use-numerical-solutions-of-differential-equations" class="headerlink" title="Why we use numerical solutions of differential equations?"></a>Why we use numerical solutions of differential equations?</h4><ul><li>Numerical solution of differential equations used, if impossible to find an analytic solution of the math system.</li><li>Also, computing machines usually work with numerical methods, so programming numerical methods are simpler than programming analytical methods.</li></ul><p>The use of <strong>high iteration frequencies</strong> produces a more realistic simulation than the lower frequency models. But high iteration frequencies <strong>produces a harder</strong> for computing machines</p><h3 id="Euler’s-method"><a href="#Euler’s-method" class="headerlink" title="Euler’s method"></a>Euler’s method</h3><p>The simplest of numerical methods is Euler’s method which is based directly on the geometric interpretation in observation.</p><script type="math/tex; mode=display">Y_{n+1} =Y_n +h·f(t_n,Y_n)</script><h4 id="Error-analysis"><a href="#Error-analysis" class="headerlink" title="Error analysis"></a>Error analysis</h4><p>Consider polynomial of second degree of the Taylor series:</p><script type="math/tex; mode=display">f(x)\approx f(a)+\frac{f'(a)}{1!}(x-a)+\frac{f''(a)}{2!}(x-a)^2.</script><script type="math/tex; mode=display">Y(t_{n+1})=Y(t_n)+hY'(t_n)+\frac{1}{2}h^2Y''(\xi_n),\ \xi\in[t_n,t_{n+1}]\\Y'(t_{n+1})-y_{n+1}=Y(t_n)-y_n+h[f(t_n,Y(t_n))-f(t_n,y_n)]+\frac{1}{2}h^2Y''(\xi_n)</script><p>Where $\frac{1}{2}h^2Y’’(\xi_n)$ - the truncation error</p><p>$Y(t_n)-y_n+h[f(t_n,Y(t_n))-f(t_n,y_n)]$ - the propagated error</p><p>Using the mean value theorem obtain</p><script type="math/tex; mode=display">f(t_n,Y(t_n))-f(t_n,y_n)=\frac{\partial f(t_n,\varsigma)}{\partial y}</script><p>For the global error:</p><script type="math/tex; mode=display">e_k\equiv Y(t_k)-y_k,\ k\leq 0, \xi\in[t_n;t_{n+1}]</script><blockquote><p><strong>General error</strong></p><script type="math/tex; mode=display">e_{n+1}=[1+h\frac{\partial f(t_n,\varsigma_n)}{\partial y}]e_n+\frac{1}{2}h^2Y''(\xi_n)</script></blockquote><h3 id="Euler-method-modifications"><a href="#Euler-method-modifications" class="headerlink" title="Euler method modifications"></a>Euler method modifications</h3><p>If $Y’(t)=f(t,Y(t))$, then</p><script type="math/tex; mode=display">Y(t)=Y_0+\int_{t_0}^{t}f(s,Y(s))ds=Y_0,\lim_{||\triangle t||\rightarrow0}\sum_{t=1}^n f(t,Y(t))\triangle t_i.</script><h4 id="Trapezoidal-Riemann-sum"><a href="#Trapezoidal-Riemann-sum" class="headerlink" title="Trapezoidal Riemann sum"></a>Trapezoidal Riemann sum</h4><script type="math/tex; mode=display">y_{n+1} =y_n +\frac{h}{2}(f(t_n,y_n)+f(t_{n+1},y_{n+1}))</script><p>and cuz $y_{n+1}$​ is unknown</p><script type="math/tex; mode=display">y_{n+1} =y_n +\frac{h}{2}(f(t_n,y_n)+f(t_{n+1},y_n+hf(t_n,y_n)))</script><h4 id="Midpont-Riemann-sum"><a href="#Midpont-Riemann-sum" class="headerlink" title="Midpont Riemann sum"></a>Midpont Riemann sum</h4><script type="math/tex; mode=display">y_{n+1}=y_n+hf(t_n+\frac{h}{2},y_{n+0.5})</script><p>Remember to replace $y_{n+0.5}$ with $\hat{y}=y_n+\frac{h}{2}f(t_n,y_n)$</p><h3 id="Taylor-methods"><a href="#Taylor-methods" class="headerlink" title="Taylor methods"></a>Taylor methods</h3><p>Use the quadratic Taylor approximation</p><script type="math/tex; mode=display">Y(t_{n+1})≈Y(t_n)+hY'(t_n)+ \frac{h}{2}Y''(t_n)</script><p>The truncation error: $T_{n+1}(Y)=\frac{1}{6}h^3Y’’’(\xi_n),\ \xi_n\in[t_n;t_{n+1}]$</p><p>See general in page 22.</p><h4 id="Error-analysis-1"><a href="#Error-analysis-1" class="headerlink" title="Error analysis"></a>Error analysis</h4><p>It’s an asymptotic error formula.</p><p>To avoid the need for the higher-order derivatives (in the Taylor method), the Runge - Kutta methods evaluate f(t,y) at more points, while attempting to retain the accuracy of the Taylor approximation.</p><p> Let’s take a look at Runge - Kutta method of order 2:</p><script type="math/tex; mode=display">y_{n+1}=y_n+hF(t_n,y_n,h), y_0=Y_0</script><p>See 24 for more detail.</p><h3 id="Runge-Kutta-methods"><a href="#Runge-Kutta-methods" class="headerlink" title="Runge - Kutta methods"></a>Runge - Kutta methods</h3><p>The explicit methods</p><script type="math/tex; mode=display">y_{n+1}=y_n+\sum_{i=1}^s b_i k_i</script><p>where</p><script type="math/tex; mode=display">k_1=hf(t_n,y_n)\\k_i=hf(t_n+c_i h,y_n+\sum_{j=1}^{i-1}a_{ij}k_j)</script><p>Note the construction of matrix of coefficients on page 29.</p><h3 id="Numerical-methods-in-Matlab"><a href="#Numerical-methods-in-Matlab" class="headerlink" title="Numerical methods in Matlab"></a>Numerical methods in Matlab</h3><p>In a Matlab, the choice of solver depends on many factors:</p><ol><li>System dynamics (stiff, nonstiff, linear, nonlinear) </li><li>Solution stability</li><li>Computation speed</li><li>Solver robustness</li></ol><h4 id="Model-states"><a href="#Model-states" class="headerlink" title="Model states:"></a>Model states:</h4><ul><li>Continuous solvers<br> Use numerical integration to compute continuous states of a model at the current time step based on the states at previous time steps and the state derivatives.</li><li>Discrete solvers<br> Primarily used for solving purely discrete models.</li></ul><h4 id="Computation-step-size"><a href="#Computation-step-size" class="headerlink" title="Computation step size:"></a>Computation step size:</h4><p>• Fixed-step solvers<br> Solve the model using the same step size from the beginning to the end of the simulation</p><p>• Variable-step solvers vary the step size during the simulation</p><h5 id="Explicit-form-of-ODE"><a href="#Explicit-form-of-ODE" class="headerlink" title="Explicit form of ODE"></a>Explicit form of ODE</h5><script type="math/tex; mode=display">F(x,y,y',\dots,y^{n-1})=y^{n}</script><h5 id="Implicit-form-of-ODE-usually-used-in-stiff-solvers"><a href="#Implicit-form-of-ODE-usually-used-in-stiff-solvers" class="headerlink" title="Implicit form of ODE (usually used in stiff solvers)"></a>Implicit form of ODE (usually used in stiff solvers)</h5><script type="math/tex; mode=display">F(x,y,y',\dots,y^{n-1},y^{n})=0</script><p>Check the provided diagram for reference. at Page 33.</p><p>Just like manual.</p><h5 id="Stiff-equation"><a href="#Stiff-equation" class="headerlink" title="Stiff equation"></a>Stiff equation</h5><p>A stiff equation is a differential equation for which certain numerical methods for solving the equation are numerically unstable.</p><p>The main idea is that the equation includes some terms that can lead to rapid variation in the solution</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><ol><li><p>About methods</p><p>1.1   Euler’s method plotting tangent lines with fixed step h, $Y_{n+1} = Y_n + hf (t_n , Y_n )$. The local error may become smaller, opposite global error only increase</p><p>1.2  Taylor methods use high order derivatives</p><p>1.3  Runge–Kutta methods. The idea of Runge–Kutta methods is to use</p><p>combinations of compositions of the right-side function of the equation to approximate the derivative terms to a required order</p></li><li><p>The use of high iteration frequencies produces a more realistic simulation than the lower frequency models. But high frequencies of iterations requires more computing power.</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;This course really goes like a train.</summary>
    
    
    
    <category term="Term6" scheme="https://redbowtie.github.io/categories/Term6/"/>
    
    
    <category term="Control" scheme="https://redbowtie.github.io/tags/Control/"/>
    
    <category term="System" scheme="https://redbowtie.github.io/tags/System/"/>
    
    <category term="Simulation" scheme="https://redbowtie.github.io/tags/Simulation/"/>
    
  </entry>
  
</feed>
